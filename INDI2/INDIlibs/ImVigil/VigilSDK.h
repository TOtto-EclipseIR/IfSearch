/****************************************************************************
**
** Namespace VigilSDK generated by dumpcpp from type library
** c:\Program Files (x86)\Vigil\SDK\VigilSDK.dll
**
****************************************************************************/

#ifndef QAX_DUMPCPP_VIGILSDK_H
#define QAX_DUMPCPP_VIGILSDK_H

// Define this symbol to __declspec(dllexport) or __declspec(dllimport)
#ifndef VIGILSDK_EXPORT
#define VIGILSDK_EXPORT
#endif

#include <qaxobject.h>
#include <qaxwidget.h>
#include <qdatetime.h>
#include <qpixmap.h>

struct IDispatch;


// Referenced namespace
namespace ATLPARSERLib {
    class IParser;
}

namespace ATLREQUESTLib {
    class IRequest;
}

namespace VBA {
    class _Collection;
}


namespace VigilSDK {

    enum EnumAlarmType {
        atUnknownAlarm          = -1,
        atDigitalInputAlarm     = 0,
        atMotionAlarm           = 1,
        atNetworkStatusAlarm    = 2,
        atLoiteringAlarm        = 3,
        atVATripwire            = 101,
        atVAOccupancy           = 102,
        atVALoitering           = 103,
        atVAMotion              = 104,
        atVADensity             = 105
    };

    enum EnumAudioSource {
        eAudioNone              = 0,
        eAudioHera              = 1,
        eAudioXecap             = 2,
        eAudioSoundcard         = 3,
        eAudioIP                = 4,
        eAudioHik               = 5
    };

    enum EnumCCResult {
        eGenFail                = -10000,
        eXferInProgress         = -9999,
        eNoPresets              = -9998,
        eNoNamedPresets         = -9997,
        eNoSuchPreset           = -9996,
        eNoPatterns             = -9995,
        eNoNamedPatterns        = -9994,
        eNoSuchPattern          = -9993,
        eNoEnhancements         = -9992,
        eNoSuchEnhancement      = -9991,
        eNoMenu                 = -9990,
        eNoSuchMenuCommand      = -9989,
        eNoSequences            = -9988,
        eNoNamedSequences       = -9987,
        eNoSuchSequence         = -9986,
        eInvalidSequenceParam   = -9985,
        eNoSuchKeypadCommand    = -9984,
        eNoMatrixCamera         = -9983,
        eCCOK                   = 1
    };

    enum EnumCameraType {
        eUnknownProtocol        = 0,
        ePelcoDProtocol         = 1,
        eDynaColorProtocol      = 2,
        ePelcoCC1400Protocol    = 3,
        ePelcoCM6700Protocol    = 4,
        ePanasonicCS854Protocol = 5,
        ePanasonicMP204Protocol = 6,
        ePelcoGenexProtocol     = 7,
        ePelcoCM6700ProtocolLocal= 8,
        eVCLProtocol            = 9,
        eKalatelProtocol        = 10,
        eSensormaticProtocol    = 11,
        eMegapowerMatrixProtocol= 12,
        eScanDomeProtocol       = 13,
        eAxisProtocol           = 14,
        eSmartScanProtocol      = 15,
        ePanasonicNM100Protocol = 16,
        ePelcoCM6800Protocol    = 17,
        ePelcoCM6800ProtocolLocal= 18,
        ePanasonicNW474sProtocol= 19,
        ePanasonicNP1004Protocol= 20,
        ePelcoDProtocolFixedZFSpeed= 21,
        eSonyRZ25Protocol       = 22,
        eLGSpeedDomeProtocol    = 23,
        eToshibaIKWB21AProtocol = 24,
        eMeritLilinProtocol     = 25,
        eBoschAutodomeProtocol  = 26,
        ePelcoPProtocol         = 27,
        eCanonVBC50xProtocol    = 28,
        eSamsungPTZProtocol     = 29,
        eSanyoP95Protocol       = 30,
        eMeritLilinSerialProtocol= 31,
        eVivotekPT7137Protocol  = 32,
        eHikVisionProtocol      = 33,
        ePanasonicWJSX550AProtocol= 34,
        ePanasonicWJSX550AProtocolLocal= 35
    };

    enum EnumClientResolution {
        eClientLoRes            = 176,
        eClientMedRes           = 352,
        eClientHiRes            = 704
    };

    enum EnumComartBoard {
        eMIS8                   = 0,
        eMIS16                  = 1,
        eMID8                   = 2,
        eMID16                  = 3,
        eHICAP50                = 4,
        eHICAP100               = 5,
        eHICAP200               = 6,
        eZEUS16                 = 7,
        eHICAP25                = 8,
        eXECAP200               = 11,
        eXECAP100               = 12,
        eXECAP50                = 13,
        eNOCARD                 = 14,
        eACTI4100               = 15,
        eXED4010                = 16,
        eXED4020                = 17,
        eXED4040                = 18,
        eHIKx                   = 19
    };

    enum EnumCompressionQuality {
        eCompLow                = 20,
        eCompNormal             = 40,
        eCompHigh               = 60,
        eCompSuperHigh          = 80
    };

    enum EnumCustomAlarmDataType {
        eUnknownCustomAlarmData = -1,
        eJPGCustomAlarmData     = 0
    };

    enum EnumDVRStatus {
        eDVRStatusOK            = 0,
        eDVRStatusError         = 1,
        eDVRStatusBusy          = 2
    };

    enum EnumEnhancement {
        eColor                  = 0,
        eSenseUp                = 1,
        eBackLight              = 2,
        eWhiteBalance           = 3,
        eAutoFocus              = 4
    };

    enum EnumFontSize {
        eFontSmallest           = 6,
        eFontSmaller            = 8,
        eFontMedium             = 10,
        eFontLarger             = 12,
        eFontLargest            = 14
    };

    enum EnumFontWeight {
        eFontNormal             = -1,
        eFontBold               = 1
    };

    enum EnumKeypadCommand {
        e0                      = 0,
        e1                      = 1,
        e2                      = 2,
        e3                      = 3,
        e4                      = 4,
        e5                      = 5,
        e6                      = 6,
        e7                      = 7,
        e8                      = 8,
        e9                      = 9,
        eAck                    = 10,
        eF1                     = 11,
        eF2                     = 12,
        eF3                     = 13
    };

    enum EnumLayout {
        e1by1                   = 0,
        e2By2                   = 1,
        e3By3                   = 2,
        e4By4                   = 3,
        e1And5                  = 4,
        e1And7                  = 5,
        e2And8                  = 6,
        e1And12                 = 7,
        e1And4                  = 8,
        e3And4                  = 9,
        e5by5                   = 10,
        e6by6                   = 11
    };

    enum EnumLiveSpeed {
        eSlow                   = 1,
        eMedium                 = 5,
        eFast                   = 10,
        eTurbo                  = 20,
        eMaximum                = 50
    };

    enum EnumMenuCommand {
        eMenuOn                 = 0,
        eMenuOff                = 1,
        eMenuUp                 = 2,
        eMenuDown               = 3,
        eMenuLeft               = 4,
        eMenuRight              = 5,
        eMenuSet                = 6,
        eMenuSpecial            = 7,
        eMenuStop               = 8
    };

    enum EnumPlayMode {
        eBackwards              = 0,
        eStop                   = 1,
        eForwards               = 2
    };

    enum EnumPlaybackControlCommand {
        ePlaybackForward        = 0,
        ePlaybackBackward       = 1,
        ePlaybackPause          = 2,
        ePlaybackStepForward    = 3,
        ePlaybackStepBackward   = 4,
        ePlaybackLastFrame      = 5,
        ePlaybackFirstFrame     = 6,
        ePlaybackFastForward    = 7,
        ePlaybackFastBackward   = 8
    };

    enum EnumRecordMode {
        eAny                    = -1,
        eConstant               = 0,
        eMotion                 = 1,
        eAlarm                  = 2,
        eSchedule               = 3,
        eMotionAlarm            = 4
    };

    enum EnumRecordResolution {
        eRecordLoRes            = 4,
        eRecordMedRes           = 3,
        eRecordHiRes            = 2
    };

    enum EnumRecordStatus {
        eNoRecording            = 0,
        eRecording              = 1,
        ePostRecording          = 2,
        eIndeterminate          = 99
    };

    enum EnumVARuleType {
        eVAUnknown              = 0,
        eVATripwire             = 1,
        eVAOccupancy            = 2,
        eVALoitering            = 3,
        eVAMotion               = 4,
        eVADensity              = 5,
        evaappear               = 6,
        eVADisapper             = 7,
        eVATamper               = 8,
        eVAMTripwire            = 9,
        eVARuleEnd              = 10
    };

    enum EnumVigilPermission {
        ePermSettings           = 50,
        ePermUsersTab           = 51,
        ePermDVRSettingsTab     = 52,
        ePermMediaDrivesTab     = 53,
        ePermCOMPortsTab        = 54,
        ePermRecorder           = 55,
        ePermRelayAlarmsTab     = 56,
        ePermDataTab            = 57,
        ePermCameraSetupTab     = 58,
        ePermCodecSettings      = 59,
        ePermSearchLockout      = 60,
        ePermLiveViewer         = 61,
        ePermAudioSettingsTab   = 62,
        ePermLiveFeedSpeedLimit = 63,
        ePermAudioRecorder      = 64,
        ePermExportBrowser      = 65,
        ePermSocketActivity     = 66,
        ePermToolbarEXE         = 68,
        ePermExportFootage      = 69,
        ePermExitVigil          = 75,
        ePermShutDown           = 80,
        ePermPTZ                = 90,
        ePermAnalogOutConfig    = 91,
        ePermSequenceControl    = 92,
        ePermVPOS               = 93,
        ePermPeopleCountingData = 94,
        ePermCam0               = 100,
        ePermCam1               = 200,
        ePermCam2               = 300,
        ePermCam3               = 400,
        ePermCam4               = 500,
        ePermCam5               = 600,
        ePermCam6               = 700,
        ePermCam7               = 800,
        ePermCam8               = 900,
        ePermCam9               = 1000,
        ePermCam10              = 1100,
        ePermCam11              = 1200,
        ePermCam12              = 1300,
        ePermCam13              = 1400,
        ePermCam14              = 1500,
        ePermCam15              = 1600,
        ePermCam16              = 1700,
        ePermCam17              = 1800,
        ePermCam18              = 1900,
        ePermCam19              = 2000,
        ePermCam20              = 2100,
        ePermCam21              = 2200,
        ePermCam22              = 2300,
        ePermCam23              = 2400,
        ePermCam24              = 2500,
        ePermCam25              = 2600,
        ePermCam26              = 2700,
        ePermCam27              = 2800,
        ePermCam28              = 2900,
        ePermCam29              = 3000,
        ePermCam30              = 3100,
        ePermCam31              = 3200,
        ePermChatAutoReply      = 3300,
        ePermUpdateConf         = 3400,
        ePermAudioLive          = 3500,
        ePermAudioPlayback      = 3600,
        ePermAudioExport        = 3650,
        ePermAudioTalk          = 3670,
        ePermChannel0           = 3700,
        ePermChannel1           = 3800,
        ePermChannel2           = 3900,
        ePermChannel3           = 4000,
        ePermChannel4           = 4100,
        ePermChannel5           = 4200,
        ePermChannel6           = 4300,
        ePermChannel7           = 4400,
        ePermChannel8           = 4500,
        ePermChannel9           = 4600,
        ePermChannel10          = 4700,
        ePermChannel11          = 4800,
        ePermChannel12          = 4900,
        ePermChannel13          = 5000,
        ePermChannel14          = 5100,
        ePermChannel15          = 5200,
        ePermChannel16          = 5300,
        ePermChannel17          = 5400,
        ePermChannel18          = 5500,
        ePermChannel19          = 5600,
        ePermChannel20          = 5700,
        ePermChannel21          = 5800,
        ePermChannel22          = 5900,
        ePermChannel23          = 6000,
        ePermChannel24          = 6100,
        ePermChannel25          = 6200,
        ePermChannel26          = 6300,
        ePermChannel27          = 6400,
        ePermChannel28          = 6500,
        ePermChannel29          = 6600,
        ePermChannel30          = 6700,
        ePermChannel31          = 6800,
        ePermChannel32          = 6900,
        ePermChannel33          = 7000,
        ePermChannel34          = 7100,
        ePermChannel35          = 7200,
        ePermChannel36          = 7300,
        ePermChannel37          = 7400,
        ePermChannel38          = 7500,
        ePermChannel39          = 7600,
        ePermChannel40          = 7700,
        ePermChannel41          = 7800,
        ePermChannel42          = 7900,
        ePermChannel43          = 8000,
        ePermChannel44          = 8100,
        ePermChannel45          = 8200,
        ePermChannel46          = 8300,
        ePermChannel47          = 8400,
        ePermChannel48          = 8500,
        ePermChannel49          = 8600,
        ePermChannel50          = 8700,
        ePermChannel51          = 8800,
        ePermChannel52          = 8900,
        ePermChannel53          = 9000,
        ePermChannel54          = 9100,
        ePermChannel55          = 9200,
        ePermChannel56          = 9300,
        ePermChannel57          = 9400,
        ePermChannel58          = 9500,
        ePermChannel59          = 9600,
        ePermChannel60          = 9700,
        ePermChannel61          = 9800,
        ePermChannel62          = 9900,
        ePermChannel63          = 10000,
        ePermVPOSAdmin          = 10100
    };

    enum EnumZoomCoordType {
        eScreenCoords           = 0,
        eSourceCoords           = 1
    };

// forward declarations
    enum EnumRecordMode;
    enum EnumPlayMode;
    enum EnumLiveSpeed;
    enum EnumCompressionQuality;
    enum EnumClientResolution;
    enum EnumRecordStatus;
    enum EnumRecordResolution;
    enum EnumComartBoard;
    enum EnumVigilPermission;
    enum EnumFontSize;
    enum EnumFontWeight;
    enum EnumLayout;
    enum EnumEnhancement;
    enum EnumCameraType;
    enum EnumKeypadCommand;
    enum EnumCCResult;
    enum EnumMenuCommand;
    enum EnumAudioSource;
    enum EnumZoomCoordType;
    enum EnumVARuleType;
    enum EnumPlaybackControlCommand;
    enum EnumDVRStatus;
    enum EnumAlarmType;
    enum EnumCustomAlarmDataType;
    class _CVigilDVR;
    class _CVigilResult;
    class _CVigilCameraInfo;
    class _CVigilLiveFeed;
    class _CVigilLiveAudioFeed;
    class _CVigilAudioTalk;
    class _CVigilPlayback;
    class _CVigilCameraControl;
    class _CVigilRemotePlayback;
    class _CRect;
    class _CVigilAlarm;
    enum EnumRecordMode;
    enum EnumPlayMode;
    enum EnumLiveSpeed;
    enum EnumCompressionQuality;
    enum EnumClientResolution;
    enum EnumRecordStatus;
    enum EnumRecordResolution;
    enum EnumComartBoard;
    enum EnumVigilPermission;
    enum EnumFontSize;
    enum EnumFontWeight;
    enum EnumLayout;
    enum EnumEnhancement;
    enum EnumCameraType;
    enum EnumKeypadCommand;
    enum EnumCCResult;
    enum EnumMenuCommand;
    enum EnumAudioSource;
    enum EnumZoomCoordType;
    enum EnumVARuleType;
    enum EnumPlaybackControlCommand;
    enum EnumDVRStatus;
    enum EnumAlarmType;
    enum EnumCustomAlarmDataType;

class VIGILSDK_EXPORT _CVigilLiveFeed : public QAxObject
{
public:
    _CVigilLiveFeed(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property CameraName
    */
    inline QString CameraName() const; //Returns the value of CameraName

    /*
    Property CameraNumber
    */
    inline int CameraNumber() const; //Returns the value of CameraNumber

    /*
    Property CaptureFPS
    */
    inline double CaptureFPS() const; //Returns the value of CaptureFPS

    /*
    Property DVR
    */
    inline VigilSDK::_CVigilDVR* DVR() const; //Returns the value of DVR

    /*
    Property FeedSpeed
    */
    inline VigilSDK::EnumLiveSpeed FeedSpeed() const; //Returns the value of FeedSpeed
    inline void SetFeedSpeed(VigilSDK::EnumLiveSpeed value); //Sets the value of the FeedSpeed property

    /*
    Property HWndStatus
    */
    inline int HWndStatus() const; //Returns the value of HWndStatus
    inline void SetHWndStatus(int value); //Sets the value of the HWndStatus property

    /*
    Property KBPerFrame
    */
    inline double KBPerFrame() const; //Returns the value of KBPerFrame

    /*
    Property MotionBlocks
    */
    inline QByteArray MotionBlocks() const; //Returns the value of MotionBlocks

    /*
    Property OSDVisible
    */
    inline bool OSDVisible() const; //Returns the value of OSDVisible
    inline void SetOSDVisible(bool value); //Sets the value of the OSDVisible property

    /*
    Property RecordMode
    */
    inline VigilSDK::EnumRecordMode RecordMode() const; //Returns the value of RecordMode

    /*
    Property RecordStatus
    */
    inline VigilSDK::EnumRecordStatus RecordStatus() const; //Returns the value of RecordStatus

    /*
    Property ReducedResolution
    */
    inline bool ReducedResolution() const; //Returns the value of ReducedResolution
    inline void SetReducedResolution(bool value); //Sets the value of the ReducedResolution property

    /*
    Property Running
    */
    inline bool Running() const; //Returns the value of Running

    /*
    Property SignalLoss
    */
    inline bool SignalLoss() const; //Returns the value of SignalLoss

    /*
    Property SubStream
    */
    inline bool SubStream() const; //Returns the value of SubStream
    inline void SetSubStream(bool value); //Sets the value of the SubStream property

    /*
    Property TimestampVisible
    */
    inline bool TimestampVisible() const; //Returns the value of TimestampVisible
    inline void SetTimestampVisible(bool value); //Sets the value of the TimestampVisible property

    /*
    Property TransferMotionBlocks
    */
    inline bool TransferMotionBlocks() const; //Returns the value of TransferMotionBlocks
    inline void SetTransferMotionBlocks(bool value); //Sets the value of the TransferMotionBlocks property

    /*
    Property UserCaption
    */
    inline QString UserCaption() const; //Returns the value of UserCaption
    inline void SetUserCaption(const QString& value); //Sets the value of the UserCaption property

    /*
    Property VAEnabled
    */
    inline bool VAEnabled() const; //Returns the value of VAEnabled
    inline void SetVAEnabled(bool value); //Sets the value of the VAEnabled property

    /*
    Property VideoInputHeight
    */
    inline int VideoInputHeight() const; //Returns the value of VideoInputHeight

    /*
    Property VideoInputWidth
    */
    inline int VideoInputWidth() const; //Returns the value of VideoInputWidth

    /*
    Method InitiateStopFeed
    */
    inline void InitiateStopFeed();

    /*
    Method OSDAddString
    */
    inline void OSDAddString(const QString& sLine);

    /*
    Method OSDSetConfig
    */
    inline void OSDSetConfig();

    /*
    Method OSDSetConfig
    */
    inline void OSDSetConfig(int nDwellTime);

    /*
    Method OSDSetConfig
    */
    inline void OSDSetConfig(int nDwellTime, int nLines);

    /*
    Method OSDSetConfig
    */
    inline void OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor);

    /*
    Method OSDSetConfig
    */
    inline void OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize);

    /*
    Method OSDSetConfig
    */
    inline void OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize, const QColor& nFontColor);

    /*
    Method OSDSetConfig
    */
    inline void OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize, const QColor& nFontColor, VigilSDK::EnumFontWeight nFontWeight);

    /*
    Method PutZoom
    */
    inline void PutZoom(bool bEnableZoom, int nLeft, int nTop, int nRight, int nBottom, VigilSDK::EnumZoomCoordType eZoomCoordType);

    /*
    Method RefreshScreen
    */
    inline void RefreshScreen();

    /*
    Method ResumeThread
    */
    inline void ResumeThread();

    /*
    Method SaveSnapshot
    */
    inline bool SaveSnapshot(const QString& sFileName);

    /*
    Method SaveSnapshot
    */
    inline bool SaveSnapshot(const QString& sFileName, bool bAsJPEG);

    /*
    Method SaveSnapshot
    */
    inline bool SaveSnapshot(const QString& sFileName, bool bAsJPEG, int nJPEGQuality);

    /*
    Method StopFeed
    */
    inline void StopFeed();

    /*
    Method SuspendThread
    */
    inline void SuspendThread();

    /*
    Method View
    */
    inline bool View(int nCameraNumber, int HWnd);

    /*
    Method ViewRegister
    */
    inline bool ViewRegister(int nTerminalNumber, int nRegisterNumber, int HWnd);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT _CVigilDVR : public QAxObject
{
public:
    _CVigilDVR(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Administrator
    */
    inline bool Administrator() const; //Returns the value of Administrator

    /*
    Property CameraCount
    */
    inline int CameraCount() const; //Returns the value of CameraCount

    /*
    Property CaptureCard
    */
    inline VigilSDK::EnumComartBoard CaptureCard() const; //Returns the value of CaptureCard

    /*
    Property DayLightSavings
    */
    inline bool DayLightSavings() const; //Returns the value of DayLightSavings

    /*
    Property LoggedOn
    */
    inline bool LoggedOn() const; //Returns the value of LoggedOn

    /*
    Property RemoteHost
    */
    inline QString RemoteHost() const; //Returns the value of RemoteHost
    inline void SetRemoteHost(const QString& value); //Sets the value of the RemoteHost property

    /*
    Property RemotePort
    */
    inline int RemotePort() const; //Returns the value of RemotePort
    inline void SetRemotePort(int value); //Sets the value of the RemotePort property

    /*
    Property ServerGUID
    */
    inline QString ServerGUID() const; //Returns the value of ServerGUID

    /*
    Property ShowSocketError
    */
    inline bool ShowSocketError() const; //Returns the value of ShowSocketError
    inline void SetShowSocketError(bool value); //Sets the value of the ShowSocketError property

    /*
    Property ShowSocketStatus
    */
    inline bool ShowSocketStatus() const; //Returns the value of ShowSocketStatus
    inline void SetShowSocketStatus(bool value); //Sets the value of the ShowSocketStatus property

    /*
    Property StandardTimeZone
    */
    inline int StandardTimeZone() const; //Returns the value of StandardTimeZone

    /*
    Method AddGroup
    */
    inline VigilSDK::_CVigilResult* AddGroup(const QString& sGroupName);

    /*
    Method AddUser
    */
    inline VigilSDK::_CVigilResult* AddUser(const QString& sUserName, const QString& sPassword);

    /*
    Method AdjustLiveClientQuality
    */
    inline VigilSDK::_CVigilResult* AdjustLiveClientQuality(int nCameraNumber, VigilSDK::EnumCompressionQuality nQuality);

    /*
    Method AdjustLiveClientResolution
    */
    inline VigilSDK::_CVigilResult* AdjustLiveClientResolution(int nCameraNumber, VigilSDK::EnumClientResolution nResolution);

    /*
    Method AdjustRecordingToDefaultIPS
    */
    inline VigilSDK::_CVigilResult* AdjustRecordingToDefaultIPS(int nCameraNumber);

    /*
    Method AdjustRecordingToMaxIPS
    */
    inline VigilSDK::_CVigilResult* AdjustRecordingToMaxIPS(int nCameraNumber);

    /*
    Method AssignGroupPermission
    */
    inline VigilSDK::_CVigilResult* AssignGroupPermission(const QString& sGroupName, VigilSDK::EnumVigilPermission ePermID);

    /*
    Method AssignUserGroup
    */
    inline VigilSDK::_CVigilResult* AssignUserGroup(const QString& sUserName, const QString& sGroupName);

    /*
    Method CheckServer
    */
    inline VigilSDK::_CVigilResult* CheckServer();

    /*
    Method CloseChannelFile
    */
    inline VigilSDK::_CVigilResult* CloseChannelFile(int nCameraNumber);

    /*
    Method CreateAudioTalkObject
    */
    inline VigilSDK::_CVigilAudioTalk* CreateAudioTalkObject();

    /*
    Method CreateCameraControlObject
    */
    inline VigilSDK::_CVigilCameraControl* CreateCameraControlObject();

    /*
    Method CreateLiveAudioFeedObject
    */
    inline VigilSDK::_CVigilLiveAudioFeed* CreateLiveAudioFeedObject();

    /*
    Method CreateLiveFeedObject
    */
    inline VigilSDK::_CVigilLiveFeed* CreateLiveFeedObject();

    /*
    Method CreatePlaybackObject
    */
    inline VigilSDK::_CVigilPlayback* CreatePlaybackObject();

    /*
    Method CreateRemotePlaybackObject
    */
    inline VigilSDK::_CVigilRemotePlayback* CreateRemotePlaybackObject();

    /*
    Method ForceStartAudio
    */
    inline VigilSDK::_CVigilResult* ForceStartAudio(int nChannel);

    /*
    Method ForceStartCamera
    */
    inline VigilSDK::_CVigilResult* ForceStartCamera(int nCameraNumber);

    /*
    Method ForceStopAudio
    */
    inline VigilSDK::_CVigilResult* ForceStopAudio(int nChannel);

    /*
    Method ForceStopCamera
    */
    inline VigilSDK::_CVigilResult* ForceStopCamera(int nCameraNumber);

    /*
    Method GetAudioInfo
    */
    inline VigilSDK::_CVigilResult* GetAudioInfo();

    /*
    Method GetCameraFromRegister
    */
    inline VigilSDK::_CVigilResult* GetCameraFromRegister(int nTerm, int nRegNum);

    /*
    Method GetCameraInfo
    */
    inline VigilSDK::_CVigilResult* GetCameraInfo();

    /*
    Method GetCameraNames
    */
    inline VigilSDK::_CVigilResult* GetCameraNames();

    /*
    Method GetDIOStatus
    */
    inline VigilSDK::_CVigilResult* GetDIOStatus();

    /*
    Method GetGroupPermissions
    */
    inline VigilSDK::_CVigilResult* GetGroupPermissions(QString& sGroupName);

    /*
    Method GetGroupUsers
    */
    inline VigilSDK::_CVigilResult* GetGroupUsers(QString& sGroupName);

    /*
    Method GetGroups
    */
    inline VigilSDK::_CVigilResult* GetGroups();

    /*
    Method GetPOSMappings
    */
    inline VigilSDK::_CVigilResult* GetPOSMappings();

    /*
    Method GetPOSPriorityCameras
    */
    inline VigilSDK::_CVigilResult* GetPOSPriorityCameras();

    /*
    Method GetUsers
    */
    inline VigilSDK::_CVigilResult* GetUsers();

    /*
    Method GetVASettings
    */
    inline VigilSDK::_CVigilResult* GetVASettings(int nCamera);

    /*
    Method HasPermission
    */
    inline bool HasPermission(VigilSDK::EnumVigilPermission nPermID);

    /*
    Method HasPermissionToAudioChannel
    */
    inline bool HasPermissionToAudioChannel(int nAudioChannel);

    /*
    Method HasPermissionToCamera
    */
    inline bool HasPermissionToCamera(int nCameraNumber);

    /*
    Method IsSpecialModuleRegistered
    */
    inline VigilSDK::_CVigilResult* IsSpecialModuleRegistered(int nModule);

    /*
    Method Login
    */
    inline VigilSDK::_CVigilResult* Login(const QString& sUserName, const QString& sPassword);

    /*
    Method Login
    */
    inline VigilSDK::_CVigilResult* Login(const QString& sUserName, const QString& sPassword, bool& bHashed);

    /*
    Method Logout
    */
    inline void Logout();

    /*
    Method OSDAddString
    */
    inline VigilSDK::_CVigilResult* OSDAddString(int nCameraNumber, const QString& sLine);

    /*
    Method OSDClear
    */
    inline VigilSDK::_CVigilResult* OSDClear(int nCameraNumber);

    /*
    Method OSDClear
    */
    inline VigilSDK::_CVigilResult* OSDClear(int nCameraNumber, bool bClearCaption);

    /*
    Method OSDGetVisible
    */
    inline VigilSDK::_CVigilResult* OSDGetVisible(int nCameraNumber);

    /*
    Method OSDSetConfig
    */
    inline VigilSDK::_CVigilResult* OSDSetConfig();

    /*
    Method OSDSetConfig
    */
    inline VigilSDK::_CVigilResult* OSDSetConfig(int nDwellTime);

    /*
    Method OSDSetConfig
    */
    inline VigilSDK::_CVigilResult* OSDSetConfig(int nDwellTime, int nLines);

    /*
    Method OSDSetConfig
    */
    inline VigilSDK::_CVigilResult* OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor);

    /*
    Method OSDSetConfig
    */
    inline VigilSDK::_CVigilResult* OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize);

    /*
    Method OSDSetConfig
    */
    inline VigilSDK::_CVigilResult* OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize, const QColor& nFontColor);

    /*
    Method OSDSetConfig
    */
    inline VigilSDK::_CVigilResult* OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize, const QColor& nFontColor, VigilSDK::EnumFontWeight nFontWeight);

    /*
    Method OSDSetFixedCaption
    */
    inline VigilSDK::_CVigilResult* OSDSetFixedCaption(int nCameraNumber);

    /*
    Method OSDSetFixedCaption
    */
    inline VigilSDK::_CVigilResult* OSDSetFixedCaption(int nCameraNumber, const QString& sCaption);

    /*
    Method OSDSetOffsets
    */
    inline VigilSDK::_CVigilResult* OSDSetOffsets(int nCameraNumber, int nXOffset, int nYOffset);

    /*
    Method OSDSetVisible
    */
    inline VigilSDK::_CVigilResult* OSDSetVisible(int nCameraNumber, bool bEnable);

    /*
    Method RemoveGroup
    */
    inline VigilSDK::_CVigilResult* RemoveGroup(const QString& sGroupName);

    /*
    Method RemoveGroupPermission
    */
    inline VigilSDK::_CVigilResult* RemoveGroupPermission(const QString& sGroupName, VigilSDK::EnumVigilPermission ePermID);

    /*
    Method RemoveUser
    */
    inline VigilSDK::_CVigilResult* RemoveUser(const QString& sUserName);

    /*
    Method SearchFootage
    */
    inline VigilSDK::_CVigilResult* SearchFootage(const QDateTime& dtFrom, const QString& dtTo);

    /*
    Method SearchFootage
    */
    inline VigilSDK::_CVigilResult* SearchFootage(const QDateTime& dtFrom, const QString& dtTo, VigilSDK::EnumRecordMode nMode);

    /*
    Method SelectLayout
    */
    inline VigilSDK::_CVigilResult* SelectLayout(VigilSDK::EnumLayout nLayout);

    /*
    Method SelectPage
    */
    inline VigilSDK::_CVigilResult* SelectPage(int nPageNumber);

    /*
    Method SetCameraInfo
    */
    inline VigilSDK::_CVigilResult* SetCameraInfo(_CVigilCameraInfo** info);

    /*
    Method SetDOStatus
    */
    inline VigilSDK::_CVigilResult* SetDOStatus(int nDigitalOutputNumber, bool bEnabled);

    /*
    Method StartCamera
    */
    inline VigilSDK::_CVigilResult* StartCamera(int nCameraNumber);

    /*
    Method StopCamera
    */
    inline VigilSDK::_CVigilResult* StopCamera(int nCameraNumber);

    /*
    Method SwitchAnalogMux
    */
    inline VigilSDK::_CVigilResult* SwitchAnalogMux(int nMonitor, VigilSDK::EnumLayout nLayout);

    /*
    Method SwitchAnalogMux
    */
    inline VigilSDK::_CVigilResult* SwitchAnalogMux(int nMonitor, VigilSDK::EnumLayout nLayout, int nPage);

    /*
    Method SwitchAnalogOutput
    */
    inline VigilSDK::_CVigilResult* SwitchAnalogOutput(int nCameraNumber);

    /*
    Method SwitchAnalogOutput
    */
    inline VigilSDK::_CVigilResult* SwitchAnalogOutput(int nCameraNumber, int nMonitorNumber);

    /*
    Method SystemReboot
    */
    inline VigilSDK::_CVigilResult* SystemReboot();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT _CVigilResult : public QAxObject
{
public:
    _CVigilResult(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AckResult
    */
    inline bool AckResult() const; //Returns the value of AckResult

    /*
    Property AdjustableClientFeed
    */
    inline bool AdjustableClientFeed() const; //Returns the value of AdjustableClientFeed

    /*
    Property Administrator
    */
    inline bool Administrator() const; //Returns the value of Administrator

    /*
    Property AudioChannelCount
    */
    inline int AudioChannelCount() const; //Returns the value of AudioChannelCount

    /*
    Property CPU
    */
    inline int CPU() const; //Returns the value of CPU

    /*
    Property CameraCount
    */
    inline int CameraCount() const; //Returns the value of CameraCount

    /*
    Property Command
    */
    inline QString Command() const; //Returns the value of Command

    /*
    Property DVRBoard
    */
    inline VigilSDK::EnumComartBoard DVRBoard() const; //Returns the value of DVRBoard

    /*
    Property HResult
    */
    inline QString HResult() const; //Returns the value of HResult

    /*
    Property LimitSearchToOneDay
    */
    inline bool LimitSearchToOneDay() const; //Returns the value of LimitSearchToOneDay

    /*
    Property LoggedOn
    */
    inline bool LoggedOn() const; //Returns the value of LoggedOn

    /*
    Property MaxUsers
    */
    inline int MaxUsers() const; //Returns the value of MaxUsers

    /*
    Property MemTotal
    */
    inline QString MemTotal() const; //Returns the value of MemTotal

    /*
    Property MemUsage
    */
    inline QString MemUsage() const; //Returns the value of MemUsage

    /*
    Property MinClientVersionMajor
    */
    inline QString MinClientVersionMajor() const; //Returns the value of MinClientVersionMajor

    /*
    Property MinClientVersionMinor
    */
    inline QString MinClientVersionMinor() const; //Returns the value of MinClientVersionMinor

    /*
    Property MinClientVersionRevision
    */
    inline QString MinClientVersionRevision() const; //Returns the value of MinClientVersionRevision

    /*
    Property NumClientConnections
    */
    inline int NumClientConnections() const; //Returns the value of NumClientConnections

    /*
    Property POSRunning
    */
    inline bool POSRunning() const; //Returns the value of POSRunning

    /*
    Property ReducedResolutionSupported
    */
    inline bool ReducedResolutionSupported() const; //Returns the value of ReducedResolutionSupported

    /*
    Property ServerRunning
    */
    inline bool ServerRunning() const; //Returns the value of ServerRunning

    /*
    Property ServerVersionMajor
    */
    inline QString ServerVersionMajor() const; //Returns the value of ServerVersionMajor

    /*
    Property ServerVersionMinor
    */
    inline QString ServerVersionMinor() const; //Returns the value of ServerVersionMinor

    /*
    Property ServerVersionRevision
    */
    inline QString ServerVersionRevision() const; //Returns the value of ServerVersionRevision

    /*
    Property SiteName
    */
    inline QString SiteName() const; //Returns the value of SiteName

    /*
    Property TerminalCount
    */
    inline int TerminalCount() const; //Returns the value of TerminalCount

    /*
    Property UpSince
    */
    inline QDateTime UpSince() const; //Returns the value of UpSince

    /*
    Property XML
    */
    inline QString XML() const; //Returns the value of XML

    /*
    Method GetAudioChannelCaptureVolume
    */
    inline int GetAudioChannelCaptureVolume(int nChan);

    /*
    Method GetAudioChannelCodec
    */
    inline int GetAudioChannelCodec(int nChan);

    /*
    Method GetAudioChannelDescription
    */
    inline QString GetAudioChannelDescription(int nChan);

    /*
    Method GetAudioChannelDetectVolume
    */
    inline int GetAudioChannelDetectVolume(int nChan);

    /*
    Method GetAudioChannelName
    */
    inline QString GetAudioChannelName(int nChan);

    /*
    Method GetAudioChannelSampleRates
    */
    inline int GetAudioChannelSampleRates(int nChan);

    /*
    Method GetAudioChannelSource
    */
    inline EnumAudioSource GetAudioChannelSource(int nChan);

    /*
    Method GetCameraActive
    */
    inline bool GetCameraActive(int nCameraNumber);

    /*
    Method GetCameraCapturing
    */
    inline bool GetCameraCapturing(int nCameraNumber);

    /*
    Method GetCameraCompression
    */
    inline EnumCompressionQuality GetCameraCompression(int nCameraNumber);

    /*
    Method GetCameraControlType
    */
    inline EnumCameraType GetCameraControlType(int nCameraNumber);

    /*
    Method GetCameraCovert
    */
    inline bool GetCameraCovert(int nCameraNumber);

    /*
    Method GetCameraFromRegister
    */
    inline int GetCameraFromRegister();

    /*
    Method GetCameraMode
    */
    inline EnumRecordMode GetCameraMode(int nCameraNumber);

    /*
    Method GetCameraName
    */
    inline QString GetCameraName(int nCameraNumber);

    /*
    Method GetCameraRecordSpeed
    */
    inline double GetCameraRecordSpeed(int nCameraNumber);

    /*
    Method GetCameraRecording
    */
    inline bool GetCameraRecording(int nCameraNumber);

    /*
    Method GetCameraResolution
    */
    inline EnumRecordResolution GetCameraResolution(int nCameraNumber);

    /*
    Method GetCameraSupportSubStream
    */
    inline bool GetCameraSupportSubStream(int nCameraNumber);

    /*
    Method GetDICount
    */
    inline int GetDICount();

    /*
    Method GetDIStatus
    */
    inline int GetDIStatus(int nInputNumber);

    /*
    Method GetDOCount
    */
    inline int GetDOCount();

    /*
    Method GetDOStatus
    */
    inline int GetDOStatus(int nOutputNumber);

    /*
    Method GetGroupCount
    */
    inline int GetGroupCount();

    /*
    Method GetGroupName
    */
    inline QString GetGroupName(QVariant& nGroupIndex);

    /*
    Method GetGroupPermission
    */
    inline int GetGroupPermission(QVariant& nGroupPermissionIndex);

    /*
    Method GetGroupPermissionsCount
    */
    inline int GetGroupPermissionsCount();

    /*
    Method GetGroupUser
    */
    inline QString GetGroupUser(QVariant& nUserGroupIndex);

    /*
    Method GetGroupUserCount
    */
    inline int GetGroupUserCount();

    /*
    Method GetPOSCameras
    */
    inline QVariantList GetPOSCameras(int nTerminalNumber);

    /*
    Method GetPOSMap
    */
    inline QStringList GetPOSMap(int nTerminalNumber);

    /*
    Method GetPOSPriorityCameraNumber
    */
    inline int GetPOSPriorityCameraNumber(int nTerminalNumber);

    /*
    Method GetPOSRegisters
    */
    inline QVariantList GetPOSRegisters(int nTerminalNumber);

    /*
    Method GetRecordControlTime
    */
    inline QString GetRecordControlTime();

    /*
    Method GetSearchEndTime
    */
    inline QString GetSearchEndTime(int nCameraNumber);

    /*
    Method GetSearchStartTime
    */
    inline QString GetSearchStartTime(int nCameraNumber);

    /*
    Method GetUserCount
    */
    inline int GetUserCount();

    /*
    Method GetUserName
    */
    inline QString GetUserName(QVariant& nUserIndex);

    /*
    Method GetUserPassword
    */
    inline QString GetUserPassword(QVariant& nUserIndex);

    /*
    Method GetVARuleEnabled
    */
    inline bool GetVARuleEnabled(int nRule);

    /*
    Method GetVARuleType
    */
    inline EnumVARuleType GetVARuleType(int nRule);

    /*
    Method GetVARulename
    */
    inline QString GetVARulename(int nRule);

    /*
    Method IsUserInGroup
    */
    inline bool IsUserInGroup(QString& sUserName);

    /*
    Method OSDGetVisible
    */
    inline bool OSDGetVisible();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT _CVigilCameraInfo : public QAxObject
{
public:
    _CVigilCameraInfo(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Method AddInfo
    */
    inline void AddInfo(int nCameraNumber);

    /*
    Method AddInfo
    */
    inline void AddInfo(int nCameraNumber, VigilSDK::EnumCompressionQuality nCompression);

    /*
    Method AddInfo
    */
    inline void AddInfo(int nCameraNumber, VigilSDK::EnumCompressionQuality nCompression, VigilSDK::EnumRecordMode nMode);

    /*
    Method RemoveInfo
    */
    inline void RemoveInfo(int nCameraNumber);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT _CVigilPlayback : public QAxObject
{
public:
    _CVigilPlayback(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AudioBased
    */
    inline bool AudioBased() const; //Returns the value of AudioBased
    inline void SetAudioBased(bool value); //Sets the value of the AudioBased property

    /*
    Property AudioChannel
    */
    inline int AudioChannel() const; //Returns the value of AudioChannel
    inline void SetAudioChannel(int value); //Sets the value of the AudioChannel property

    /*
    Property AutoLoop
    */
    inline bool AutoLoop() const; //Returns the value of AutoLoop
    inline void SetAutoLoop(bool value); //Sets the value of the AutoLoop property

    /*
    Property CacheAutoSense
    */
    inline bool CacheAutoSense() const; //Returns the value of CacheAutoSense
    inline void SetCacheAutoSense(bool value); //Sets the value of the CacheAutoSense property

    /*
    Property CacheConnections
    */
    inline int CacheConnections() const; //Returns the value of CacheConnections
    inline void SetCacheConnections(int value); //Sets the value of the CacheConnections property

    /*
    Property CacheSize
    */
    inline int CacheSize() const; //Returns the value of CacheSize
    inline void SetCacheSize(int value); //Sets the value of the CacheSize property

    /*
    Property CachedFrames
    */
    inline int CachedFrames() const; //Returns the value of CachedFrames

    /*
    Property CameraName
    */
    inline QString CameraName() const; //Returns the value of CameraName

    /*
    Property CameraNumber
    */
    inline int CameraNumber() const; //Returns the value of CameraNumber

    /*
    Property CurrentDisplayedFrame
    */
    inline int CurrentDisplayedFrame() const; //Returns the value of CurrentDisplayedFrame

    /*
    Property CurrentExportFrame
    */
    inline int CurrentExportFrame() const; //Returns the value of CurrentExportFrame

    /*
    Property CurrentFrame
    */
    inline int CurrentFrame() const; //Returns the value of CurrentFrame
    inline void SetCurrentFrame(int value); //Sets the value of the CurrentFrame property

    /*
    Property DVR
    */
    inline VigilSDK::_CVigilDVR* DVR() const; //Returns the value of DVR

    /*
    Property FrameDateStamp
    */
    inline QString FrameDateStamp() const; //Returns the value of FrameDateStamp

    /*
    Property FrameRecordMode
    */
    inline VigilSDK::EnumRecordMode FrameRecordMode() const; //Returns the value of FrameRecordMode

    /*
    Property HWndStatus
    */
    inline int HWndStatus() const; //Returns the value of HWndStatus
    inline void SetHWndStatus(int value); //Sets the value of the HWndStatus property

    /*
    Property MotionBlocks
    */
    inline QByteArray MotionBlocks() const; //Returns the value of MotionBlocks

    /*
    Property OSDVisible
    */
    inline bool OSDVisible() const; //Returns the value of OSDVisible
    inline void SetOSDVisible(bool value); //Sets the value of the OSDVisible property

    /*
    Property Paused
    */
    inline bool Paused() const; //Returns the value of Paused
    inline void SetPaused(bool value); //Sets the value of the Paused property

    /*
    Property PlayMode
    */
    inline VigilSDK::EnumPlayMode PlayMode() const; //Returns the value of PlayMode

    /*
    Property PlaySpeed
    */
    inline int PlaySpeed() const; //Returns the value of PlaySpeed
    inline void SetPlaySpeed(int value); //Sets the value of the PlaySpeed property

    /*
    Property ReducedResolution
    */
    inline bool ReducedResolution() const; //Returns the value of ReducedResolution
    inline void SetReducedResolution(bool value); //Sets the value of the ReducedResolution property

    /*
    Property SynchronizedPlayback
    */
    inline bool SynchronizedPlayback() const; //Returns the value of SynchronizedPlayback
    inline void SetSynchronizedPlayback(bool value); //Sets the value of the SynchronizedPlayback property

    /*
    Property TimestampCueMessage
    */
    inline int TimestampCueMessage() const; //Returns the value of TimestampCueMessage
    inline void SetTimestampCueMessage(int value); //Sets the value of the TimestampCueMessage property

    /*
    Property TotalExportFrames
    */
    inline int TotalExportFrames() const; //Returns the value of TotalExportFrames

    /*
    Property TotalFrames
    */
    inline int TotalFrames() const; //Returns the value of TotalFrames

    /*
    Property VAEnabled
    */
    inline bool VAEnabled() const; //Returns the value of VAEnabled
    inline void SetVAEnabled(bool value); //Sets the value of the VAEnabled property

    /*
    Property VideoInputHeight
    */
    inline int VideoInputHeight() const; //Returns the value of VideoInputHeight

    /*
    Property VideoInputWidth
    */
    inline int VideoInputWidth() const; //Returns the value of VideoInputWidth

    /*
    Method CancelExportVideo
    */
    inline void CancelExportVideo();

    /*
    Method ChooseAVICodec
    */
    inline bool ChooseAVICodec();

    /*
    Method CueToTimestamp
    */
    inline void CueToTimestamp(const QDateTime& dtCurrentTime);

    /*
    Method CueToTimestamp
    */
    inline void CueToTimestamp(const QDateTime& dtCurrentTime, bool bSyncOtherFeeds);

    /*
    Method DateStampByFrame
    */
    inline QString DateStampByFrame(int& nFrameNumber);

    /*
    Method ExportAudio
    */
    inline void ExportAudio(int hWndExportStatus, const QVariant& vFileNames, const QString& sStartTime, const QString& sEndTime, int nAudioChannel);

    /*
    Method ExportBMP
    */
    inline bool ExportBMP();

    /*
    Method ExportBMP
    */
    inline bool ExportBMP(const QString& sFileName);

    /*
    Method ExportBMP
    */
    inline bool ExportBMP(const QString& sFileName, bool bWithOverlayText);

    /*
    Method ExportJPG
    */
    inline bool ExportJPG();

    /*
    Method ExportJPG
    */
    inline bool ExportJPG(const QString& sFileName);

    /*
    Method ExportJPG
    */
    inline bool ExportJPG(const QString& sFileName, int nQuality);

    /*
    Method ExportJPG
    */
    inline bool ExportJPG(const QString& sFileName, int nQuality, bool bWithOverlayText);

    /*
    Method ExportVideo
    */
    inline void ExportVideo(int hWndExportStatus, const QString& sFileName, const QString& sStartTime, const QString& sEndTime);

    /*
    Method ExportVideo
    */
    inline void ExportVideo(int hWndExportStatus, const QString& sFileName, const QString& sStartTime, const QString& sEndTime, int nFirstFrame);

    /*
    Method ExportVideo
    */
    inline void ExportVideo(int hWndExportStatus, const QString& sFileName, const QString& sStartTime, const QString& sEndTime, int nFirstFrame, int nLastFrame);

    /*
    Method ExportVideo
    */
    inline void ExportVideo(int hWndExportStatus, const QString& sFileName, const QString& sStartTime, const QString& sEndTime, int nFirstFrame, int nLastFrame, const QString& sPOSFileName);

    /*
    Method ExportVideoEx
    */
    inline void ExportVideoEx(int hWndExportStatus, const QVariant& vFileNames, const QString& sStartTime, const QString& sEndTime);

    /*
    Method ExportVideoEx
    */
    inline void ExportVideoEx(int hWndExportStatus, const QVariant& vFileNames, const QString& sStartTime, const QString& sEndTime, int nFirstFrame);

    /*
    Method ExportVideoEx
    */
    inline void ExportVideoEx(int hWndExportStatus, const QVariant& vFileNames, const QString& sStartTime, const QString& sEndTime, int nFirstFrame, int nLastFrame);

    /*
    Method ExportVideoEx
    */
    inline void ExportVideoEx(int hWndExportStatus, const QVariant& vFileNames, const QString& sStartTime, const QString& sEndTime, int nFirstFrame, int nLastFrame, const QString& sPOSFileName);

    /*
    Method ExportVideoEx
    */
    inline void ExportVideoEx(int hWndExportStatus, const QVariant& vFileNames, const QString& sStartTime, const QString& sEndTime, int nFirstFrame, int nLastFrame, const QString& sPOSFileName, int nAudioChannel);

    /*
    Method FetchFootage
    */
    inline bool FetchFootage(int nCameraNumber, const QDateTime& dStartTime, const QDateTime& dEndTime);

    /*
    Method FetchFootage
    */
    inline bool FetchFootage(int nCameraNumber, const QDateTime& dStartTime, const QDateTime& dEndTime, VigilSDK::EnumRecordMode nMode);

    /*
    Method FetchFootage
    */
    inline bool FetchFootage(int nCameraNumber, const QDateTime& dStartTime, const QDateTime& dEndTime, VigilSDK::EnumRecordMode nMode, int& nTimeout);

    /*
    Method FetchFootageForRegister
    */
    inline bool FetchFootageForRegister(int nTerminalNumber, int nRegisterNumber, const QDateTime& dStartTime, const QDateTime& dEndTime);

    /*
    Method FetchFootageForRegister
    */
    inline bool FetchFootageForRegister(int nTerminalNumber, int nRegisterNumber, const QDateTime& dStartTime, const QDateTime& dEndTime, VigilSDK::EnumRecordMode nMode);

    /*
    Method FetchFootageForRegister
    */
    inline bool FetchFootageForRegister(int nTerminalNumber, int nRegisterNumber, const QDateTime& dStartTime, const QDateTime& dEndTime, VigilSDK::EnumRecordMode nMode, int& nTimeout);

    /*
    Method GetIndexList
    */
    inline ATLPARSERLib::IParser* GetIndexList(int nCameraNumber, const QDateTime& dStartTime, const QDateTime& dEndTime);

    /*
    Method GetIndexList
    */
    inline ATLPARSERLib::IParser* GetIndexList(int nCameraNumber, const QDateTime& dStartTime, const QDateTime& dEndTime, VigilSDK::EnumRecordMode nMode);

    /*
    Method GetIndexList
    */
    inline ATLPARSERLib::IParser* GetIndexList(int nCameraNumber, const QDateTime& dStartTime, const QDateTime& dEndTime, VigilSDK::EnumRecordMode nMode, int& nTimeout);

    /*
    Method InitiateStopFeed
    */
    inline void InitiateStopFeed();

    /*
    Method OSDAddString
    */
    inline void OSDAddString(const QString& sLine, const QDateTime& dtTimestamp);

    /*
    Method OSDSetConfig
    */
    inline void OSDSetConfig();

    /*
    Method OSDSetConfig
    */
    inline void OSDSetConfig(int nDwellTime);

    /*
    Method OSDSetConfig
    */
    inline void OSDSetConfig(int nDwellTime, int nLines);

    /*
    Method OSDSetConfig
    */
    inline void OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor);

    /*
    Method OSDSetConfig
    */
    inline void OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize);

    /*
    Method OSDSetConfig
    */
    inline void OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize, const QColor& nFontColor);

    /*
    Method OSDSetConfig
    */
    inline void OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize, const QColor& nFontColor, VigilSDK::EnumFontWeight nFontWeight);

    /*
    Method PutZoom
    */
    inline void PutZoom(bool bEnableZoom, int nLeft, int nTop, int nRight, int nBottom, VigilSDK::EnumZoomCoordType eZoomCoordType);

    /*
    Method RefreshScreen
    */
    inline void RefreshScreen();

    /*
    Method Repaint
    */
    inline void Repaint();

    /*
    Method ResumeThread
    */
    inline void ResumeThread();

    /*
    Method Run
    */
    inline void Run();

    /*
    Method RunBackwards
    */
    inline void RunBackwards();

    /*
    Method SetFrameAsync
    */
    inline void SetFrameAsync(int NewVal);

    /*
    Method StopFeed
    */
    inline void StopFeed();

    /*
    Method SuspendThread
    */
    inline void SuspendThread();

    /*
    Method View
    */
    inline bool View(int HWnd);

    /*
    Method View
    */
    inline bool View(int HWnd, int hWndSocketError);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT _CRect : public QAxObject
{
public:
    _CRect(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Bottom
    */
    inline int Bottom() const; //Returns the value of Bottom
    inline void SetBottom(int value); //Sets the value of the Bottom property

    /*
    Property Height
    */
    inline int Height() const; //Returns the value of Height
    inline void SetHeight(int value); //Sets the value of the Height property

    /*
    Property Left
    */
    inline int Left() const; //Returns the value of Left
    inline void SetLeft(int value); //Sets the value of the Left property

    /*
    Property Right
    */
    inline int Right() const; //Returns the value of Right
    inline void SetRight(int value); //Sets the value of the Right property

    /*
    Property Top
    */
    inline int Top() const; //Returns the value of Top
    inline void SetTop(int value); //Sets the value of the Top property

    /*
    Property Width
    */
    inline int Width() const; //Returns the value of Width
    inline void SetWidth(int value); //Sets the value of the Width property

    /*
    Method Clear
    */
    inline void Clear();

    /*
    Method Copy
    */
    inline VigilSDK::_CRect* Copy();

    /*
    Method Equals
    */
    inline bool Equals(VigilSDK::_CRect* oRect);

    /*
    Method Inflate
    */
    inline void Inflate(int nHoriz, int nVert);

    /*
    Method Inflate
    */
    inline void Inflate(int nHoriz, int nVert, bool bAnchorTopLeft);

    /*
    Method Translate
    */
    inline void Translate(int nHoriz, int nVert);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT _IWindowSubclasser : public QAxObject
{
public:
    _IWindowSubclasser(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property HWnd
    */
    inline int HWnd() const; //Returns the value of HWnd

    /*
    Property PrevWindowProcPtr
    */
    inline int PrevWindowProcPtr() const; //Returns the value of PrevWindowProcPtr
    inline void SetPrevWindowProcPtr(int value); //Sets the value of the PrevWindowProcPtr property

    /*
    Method WindowProc
    */
    inline int WindowProc(int HWnd, int uMsg, int wParam, int lParam, bool& bConsumed);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT _IUserInputListener : public QAxObject
{
public:
    _IUserInputListener(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AppWindowHwnd
    */
    inline int AppWindowHwnd() const; //Returns the value of AppWindowHwnd

    /*
    Property IsCtrlKeyDown
    */
    inline bool IsCtrlKeyDown() const; //Returns the value of IsCtrlKeyDown

    /*
    Property Key
    */
    inline QString Key() const; //Returns the value of Key

    /*
    Property ListenKeyboardMouse
    */
    inline bool ListenKeyboardMouse() const; //Returns the value of ListenKeyboardMouse

    /*
    Property ListenWindow
    */
    inline bool ListenWindow() const; //Returns the value of ListenWindow

    /*
    Property MouseOver
    */
    inline bool MouseOver() const; //Returns the value of MouseOver

    /*
    Method AppGotFocus
    */
    inline void AppGotFocus();

    /*
    Method AppLostFocus
    */
    inline void AppLostFocus();

    /*
    Method GetBoundingRect
    */
    inline QVariant GetBoundingRect(int& nLeft, int& nTop, int& nRight, int& nBottom);

    /*
    Method KeyPressed
    */
    inline void KeyPressed(int& KeyCode);

    /*
    Method KeyReleased
    */
    inline void KeyReleased(int& KeyCode);

    /*
    Method KeyboardHookProc
    */
    inline int KeyboardHookProc(int idHook, int wParam, int lParam);

    /*
    Method MouseEnter
    */
    inline void MouseEnter();

    /*
    Method MouseHookProc
    */
    inline int MouseHookProc(int idHook, int wParam, int lParam);

    /*
    Method MouseLeave
    */
    inline void MouseLeave();

    /*
    Method WindowHookProc
    */
    inline int WindowHookProc(int idHook, int wParam, int lParam);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT _CVigilRemotePlayback : public QAxObject
{
public:
    _CVigilRemotePlayback(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property ClientID
    */
    inline QString ClientID() const; //Returns the value of ClientID
    inline void SetClientID(const QString& value); //Sets the value of the ClientID property

    /*
    Property CurrentFrame
    */
    inline int CurrentFrame() const; //Returns the value of CurrentFrame
    inline void SetCurrentFrame(int value); //Sets the value of the CurrentFrame property

    /*
    Property DVR
    */
    inline VigilSDK::_CVigilDVR* DVR() const; //Returns the value of DVR

    /*
    Property DVRStatus
    */
    inline VigilSDK::EnumDVRStatus DVRStatus() const; //Returns the value of DVRStatus

    /*
    Property EndPlaybackFrame
    */
    inline int EndPlaybackFrame() const; //Returns the value of EndPlaybackFrame
    inline void SetEndPlaybackFrame(int value); //Sets the value of the EndPlaybackFrame property

    /*
    Property FastFrameIncrement
    */
    inline int FastFrameIncrement() const; //Returns the value of FastFrameIncrement

    /*
    Property NominalFPS
    */
    inline int NominalFPS() const; //Returns the value of NominalFPS

    /*
    Property StartPlaybackFrame
    */
    inline int StartPlaybackFrame() const; //Returns the value of StartPlaybackFrame
    inline void SetStartPlaybackFrame(int value); //Sets the value of the StartPlaybackFrame property

    /*
    Method GetFrameTimestamp
    */
    inline QString GetFrameTimestamp(int& nFrame);

    /*
    Method LoadPlayback
    */
    inline bool LoadPlayback(int nCameraNumber, const QDateTime& dtDateFrom, const QDateTime& dtDateTo);

    /*
    Method PlaybackControlCommand
    */
    inline bool PlaybackControlCommand(VigilSDK::EnumPlaybackControlCommand eCommand);

    /*
    Method UnloadPlayback
    */
    inline bool UnloadPlayback();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT _CVigilCameraControl : public QAxObject
{
public:
    _CVigilCameraControl(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property DVR
    */
    inline VigilSDK::_CVigilDVR* DVR() const; //Returns the value of DVR

    /*
    Method ClearAux
    */
    inline EnumCCResult ClearAux(int nCameraNumber, int nAuxNumber);

    /*
    Method EnhanceImage
    */
    inline EnumCCResult EnhanceImage(int nCameraNumber, VigilSDK::EnumEnhancement eEnhancementType);

    /*
    Method EnhanceImage
    */
    inline EnumCCResult EnhanceImage(int nCameraNumber, VigilSDK::EnumEnhancement eEnhancementType, bool bOn);

    /*
    Method GetCameraType
    */
    inline EnumCameraType GetCameraType(int nCameraNumber);

    /*
    Method GetPatternNames
    */
    inline QVariant GetPatternNames(int nCameraNumber);

    /*
    Method GetPresetnames
    */
    inline QVariant GetPresetnames(int nCameraNumber);

    /*
    Method GotoPreset
    */
    inline EnumCCResult GotoPreset(int nCameraNumber, const QVariant& vPreset);

    /*
    Method LoadPresetTour
    */
    inline void LoadPresetTour(int nCameraNumber, QVariant& vPreset, QVariant& vDwellTime);

    /*
    Method ModifySequence
    */
    inline EnumCCResult ModifySequence(int nCameraNumber, const QVariant& vSequence, int nPoint, const QVariant& vPreset, int nDwell, int nSpeed);

    /*
    Method NumTourPresets
    */
    inline int NumTourPresets(int nCameraNumber);

    /*
    Method RunPattern
    */
    inline EnumCCResult RunPattern(int nCameraNumber, const QVariant& vPattern);

    /*
    Method RunSequence
    */
    inline EnumCCResult RunSequence(int nCameraNumber, const QVariant& vSequence);

    /*
    Method SavePresetTour
    */
    inline void SavePresetTour(int nCameraNumber, const QVariant& vPreset, const QVariant& vDwellTime);

    /*
    Method SendMenuCommand
    */
    inline EnumCCResult SendMenuCommand(int nCameraNumber, VigilSDK::EnumMenuCommand eMenuCommand);

    /*
    Method SetAux
    */
    inline EnumCCResult SetAux(int nCameraNumber, int nAuxNumber);

    /*
    Method SetPreset
    */
    inline EnumCCResult SetPreset(int nCameraNumber, const QVariant& vPreset);

    /*
    Method SetPreset
    */
    inline EnumCCResult SetPreset(int nCameraNumber, const QVariant& vPreset, const QString& sNewPresetName);

    /*
    Method StartPTZIF
    */
    inline EnumCCResult StartPTZIF(int nCameraNumber);

    /*
    Method StartPTZIF
    */
    inline EnumCCResult StartPTZIF(int nCameraNumber, int nPanSpeed);

    /*
    Method StartPTZIF
    */
    inline EnumCCResult StartPTZIF(int nCameraNumber, int nPanSpeed, int nTiltSpeed);

    /*
    Method StartPTZIF
    */
    inline EnumCCResult StartPTZIF(int nCameraNumber, int nPanSpeed, int nTiltSpeed, int nZoomSpeed);

    /*
    Method StartPTZIF
    */
    inline EnumCCResult StartPTZIF(int nCameraNumber, int nPanSpeed, int nTiltSpeed, int nZoomSpeed, int nIrisSpeed);

    /*
    Method StartPTZIF
    */
    inline EnumCCResult StartPTZIF(int nCameraNumber, int nPanSpeed, int nTiltSpeed, int nZoomSpeed, int nIrisSpeed, int nFocusSpeed);

    /*
    Method StartPattern
    */
    inline EnumCCResult StartPattern(int nCameraNumber, const QVariant& vPattern);

    /*
    Method StartSequence
    */
    inline EnumCCResult StartSequence(int nCameraNumber, const QVariant& vSequence);

    /*
    Method StartTour
    */
    inline void StartTour(int nCameraNumber);

    /*
    Method StopPTZIF
    */
    inline EnumCCResult StopPTZIF(int nCameraNumber);

    /*
    Method StopPattern
    */
    inline EnumCCResult StopPattern(int nCameraNumber);

    /*
    Method StopPattern
    */
    inline EnumCCResult StopPattern(int nCameraNumber, const QString& sNewPatternName);

    /*
    Method StopSequence
    */
    inline EnumCCResult StopSequence(int nCameraNumber, const QVariant& vSequence);

    /*
    Method StopSequence
    */
    inline EnumCCResult StopSequence(int nCameraNumber, const QVariant& vSequence, const QString& sNewSequenceName);

    /*
    Method StopTour
    */
    inline void StopTour(int nCameraNumber);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT _CVigilAlarm : public QAxObject
{
public:
    _CVigilAlarm(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Acknowledged
    */
    inline bool Acknowledged() const; //Returns the value of Acknowledged
    inline void SetAcknowledged(bool value); //Sets the value of the Acknowledged property

    /*
    Property AlarmGUID
    */
    inline QString AlarmGUID() const; //Returns the value of AlarmGUID
    inline void SetAlarmGUID(const QString& value); //Sets the value of the AlarmGUID property

    /*
    Property AlarmInput
    */
    inline int AlarmInput() const; //Returns the value of AlarmInput
    inline void SetAlarmInput(int value); //Sets the value of the AlarmInput property

    /*
    Property AlarmInputString
    */
    inline QString AlarmInputString() const; //Returns the value of AlarmInputString

    /*
    Property AlarmType
    */
    inline VigilSDK::EnumAlarmType AlarmType() const; //Returns the value of AlarmType
    inline void SetAlarmType(VigilSDK::EnumAlarmType value); //Sets the value of the AlarmType property

    /*
    Property AlarmTypeString
    */
    inline QString AlarmTypeString() const; //Returns the value of AlarmTypeString

    /*
    Property BinaryLength
    */
    inline int BinaryLength() const; //Returns the value of BinaryLength

    /*
    Property CameraNumbers
    */
    inline QString CameraNumbers() const; //Returns the value of CameraNumbers
    inline void SetCameraNumbers(const QString& value); //Sets the value of the CameraNumbers property

    /*
    Property CustomBinary
    */
    inline QByteArray CustomBinary() const; //Returns the value of CustomBinary

    /*
    Property CustomDataType
    */
    inline VigilSDK::EnumCustomAlarmDataType CustomDataType() const; //Returns the value of CustomDataType

    /*
    Property CustomText
    */
    inline QString CustomText() const; //Returns the value of CustomText

    /*
    Property IsMetaData
    */
    inline bool IsMetaData() const; //Returns the value of IsMetaData
    inline void SetIsMetaData(bool value); //Sets the value of the IsMetaData property

    /*
    Property Key
    */
    inline QString Key() const; //Returns the value of Key

    /*
    Property MetaData
    */
    inline QString MetaData() const; //Returns the value of MetaData

    /*
    Property ServerGUID
    */
    inline QString ServerGUID() const; //Returns the value of ServerGUID
    inline void SetServerGUID(const QString& value); //Sets the value of the ServerGUID property

    /*
    Property ServerIP
    */
    inline QString ServerIP() const; //Returns the value of ServerIP
    inline void SetServerIP(const QString& value); //Sets the value of the ServerIP property

    /*
    Property ServerName
    */
    inline QString ServerName() const; //Returns the value of ServerName
    inline void SetServerName(const QString& value); //Sets the value of the ServerName property

    /*
    Property ServerString
    */
    inline QString ServerString() const; //Returns the value of ServerString

    /*
    Property SiteName
    */
    inline QString SiteName() const; //Returns the value of SiteName
    inline void SetSiteName(const QString& value); //Sets the value of the SiteName property

    /*
    Method Clone
    */
    inline VigilSDK::_CVigilAlarm* Clone();

    /*
    Method EndTime
    */
    inline QString EndTime();

    /*
    Method EndTime
    */
    inline QString EndTime(bool bUTC);

    /*
    Method FromRS
    */
    inline void FromRS(IDispatch* rs);

    /*
    Method IncludesCamera
    */
    inline bool IncludesCamera(int nCameraNumber);

    /*
    Method SetCustomBinary
    */
    inline void SetCustomBinary(QVariant& pNewVal);

    /*
    Method SetCustomText
    */
    inline void SetCustomText(QString& pNewVal);

    /*
    Method SetEndTime
    */
    inline void SetEndTime();

    /*
    Method SetEndTime
    */
    inline void SetEndTime(bool bUTC);

    /*
    Method SetEndTime
    */
    inline void SetEndTime(bool bUTC, const QString& rhs);

    /*
    Method SetStartTime
    */
    inline void SetStartTime();

    /*
    Method SetStartTime
    */
    inline void SetStartTime(bool bUTC);

    /*
    Method SetStartTime
    */
    inline void SetStartTime(bool bUTC, const QString& rhs);

    /*
    Method StartTime
    */
    inline QString StartTime();

    /*
    Method StartTime
    */
    inline QString StartTime(bool bUTC);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT _CVigilAlarmManager : public QAxObject
{
public:
    _CVigilAlarmManager(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Listening
    */
    inline bool Listening() const; //Returns the value of Listening
    inline void SetListening(bool value); //Sets the value of the Listening property

    /*
    Property LogFileDirectory
    */
    inline QString LogFileDirectory() const; //Returns the value of LogFileDirectory
    inline void SetLogFileDirectory(const QString& value); //Sets the value of the LogFileDirectory property

    /*
    Property Port
    */
    inline int Port() const; //Returns the value of Port
    inline void SetPort(int value); //Sets the value of the Port property

    /*
    Method AddAlarm
    */
    inline void AddAlarm(VigilSDK::_CVigilAlarm* oAlarm);

    /*
    Method ClearSuppressedAlarms
    */
    inline void ClearSuppressedAlarms();

    /*
    Method ConvertDateToFileTime
    */
    inline qlonglong ConvertDateToFileTime(const QVariant& vDate);

    /*
    Method ConvertDateToFileTime
    */
    inline qlonglong ConvertDateToFileTime(const QVariant& vDate, bool bUTC);

    /*
    Method FetchThumbnail
    */
    inline bool FetchThumbnail(VigilSDK::_CVigilAlarm* oAlarm);

    /*
    Method GetSuppressedAlarms
    */
    inline VBA::_Collection* GetSuppressedAlarms();

    /*
    Method IsAlarmSuppressed
    */
    inline bool IsAlarmSuppressed(const QString& sMetaData);

    /*
    Method IsFetchingThumbnail
    */
    inline bool IsFetchingThumbnail(VigilSDK::_CVigilAlarm* oAlarm);

    /*
    Method Query
    */
    inline IDispatch* Query(const QString& sFilter);

    /*
    Method SaveLog
    */
    inline void SaveLog();

    /*
    Method SaveSuppressionMetaData
    */
    inline void SaveSuppressionMetaData();

    /*
    Method SuppressAlarm
    */
    inline void SuppressAlarm(VigilSDK::EnumAlarmType eAlarmType, int nAlarmInput, const QString& sServerGUID);

    /*
    Method SuppressAlarm
    */
    inline void SuppressAlarm(VigilSDK::EnumAlarmType eAlarmType, int nAlarmInput, const QString& sServerGUID, const QString& sExpirationDate);

    /*
    Method UnsuppressAlarm
    */
    inline void UnsuppressAlarm(VigilSDK::EnumAlarmType eAlarmType, int nAlarmInput, const QString& sServerGUID);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT _CVigilLiveAudioFeed : public QAxObject
{
public:
    _CVigilLiveAudioFeed(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property DVR
    */
    inline VigilSDK::_CVigilDVR* DVR() const; //Returns the value of DVR

    /*
    Property DetectionVolume
    */
    inline int DetectionVolume() const; //Returns the value of DetectionVolume
    inline void SetDetectionVolume(int value); //Sets the value of the DetectionVolume property

    /*
    Property OutputVolume
    */
    inline int OutputVolume() const; //Returns the value of OutputVolume

    /*
    Property Prebuffer
    */
    inline int Prebuffer() const; //Returns the value of Prebuffer
    inline void SetPrebuffer(int value); //Sets the value of the Prebuffer property

    /*
    Method StartFeed
    */
    inline bool StartFeed(int nChannel, int HWnd);

    /*
    Method StopFeed
    */
    inline void StopFeed();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT _CVigilVCM : public QAxObject
{
public:
    _CVigilVCM(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Method Login
    */
    inline VigilSDK::_CVigilResult* Login(const QString& sUserName, const QString& sPassword, QString& sIPAddress);

    /*
    Method Login
    */
    inline VigilSDK::_CVigilResult* Login(const QString& sUserName, const QString& sPassword, QString& sIPAddress, int& nPort);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT _CVigilExternalAlarm : public QAxObject
{
public:
    _CVigilExternalAlarm(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property ShowSocketError
    */
    inline bool ShowSocketError() const; //Returns the value of ShowSocketError
    inline void SetShowSocketError(bool value); //Sets the value of the ShowSocketError property

    /*
    Property ShowSocketStatus
    */
    inline bool ShowSocketStatus() const; //Returns the value of ShowSocketStatus
    inline void SetShowSocketStatus(bool value); //Sets the value of the ShowSocketStatus property

    /*
    Method SendAlarm
    */
    inline bool SendAlarm(QString& sIP, int& nPort, int& nID, bool& bAlarm);

    /*
    Method SendRequest
    */
    inline bool SendRequest(ATLREQUESTLib::IRequest** req, QString& sIP, int& nPort);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT _CVigilAudioTalk : public QAxObject
{
public:
    _CVigilAudioTalk(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Buffer
    */
    inline int Buffer() const; //Returns the value of Buffer
    inline void SetBuffer(int value); //Sets the value of the Buffer property

    /*
    Property DVR
    */
    inline VigilSDK::_CVigilDVR* DVR() const; //Returns the value of DVR

    /*
    Property ErrorCode
    */
    inline int ErrorCode() const; //Returns the value of ErrorCode

    /*
    Property ErrorDescription
    */
    inline QString ErrorDescription() const; //Returns the value of ErrorDescription

    /*
    Property Mute
    */
    inline bool Mute() const; //Returns the value of Mute
    inline void SetMute(bool value); //Sets the value of the Mute property

    /*
    Property MuteOnTalk
    */
    inline bool MuteOnTalk() const; //Returns the value of MuteOnTalk
    inline void SetMuteOnTalk(bool value); //Sets the value of the MuteOnTalk property

    /*
    Property StatInput
    */
    inline int StatInput() const; //Returns the value of StatInput

    /*
    Property StatOutput
    */
    inline int StatOutput() const; //Returns the value of StatOutput

    /*
    Property Talk
    */
    inline bool Talk() const; //Returns the value of Talk
    inline void SetTalk(bool value); //Sets the value of the Talk property

    /*
    Property VolumeMic
    */
    inline int VolumeMic() const; //Returns the value of VolumeMic
    inline void SetVolumeMic(int value); //Sets the value of the VolumeMic property

    /*
    Property VolumeSpeaker
    */
    inline int VolumeSpeaker() const; //Returns the value of VolumeSpeaker
    inline void SetVolumeSpeaker(int value); //Sets the value of the VolumeSpeaker property

    /*
    Method StartAudioTalk
    */
    inline bool StartAudioTalk(int nCamera, int HWnd);

    /*
    Method StopAudioTalk
    */
    inline void StopAudioTalk();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT __CVigilPlayback : public QAxObject
{
public:
    __CVigilPlayback(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Method FeedInitialized
    */
    inline void FeedInitialized();

    /*
    Method FrameStatus
    */
    inline void FrameStatus();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT __CVigilLiveFeed : public QAxObject
{
public:
    __CVigilLiveFeed(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Method FrameStatus
    */
    inline void FrameStatus();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT __CVigilAlarmManager : public QAxObject
{
public:
    __CVigilAlarmManager(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Method AlarmReceived
    */
    inline void AlarmReceived(VigilSDK::_CVigilAlarm* oAlarm);

    /*
    Method ThumbnailReceived
    */
    inline void ThumbnailReceived(VigilSDK::_CVigilAlarm* oAlarm, const QString& sThumbnailFileName);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// Actual coclasses
class VIGILSDK_EXPORT CVigilLiveFeed : public QAxObject
{
public:
    CVigilLiveFeed(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property CameraName
    */
    inline QString CameraName() const; //Returns the value of CameraName

    /*
    Property CameraNumber
    */
    inline int CameraNumber() const; //Returns the value of CameraNumber

    /*
    Property CaptureFPS
    */
    inline double CaptureFPS() const; //Returns the value of CaptureFPS

    /*
    Property DVR
    */
    inline VigilSDK::_CVigilDVR* DVR() const; //Returns the value of DVR

    /*
    Property FeedSpeed
    */
    inline VigilSDK::EnumLiveSpeed FeedSpeed() const; //Returns the value of FeedSpeed
    inline void SetFeedSpeed(VigilSDK::EnumLiveSpeed value); //Sets the value of the FeedSpeed property

    /*
    Property HWnd
    */
    inline int HWnd() const; //Returns the value of HWnd

    /*
    Property HWndStatus
    */
    inline int HWndStatus() const; //Returns the value of HWndStatus
    inline void SetHWndStatus(int value); //Sets the value of the HWndStatus property

    /*
    Property KBPerFrame
    */
    inline double KBPerFrame() const; //Returns the value of KBPerFrame

    /*
    Property MotionBlocks
    */
    inline QByteArray MotionBlocks() const; //Returns the value of MotionBlocks

    /*
    Property OSDVisible
    */
    inline bool OSDVisible() const; //Returns the value of OSDVisible
    inline void SetOSDVisible(bool value); //Sets the value of the OSDVisible property

    /*
    Property PrevWindowProcPtr
    */
    inline int PrevWindowProcPtr() const; //Returns the value of PrevWindowProcPtr
    inline void SetPrevWindowProcPtr(int value); //Sets the value of the PrevWindowProcPtr property

    /*
    Property RecordMode
    */
    inline VigilSDK::EnumRecordMode RecordMode() const; //Returns the value of RecordMode

    /*
    Property RecordStatus
    */
    inline VigilSDK::EnumRecordStatus RecordStatus() const; //Returns the value of RecordStatus

    /*
    Property ReducedResolution
    */
    inline bool ReducedResolution() const; //Returns the value of ReducedResolution
    inline void SetReducedResolution(bool value); //Sets the value of the ReducedResolution property

    /*
    Property Running
    */
    inline bool Running() const; //Returns the value of Running

    /*
    Property SignalLoss
    */
    inline bool SignalLoss() const; //Returns the value of SignalLoss

    /*
    Property SubStream
    */
    inline bool SubStream() const; //Returns the value of SubStream
    inline void SetSubStream(bool value); //Sets the value of the SubStream property

    /*
    Property TimestampVisible
    */
    inline bool TimestampVisible() const; //Returns the value of TimestampVisible
    inline void SetTimestampVisible(bool value); //Sets the value of the TimestampVisible property

    /*
    Property TransferMotionBlocks
    */
    inline bool TransferMotionBlocks() const; //Returns the value of TransferMotionBlocks
    inline void SetTransferMotionBlocks(bool value); //Sets the value of the TransferMotionBlocks property

    /*
    Property UserCaption
    */
    inline QString UserCaption() const; //Returns the value of UserCaption
    inline void SetUserCaption(const QString& value); //Sets the value of the UserCaption property

    /*
    Property VAEnabled
    */
    inline bool VAEnabled() const; //Returns the value of VAEnabled
    inline void SetVAEnabled(bool value); //Sets the value of the VAEnabled property

    /*
    Property VideoInputHeight
    */
    inline int VideoInputHeight() const; //Returns the value of VideoInputHeight

    /*
    Property VideoInputWidth
    */
    inline int VideoInputWidth() const; //Returns the value of VideoInputWidth

    /*
    Method InitiateStopFeed
    */
    inline void InitiateStopFeed();

    /*
    Method OSDAddString
    */
    inline void OSDAddString(const QString& sLine);

    /*
    Method OSDSetConfig
    */
    inline void OSDSetConfig();

    /*
    Method OSDSetConfig
    */
    inline void OSDSetConfig(int nDwellTime);

    /*
    Method OSDSetConfig
    */
    inline void OSDSetConfig(int nDwellTime, int nLines);

    /*
    Method OSDSetConfig
    */
    inline void OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor);

    /*
    Method OSDSetConfig
    */
    inline void OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize);

    /*
    Method OSDSetConfig
    */
    inline void OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize, const QColor& nFontColor);

    /*
    Method OSDSetConfig
    */
    inline void OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize, const QColor& nFontColor, VigilSDK::EnumFontWeight nFontWeight);

    /*
    Method PutZoom
    */
    inline void PutZoom(bool bEnableZoom, int nLeft, int nTop, int nRight, int nBottom, VigilSDK::EnumZoomCoordType eZoomCoordType);

    /*
    Method RefreshScreen
    */
    inline void RefreshScreen();

    /*
    Method ResumeThread
    */
    inline void ResumeThread();

    /*
    Method SaveSnapshot
    */
    inline bool SaveSnapshot(const QString& sFileName);

    /*
    Method SaveSnapshot
    */
    inline bool SaveSnapshot(const QString& sFileName, bool bAsJPEG);

    /*
    Method SaveSnapshot
    */
    inline bool SaveSnapshot(const QString& sFileName, bool bAsJPEG, int nJPEGQuality);

    /*
    Method StopFeed
    */
    inline void StopFeed();

    /*
    Method SuspendThread
    */
    inline void SuspendThread();

    /*
    Method View
    */
    inline bool View(int nCameraNumber, int HWnd);

    /*
    Method ViewRegister
    */
    inline bool ViewRegister(int nTerminalNumber, int nRegisterNumber, int HWnd);

    /*
    Method WindowProc
    */
    inline int WindowProc(int HWnd, int uMsg, int wParam, int lParam, bool& bConsumed);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT CVigilDVR : public QAxObject
{
public:
    CVigilDVR(QObject *parent = 0)
    : QAxObject(parent)
    {
        setControl("{d89eb94d-7919-4910-b817-5aa76994de1d}");
    }

    /*
    Property Administrator
    */
    inline bool Administrator() const; //Returns the value of Administrator

    /*
    Property CameraCount
    */
    inline int CameraCount() const; //Returns the value of CameraCount

    /*
    Property CaptureCard
    */
    inline VigilSDK::EnumComartBoard CaptureCard() const; //Returns the value of CaptureCard

    /*
    Property DayLightSavings
    */
    inline bool DayLightSavings() const; //Returns the value of DayLightSavings

    /*
    Property LoggedOn
    */
    inline bool LoggedOn() const; //Returns the value of LoggedOn

    /*
    Property RemoteHost
    */
    inline QString RemoteHost() const; //Returns the value of RemoteHost
    inline void SetRemoteHost(const QString& value); //Sets the value of the RemoteHost property

    /*
    Property RemotePort
    */
    inline int RemotePort() const; //Returns the value of RemotePort
    inline void SetRemotePort(int value); //Sets the value of the RemotePort property

    /*
    Property ServerGUID
    */
    inline QString ServerGUID() const; //Returns the value of ServerGUID

    /*
    Property ShowSocketError
    */
    inline bool ShowSocketError() const; //Returns the value of ShowSocketError
    inline void SetShowSocketError(bool value); //Sets the value of the ShowSocketError property

    /*
    Property ShowSocketStatus
    */
    inline bool ShowSocketStatus() const; //Returns the value of ShowSocketStatus
    inline void SetShowSocketStatus(bool value); //Sets the value of the ShowSocketStatus property

    /*
    Property StandardTimeZone
    */
    inline int StandardTimeZone() const; //Returns the value of StandardTimeZone

    /*
    Method AddGroup
    */
    inline VigilSDK::_CVigilResult* AddGroup(const QString& sGroupName);

    /*
    Method AddUser
    */
    inline VigilSDK::_CVigilResult* AddUser(const QString& sUserName, const QString& sPassword);

    /*
    Method AdjustLiveClientQuality
    */
    inline VigilSDK::_CVigilResult* AdjustLiveClientQuality(int nCameraNumber, VigilSDK::EnumCompressionQuality nQuality);

    /*
    Method AdjustLiveClientResolution
    */
    inline VigilSDK::_CVigilResult* AdjustLiveClientResolution(int nCameraNumber, VigilSDK::EnumClientResolution nResolution);

    /*
    Method AdjustRecordingToDefaultIPS
    */
    inline VigilSDK::_CVigilResult* AdjustRecordingToDefaultIPS(int nCameraNumber);

    /*
    Method AdjustRecordingToMaxIPS
    */
    inline VigilSDK::_CVigilResult* AdjustRecordingToMaxIPS(int nCameraNumber);

    /*
    Method AssignGroupPermission
    */
    inline VigilSDK::_CVigilResult* AssignGroupPermission(const QString& sGroupName, VigilSDK::EnumVigilPermission ePermID);

    /*
    Method AssignUserGroup
    */
    inline VigilSDK::_CVigilResult* AssignUserGroup(const QString& sUserName, const QString& sGroupName);

    /*
    Method CheckServer
    */
    inline VigilSDK::_CVigilResult* CheckServer();

    /*
    Method CloseChannelFile
    */
    inline VigilSDK::_CVigilResult* CloseChannelFile(int nCameraNumber);

    /*
    Method CreateAudioTalkObject
    */
    inline VigilSDK::_CVigilAudioTalk* CreateAudioTalkObject();

    /*
    Method CreateCameraControlObject
    */
    inline VigilSDK::_CVigilCameraControl* CreateCameraControlObject();

    /*
    Method CreateLiveAudioFeedObject
    */
    inline VigilSDK::_CVigilLiveAudioFeed* CreateLiveAudioFeedObject();

    /*
    Method CreateLiveFeedObject
    */
    inline VigilSDK::_CVigilLiveFeed* CreateLiveFeedObject();

    /*
    Method CreatePlaybackObject
    */
    inline VigilSDK::_CVigilPlayback* CreatePlaybackObject();

    /*
    Method CreateRemotePlaybackObject
    */
    inline VigilSDK::_CVigilRemotePlayback* CreateRemotePlaybackObject();

    /*
    Method ForceStartAudio
    */
    inline VigilSDK::_CVigilResult* ForceStartAudio(int nChannel);

    /*
    Method ForceStartCamera
    */
    inline VigilSDK::_CVigilResult* ForceStartCamera(int nCameraNumber);

    /*
    Method ForceStopAudio
    */
    inline VigilSDK::_CVigilResult* ForceStopAudio(int nChannel);

    /*
    Method ForceStopCamera
    */
    inline VigilSDK::_CVigilResult* ForceStopCamera(int nCameraNumber);

    /*
    Method GetAudioInfo
    */
    inline VigilSDK::_CVigilResult* GetAudioInfo();

    /*
    Method GetCameraFromRegister
    */
    inline VigilSDK::_CVigilResult* GetCameraFromRegister(int nTerm, int nRegNum);

    /*
    Method GetCameraInfo
    */
    inline VigilSDK::_CVigilResult* GetCameraInfo();

    /*
    Method GetCameraNames
    */
    inline VigilSDK::_CVigilResult* GetCameraNames();

    /*
    Method GetDIOStatus
    */
    inline VigilSDK::_CVigilResult* GetDIOStatus();

    /*
    Method GetGroupPermissions
    */
    inline VigilSDK::_CVigilResult* GetGroupPermissions(QString& sGroupName);

    /*
    Method GetGroupUsers
    */
    inline VigilSDK::_CVigilResult* GetGroupUsers(QString& sGroupName);

    /*
    Method GetGroups
    */
    inline VigilSDK::_CVigilResult* GetGroups();

    /*
    Method GetPOSMappings
    */
    inline VigilSDK::_CVigilResult* GetPOSMappings();

    /*
    Method GetPOSPriorityCameras
    */
    inline VigilSDK::_CVigilResult* GetPOSPriorityCameras();

    /*
    Method GetUsers
    */
    inline VigilSDK::_CVigilResult* GetUsers();

    /*
    Method GetVASettings
    */
    inline VigilSDK::_CVigilResult* GetVASettings(int nCamera);

    /*
    Method HasPermission
    */
    inline bool HasPermission(VigilSDK::EnumVigilPermission nPermID);

    /*
    Method HasPermissionToAudioChannel
    */
    inline bool HasPermissionToAudioChannel(int nAudioChannel);

    /*
    Method HasPermissionToCamera
    */
    inline bool HasPermissionToCamera(int nCameraNumber);

    /*
    Method IsSpecialModuleRegistered
    */
    inline VigilSDK::_CVigilResult* IsSpecialModuleRegistered(int nModule);

    /*
    Method Login
    */
    inline VigilSDK::_CVigilResult* Login(const QString& sUserName, const QString& sPassword);

    /*
    Method Login
    */
    inline VigilSDK::_CVigilResult* Login(const QString& sUserName, const QString& sPassword, bool& bHashed);

    /*
    Method Logout
    */
    inline void Logout();

    /*
    Method OSDAddString
    */
    inline VigilSDK::_CVigilResult* OSDAddString(int nCameraNumber, const QString& sLine);

    /*
    Method OSDClear
    */
    inline VigilSDK::_CVigilResult* OSDClear(int nCameraNumber);

    /*
    Method OSDClear
    */
    inline VigilSDK::_CVigilResult* OSDClear(int nCameraNumber, bool bClearCaption);

    /*
    Method OSDGetVisible
    */
    inline VigilSDK::_CVigilResult* OSDGetVisible(int nCameraNumber);

    /*
    Method OSDSetConfig
    */
    inline VigilSDK::_CVigilResult* OSDSetConfig();

    /*
    Method OSDSetConfig
    */
    inline VigilSDK::_CVigilResult* OSDSetConfig(int nDwellTime);

    /*
    Method OSDSetConfig
    */
    inline VigilSDK::_CVigilResult* OSDSetConfig(int nDwellTime, int nLines);

    /*
    Method OSDSetConfig
    */
    inline VigilSDK::_CVigilResult* OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor);

    /*
    Method OSDSetConfig
    */
    inline VigilSDK::_CVigilResult* OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize);

    /*
    Method OSDSetConfig
    */
    inline VigilSDK::_CVigilResult* OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize, const QColor& nFontColor);

    /*
    Method OSDSetConfig
    */
    inline VigilSDK::_CVigilResult* OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize, const QColor& nFontColor, VigilSDK::EnumFontWeight nFontWeight);

    /*
    Method OSDSetFixedCaption
    */
    inline VigilSDK::_CVigilResult* OSDSetFixedCaption(int nCameraNumber);

    /*
    Method OSDSetFixedCaption
    */
    inline VigilSDK::_CVigilResult* OSDSetFixedCaption(int nCameraNumber, const QString& sCaption);

    /*
    Method OSDSetOffsets
    */
    inline VigilSDK::_CVigilResult* OSDSetOffsets(int nCameraNumber, int nXOffset, int nYOffset);

    /*
    Method OSDSetVisible
    */
    inline VigilSDK::_CVigilResult* OSDSetVisible(int nCameraNumber, bool bEnable);

    /*
    Method RemoveGroup
    */
    inline VigilSDK::_CVigilResult* RemoveGroup(const QString& sGroupName);

    /*
    Method RemoveGroupPermission
    */
    inline VigilSDK::_CVigilResult* RemoveGroupPermission(const QString& sGroupName, VigilSDK::EnumVigilPermission ePermID);

    /*
    Method RemoveUser
    */
    inline VigilSDK::_CVigilResult* RemoveUser(const QString& sUserName);

    /*
    Method SearchFootage
    */
    inline VigilSDK::_CVigilResult* SearchFootage(const QDateTime& dtFrom, const QString& dtTo);

    /*
    Method SearchFootage
    */
    inline VigilSDK::_CVigilResult* SearchFootage(const QDateTime& dtFrom, const QString& dtTo, VigilSDK::EnumRecordMode nMode);

    /*
    Method SelectLayout
    */
    inline VigilSDK::_CVigilResult* SelectLayout(VigilSDK::EnumLayout nLayout);

    /*
    Method SelectPage
    */
    inline VigilSDK::_CVigilResult* SelectPage(int nPageNumber);

    /*
    Method SetCameraInfo
    */
    inline VigilSDK::_CVigilResult* SetCameraInfo(_CVigilCameraInfo** info);

    /*
    Method SetDOStatus
    */
    inline VigilSDK::_CVigilResult* SetDOStatus(int nDigitalOutputNumber, bool bEnabled);

    /*
    Method StartCamera
    */
    inline VigilSDK::_CVigilResult* StartCamera(int nCameraNumber);

    /*
    Method StopCamera
    */
    inline VigilSDK::_CVigilResult* StopCamera(int nCameraNumber);

    /*
    Method SwitchAnalogMux
    */
    inline VigilSDK::_CVigilResult* SwitchAnalogMux(int nMonitor, VigilSDK::EnumLayout nLayout);

    /*
    Method SwitchAnalogMux
    */
    inline VigilSDK::_CVigilResult* SwitchAnalogMux(int nMonitor, VigilSDK::EnumLayout nLayout, int nPage);

    /*
    Method SwitchAnalogOutput
    */
    inline VigilSDK::_CVigilResult* SwitchAnalogOutput(int nCameraNumber);

    /*
    Method SwitchAnalogOutput
    */
    inline VigilSDK::_CVigilResult* SwitchAnalogOutput(int nCameraNumber, int nMonitorNumber);

    /*
    Method SystemReboot
    */
    inline VigilSDK::_CVigilResult* SystemReboot();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT CVigilResult : public QAxObject
{
public:
    CVigilResult(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AckResult
    */
    inline bool AckResult() const; //Returns the value of AckResult

    /*
    Property AdjustableClientFeed
    */
    inline bool AdjustableClientFeed() const; //Returns the value of AdjustableClientFeed

    /*
    Property Administrator
    */
    inline bool Administrator() const; //Returns the value of Administrator

    /*
    Property AudioChannelCount
    */
    inline int AudioChannelCount() const; //Returns the value of AudioChannelCount

    /*
    Property CPU
    */
    inline int CPU() const; //Returns the value of CPU

    /*
    Property CameraCount
    */
    inline int CameraCount() const; //Returns the value of CameraCount

    /*
    Property Command
    */
    inline QString Command() const; //Returns the value of Command

    /*
    Property DVRBoard
    */
    inline VigilSDK::EnumComartBoard DVRBoard() const; //Returns the value of DVRBoard

    /*
    Property HResult
    */
    inline QString HResult() const; //Returns the value of HResult

    /*
    Property LimitSearchToOneDay
    */
    inline bool LimitSearchToOneDay() const; //Returns the value of LimitSearchToOneDay

    /*
    Property LoggedOn
    */
    inline bool LoggedOn() const; //Returns the value of LoggedOn

    /*
    Property MaxUsers
    */
    inline int MaxUsers() const; //Returns the value of MaxUsers

    /*
    Property MemTotal
    */
    inline QString MemTotal() const; //Returns the value of MemTotal

    /*
    Property MemUsage
    */
    inline QString MemUsage() const; //Returns the value of MemUsage

    /*
    Property MinClientVersionMajor
    */
    inline QString MinClientVersionMajor() const; //Returns the value of MinClientVersionMajor

    /*
    Property MinClientVersionMinor
    */
    inline QString MinClientVersionMinor() const; //Returns the value of MinClientVersionMinor

    /*
    Property MinClientVersionRevision
    */
    inline QString MinClientVersionRevision() const; //Returns the value of MinClientVersionRevision

    /*
    Property NumClientConnections
    */
    inline int NumClientConnections() const; //Returns the value of NumClientConnections

    /*
    Property POSRunning
    */
    inline bool POSRunning() const; //Returns the value of POSRunning

    /*
    Property ReducedResolutionSupported
    */
    inline bool ReducedResolutionSupported() const; //Returns the value of ReducedResolutionSupported

    /*
    Property ServerRunning
    */
    inline bool ServerRunning() const; //Returns the value of ServerRunning

    /*
    Property ServerVersionMajor
    */
    inline QString ServerVersionMajor() const; //Returns the value of ServerVersionMajor

    /*
    Property ServerVersionMinor
    */
    inline QString ServerVersionMinor() const; //Returns the value of ServerVersionMinor

    /*
    Property ServerVersionRevision
    */
    inline QString ServerVersionRevision() const; //Returns the value of ServerVersionRevision

    /*
    Property SiteName
    */
    inline QString SiteName() const; //Returns the value of SiteName

    /*
    Property TerminalCount
    */
    inline int TerminalCount() const; //Returns the value of TerminalCount

    /*
    Property UpSince
    */
    inline QDateTime UpSince() const; //Returns the value of UpSince

    /*
    Property XML
    */
    inline QString XML() const; //Returns the value of XML

    /*
    Method GetAudioChannelCaptureVolume
    */
    inline int GetAudioChannelCaptureVolume(int nChan);

    /*
    Method GetAudioChannelCodec
    */
    inline int GetAudioChannelCodec(int nChan);

    /*
    Method GetAudioChannelDescription
    */
    inline QString GetAudioChannelDescription(int nChan);

    /*
    Method GetAudioChannelDetectVolume
    */
    inline int GetAudioChannelDetectVolume(int nChan);

    /*
    Method GetAudioChannelName
    */
    inline QString GetAudioChannelName(int nChan);

    /*
    Method GetAudioChannelSampleRates
    */
    inline int GetAudioChannelSampleRates(int nChan);

    /*
    Method GetAudioChannelSource
    */
    inline EnumAudioSource GetAudioChannelSource(int nChan);

    /*
    Method GetCameraActive
    */
    inline bool GetCameraActive(int nCameraNumber);

    /*
    Method GetCameraCapturing
    */
    inline bool GetCameraCapturing(int nCameraNumber);

    /*
    Method GetCameraCompression
    */
    inline EnumCompressionQuality GetCameraCompression(int nCameraNumber);

    /*
    Method GetCameraControlType
    */
    inline EnumCameraType GetCameraControlType(int nCameraNumber);

    /*
    Method GetCameraCovert
    */
    inline bool GetCameraCovert(int nCameraNumber);

    /*
    Method GetCameraFromRegister
    */
    inline int GetCameraFromRegister();

    /*
    Method GetCameraMode
    */
    inline EnumRecordMode GetCameraMode(int nCameraNumber);

    /*
    Method GetCameraName
    */
    inline QString GetCameraName(int nCameraNumber);

    /*
    Method GetCameraRecordSpeed
    */
    inline double GetCameraRecordSpeed(int nCameraNumber);

    /*
    Method GetCameraRecording
    */
    inline bool GetCameraRecording(int nCameraNumber);

    /*
    Method GetCameraResolution
    */
    inline EnumRecordResolution GetCameraResolution(int nCameraNumber);

    /*
    Method GetCameraSupportSubStream
    */
    inline bool GetCameraSupportSubStream(int nCameraNumber);

    /*
    Method GetDICount
    */
    inline int GetDICount();

    /*
    Method GetDIStatus
    */
    inline int GetDIStatus(int nInputNumber);

    /*
    Method GetDOCount
    */
    inline int GetDOCount();

    /*
    Method GetDOStatus
    */
    inline int GetDOStatus(int nOutputNumber);

    /*
    Method GetGroupCount
    */
    inline int GetGroupCount();

    /*
    Method GetGroupName
    */
    inline QString GetGroupName(QVariant& nGroupIndex);

    /*
    Method GetGroupPermission
    */
    inline int GetGroupPermission(QVariant& nGroupPermissionIndex);

    /*
    Method GetGroupPermissionsCount
    */
    inline int GetGroupPermissionsCount();

    /*
    Method GetGroupUser
    */
    inline QString GetGroupUser(QVariant& nUserGroupIndex);

    /*
    Method GetGroupUserCount
    */
    inline int GetGroupUserCount();

    /*
    Method GetPOSCameras
    */
    inline QVariantList GetPOSCameras(int nTerminalNumber);

    /*
    Method GetPOSMap
    */
    inline QStringList GetPOSMap(int nTerminalNumber);

    /*
    Method GetPOSPriorityCameraNumber
    */
    inline int GetPOSPriorityCameraNumber(int nTerminalNumber);

    /*
    Method GetPOSRegisters
    */
    inline QVariantList GetPOSRegisters(int nTerminalNumber);

    /*
    Method GetRecordControlTime
    */
    inline QString GetRecordControlTime();

    /*
    Method GetSearchEndTime
    */
    inline QString GetSearchEndTime(int nCameraNumber);

    /*
    Method GetSearchStartTime
    */
    inline QString GetSearchStartTime(int nCameraNumber);

    /*
    Method GetUserCount
    */
    inline int GetUserCount();

    /*
    Method GetUserName
    */
    inline QString GetUserName(QVariant& nUserIndex);

    /*
    Method GetUserPassword
    */
    inline QString GetUserPassword(QVariant& nUserIndex);

    /*
    Method GetVARuleEnabled
    */
    inline bool GetVARuleEnabled(int nRule);

    /*
    Method GetVARuleType
    */
    inline EnumVARuleType GetVARuleType(int nRule);

    /*
    Method GetVARulename
    */
    inline QString GetVARulename(int nRule);

    /*
    Method IsUserInGroup
    */
    inline bool IsUserInGroup(QString& sUserName);

    /*
    Method OSDGetVisible
    */
    inline bool OSDGetVisible();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT CVigilCameraInfo : public QAxObject
{
public:
    CVigilCameraInfo(QObject *parent = 0)
    : QAxObject(parent)
    {
        setControl("{19ba39ca-9d5d-4283-b644-6b29176ae9a8}");
    }

    /*
    Method AddInfo
    */
    inline void AddInfo(int nCameraNumber);

    /*
    Method AddInfo
    */
    inline void AddInfo(int nCameraNumber, VigilSDK::EnumCompressionQuality nCompression);

    /*
    Method AddInfo
    */
    inline void AddInfo(int nCameraNumber, VigilSDK::EnumCompressionQuality nCompression, VigilSDK::EnumRecordMode nMode);

    /*
    Method RemoveInfo
    */
    inline void RemoveInfo(int nCameraNumber);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT CVigilPlayback : public QAxObject
{
public:
    CVigilPlayback(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AudioBased
    */
    inline bool AudioBased() const; //Returns the value of AudioBased
    inline void SetAudioBased(bool value); //Sets the value of the AudioBased property

    /*
    Property AudioChannel
    */
    inline int AudioChannel() const; //Returns the value of AudioChannel
    inline void SetAudioChannel(int value); //Sets the value of the AudioChannel property

    /*
    Property AutoLoop
    */
    inline bool AutoLoop() const; //Returns the value of AutoLoop
    inline void SetAutoLoop(bool value); //Sets the value of the AutoLoop property

    /*
    Property CacheAutoSense
    */
    inline bool CacheAutoSense() const; //Returns the value of CacheAutoSense
    inline void SetCacheAutoSense(bool value); //Sets the value of the CacheAutoSense property

    /*
    Property CacheConnections
    */
    inline int CacheConnections() const; //Returns the value of CacheConnections
    inline void SetCacheConnections(int value); //Sets the value of the CacheConnections property

    /*
    Property CacheSize
    */
    inline int CacheSize() const; //Returns the value of CacheSize
    inline void SetCacheSize(int value); //Sets the value of the CacheSize property

    /*
    Property CachedFrames
    */
    inline int CachedFrames() const; //Returns the value of CachedFrames

    /*
    Property CameraName
    */
    inline QString CameraName() const; //Returns the value of CameraName

    /*
    Property CameraNumber
    */
    inline int CameraNumber() const; //Returns the value of CameraNumber

    /*
    Property CurrentDisplayedFrame
    */
    inline int CurrentDisplayedFrame() const; //Returns the value of CurrentDisplayedFrame

    /*
    Property CurrentExportFrame
    */
    inline int CurrentExportFrame() const; //Returns the value of CurrentExportFrame

    /*
    Property CurrentFrame
    */
    inline int CurrentFrame() const; //Returns the value of CurrentFrame
    inline void SetCurrentFrame(int value); //Sets the value of the CurrentFrame property

    /*
    Property DVR
    */
    inline VigilSDK::_CVigilDVR* DVR() const; //Returns the value of DVR

    /*
    Property FrameDateStamp
    */
    inline QString FrameDateStamp() const; //Returns the value of FrameDateStamp

    /*
    Property FrameRecordMode
    */
    inline VigilSDK::EnumRecordMode FrameRecordMode() const; //Returns the value of FrameRecordMode

    /*
    Property HWnd
    */
    inline int HWnd() const; //Returns the value of HWnd

    /*
    Property HWndStatus
    */
    inline int HWndStatus() const; //Returns the value of HWndStatus
    inline void SetHWndStatus(int value); //Sets the value of the HWndStatus property

    /*
    Property MotionBlocks
    */
    inline QByteArray MotionBlocks() const; //Returns the value of MotionBlocks

    /*
    Property OSDVisible
    */
    inline bool OSDVisible() const; //Returns the value of OSDVisible
    inline void SetOSDVisible(bool value); //Sets the value of the OSDVisible property

    /*
    Property Paused
    */
    inline bool Paused() const; //Returns the value of Paused
    inline void SetPaused(bool value); //Sets the value of the Paused property

    /*
    Property PlayMode
    */
    inline VigilSDK::EnumPlayMode PlayMode() const; //Returns the value of PlayMode

    /*
    Property PlaySpeed
    */
    inline int PlaySpeed() const; //Returns the value of PlaySpeed
    inline void SetPlaySpeed(int value); //Sets the value of the PlaySpeed property

    /*
    Property PrevWindowProcPtr
    */
    inline int PrevWindowProcPtr() const; //Returns the value of PrevWindowProcPtr
    inline void SetPrevWindowProcPtr(int value); //Sets the value of the PrevWindowProcPtr property

    /*
    Property ReducedResolution
    */
    inline bool ReducedResolution() const; //Returns the value of ReducedResolution
    inline void SetReducedResolution(bool value); //Sets the value of the ReducedResolution property

    /*
    Property SynchronizedPlayback
    */
    inline bool SynchronizedPlayback() const; //Returns the value of SynchronizedPlayback
    inline void SetSynchronizedPlayback(bool value); //Sets the value of the SynchronizedPlayback property

    /*
    Property TimestampCueMessage
    */
    inline int TimestampCueMessage() const; //Returns the value of TimestampCueMessage
    inline void SetTimestampCueMessage(int value); //Sets the value of the TimestampCueMessage property

    /*
    Property TotalExportFrames
    */
    inline int TotalExportFrames() const; //Returns the value of TotalExportFrames

    /*
    Property TotalFrames
    */
    inline int TotalFrames() const; //Returns the value of TotalFrames

    /*
    Property VAEnabled
    */
    inline bool VAEnabled() const; //Returns the value of VAEnabled
    inline void SetVAEnabled(bool value); //Sets the value of the VAEnabled property

    /*
    Property VideoInputHeight
    */
    inline int VideoInputHeight() const; //Returns the value of VideoInputHeight

    /*
    Property VideoInputWidth
    */
    inline int VideoInputWidth() const; //Returns the value of VideoInputWidth

    /*
    Method CancelExportVideo
    */
    inline void CancelExportVideo();

    /*
    Method ChooseAVICodec
    */
    inline bool ChooseAVICodec();

    /*
    Method CueToTimestamp
    */
    inline void CueToTimestamp(const QDateTime& dtCurrentTime);

    /*
    Method CueToTimestamp
    */
    inline void CueToTimestamp(const QDateTime& dtCurrentTime, bool bSyncOtherFeeds);

    /*
    Method DateStampByFrame
    */
    inline QString DateStampByFrame(int& nFrameNumber);

    /*
    Method ExportAudio
    */
    inline void ExportAudio(int hWndExportStatus, const QVariant& vFileNames, const QString& sStartTime, const QString& sEndTime, int nAudioChannel);

    /*
    Method ExportBMP
    */
    inline bool ExportBMP();

    /*
    Method ExportBMP
    */
    inline bool ExportBMP(const QString& sFileName);

    /*
    Method ExportBMP
    */
    inline bool ExportBMP(const QString& sFileName, bool bWithOverlayText);

    /*
    Method ExportJPG
    */
    inline bool ExportJPG();

    /*
    Method ExportJPG
    */
    inline bool ExportJPG(const QString& sFileName);

    /*
    Method ExportJPG
    */
    inline bool ExportJPG(const QString& sFileName, int nQuality);

    /*
    Method ExportJPG
    */
    inline bool ExportJPG(const QString& sFileName, int nQuality, bool bWithOverlayText);

    /*
    Method ExportVideo
    */
    inline void ExportVideo(int hWndExportStatus, const QString& sFileName, const QString& sStartTime, const QString& sEndTime);

    /*
    Method ExportVideo
    */
    inline void ExportVideo(int hWndExportStatus, const QString& sFileName, const QString& sStartTime, const QString& sEndTime, int nFirstFrame);

    /*
    Method ExportVideo
    */
    inline void ExportVideo(int hWndExportStatus, const QString& sFileName, const QString& sStartTime, const QString& sEndTime, int nFirstFrame, int nLastFrame);

    /*
    Method ExportVideo
    */
    inline void ExportVideo(int hWndExportStatus, const QString& sFileName, const QString& sStartTime, const QString& sEndTime, int nFirstFrame, int nLastFrame, const QString& sPOSFileName);

    /*
    Method ExportVideoEx
    */
    inline void ExportVideoEx(int hWndExportStatus, const QVariant& vFileNames, const QString& sStartTime, const QString& sEndTime);

    /*
    Method ExportVideoEx
    */
    inline void ExportVideoEx(int hWndExportStatus, const QVariant& vFileNames, const QString& sStartTime, const QString& sEndTime, int nFirstFrame);

    /*
    Method ExportVideoEx
    */
    inline void ExportVideoEx(int hWndExportStatus, const QVariant& vFileNames, const QString& sStartTime, const QString& sEndTime, int nFirstFrame, int nLastFrame);

    /*
    Method ExportVideoEx
    */
    inline void ExportVideoEx(int hWndExportStatus, const QVariant& vFileNames, const QString& sStartTime, const QString& sEndTime, int nFirstFrame, int nLastFrame, const QString& sPOSFileName);

    /*
    Method ExportVideoEx
    */
    inline void ExportVideoEx(int hWndExportStatus, const QVariant& vFileNames, const QString& sStartTime, const QString& sEndTime, int nFirstFrame, int nLastFrame, const QString& sPOSFileName, int nAudioChannel);

    /*
    Method FetchFootage
    */
    inline bool FetchFootage(int nCameraNumber, const QDateTime& dStartTime, const QDateTime& dEndTime);

    /*
    Method FetchFootage
    */
    inline bool FetchFootage(int nCameraNumber, const QDateTime& dStartTime, const QDateTime& dEndTime, VigilSDK::EnumRecordMode nMode);

    /*
    Method FetchFootage
    */
    inline bool FetchFootage(int nCameraNumber, const QDateTime& dStartTime, const QDateTime& dEndTime, VigilSDK::EnumRecordMode nMode, int& nTimeout);

    /*
    Method FetchFootageForRegister
    */
    inline bool FetchFootageForRegister(int nTerminalNumber, int nRegisterNumber, const QDateTime& dStartTime, const QDateTime& dEndTime);

    /*
    Method FetchFootageForRegister
    */
    inline bool FetchFootageForRegister(int nTerminalNumber, int nRegisterNumber, const QDateTime& dStartTime, const QDateTime& dEndTime, VigilSDK::EnumRecordMode nMode);

    /*
    Method FetchFootageForRegister
    */
    inline bool FetchFootageForRegister(int nTerminalNumber, int nRegisterNumber, const QDateTime& dStartTime, const QDateTime& dEndTime, VigilSDK::EnumRecordMode nMode, int& nTimeout);

    /*
    Method GetIndexList
    */
    inline ATLPARSERLib::IParser* GetIndexList(int nCameraNumber, const QDateTime& dStartTime, const QDateTime& dEndTime);

    /*
    Method GetIndexList
    */
    inline ATLPARSERLib::IParser* GetIndexList(int nCameraNumber, const QDateTime& dStartTime, const QDateTime& dEndTime, VigilSDK::EnumRecordMode nMode);

    /*
    Method GetIndexList
    */
    inline ATLPARSERLib::IParser* GetIndexList(int nCameraNumber, const QDateTime& dStartTime, const QDateTime& dEndTime, VigilSDK::EnumRecordMode nMode, int& nTimeout);

    /*
    Method InitiateStopFeed
    */
    inline void InitiateStopFeed();

    /*
    Method OSDAddString
    */
    inline void OSDAddString(const QString& sLine, const QDateTime& dtTimestamp);

    /*
    Method OSDSetConfig
    */
    inline void OSDSetConfig();

    /*
    Method OSDSetConfig
    */
    inline void OSDSetConfig(int nDwellTime);

    /*
    Method OSDSetConfig
    */
    inline void OSDSetConfig(int nDwellTime, int nLines);

    /*
    Method OSDSetConfig
    */
    inline void OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor);

    /*
    Method OSDSetConfig
    */
    inline void OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize);

    /*
    Method OSDSetConfig
    */
    inline void OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize, const QColor& nFontColor);

    /*
    Method OSDSetConfig
    */
    inline void OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize, const QColor& nFontColor, VigilSDK::EnumFontWeight nFontWeight);

    /*
    Method PutZoom
    */
    inline void PutZoom(bool bEnableZoom, int nLeft, int nTop, int nRight, int nBottom, VigilSDK::EnumZoomCoordType eZoomCoordType);

    /*
    Method RefreshScreen
    */
    inline void RefreshScreen();

    /*
    Method Repaint
    */
    inline void Repaint();

    /*
    Method ResumeThread
    */
    inline void ResumeThread();

    /*
    Method Run
    */
    inline void Run();

    /*
    Method RunBackwards
    */
    inline void RunBackwards();

    /*
    Method SetFrameAsync
    */
    inline void SetFrameAsync(int NewVal);

    /*
    Method StopFeed
    */
    inline void StopFeed();

    /*
    Method SuspendThread
    */
    inline void SuspendThread();

    /*
    Method View
    */
    inline bool View(int HWnd);

    /*
    Method View
    */
    inline bool View(int HWnd, int hWndSocketError);

    /*
    Method WindowProc
    */
    inline int WindowProc(int HWnd, int uMsg, int wParam, int lParam, bool& bConsumed);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT CRect : public QAxObject
{
public:
    CRect(QObject *parent = 0)
    : QAxObject(parent)
    {
        setControl("{fc8466b5-1be4-4043-bfbb-67b6910118ec}");
    }

    /*
    Property Bottom
    */
    inline int Bottom() const; //Returns the value of Bottom
    inline void SetBottom(int value); //Sets the value of the Bottom property

    /*
    Property Height
    */
    inline int Height() const; //Returns the value of Height
    inline void SetHeight(int value); //Sets the value of the Height property

    /*
    Property Left
    */
    inline int Left() const; //Returns the value of Left
    inline void SetLeft(int value); //Sets the value of the Left property

    /*
    Property Right
    */
    inline int Right() const; //Returns the value of Right
    inline void SetRight(int value); //Sets the value of the Right property

    /*
    Property Top
    */
    inline int Top() const; //Returns the value of Top
    inline void SetTop(int value); //Sets the value of the Top property

    /*
    Property Width
    */
    inline int Width() const; //Returns the value of Width
    inline void SetWidth(int value); //Sets the value of the Width property

    /*
    Method Clear
    */
    inline void Clear();

    /*
    Method Copy
    */
    inline VigilSDK::_CRect* Copy();

    /*
    Method Equals
    */
    inline bool Equals(VigilSDK::_CRect* oRect);

    /*
    Method Inflate
    */
    inline void Inflate(int nHoriz, int nVert);

    /*
    Method Inflate
    */
    inline void Inflate(int nHoriz, int nVert, bool bAnchorTopLeft);

    /*
    Method Translate
    */
    inline void Translate(int nHoriz, int nVert);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT IWindowSubclasser : public QAxObject
{
public:
    IWindowSubclasser(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property HWnd
    */
    inline int HWnd() const; //Returns the value of HWnd

    /*
    Property PrevWindowProcPtr
    */
    inline int PrevWindowProcPtr() const; //Returns the value of PrevWindowProcPtr
    inline void SetPrevWindowProcPtr(int value); //Sets the value of the PrevWindowProcPtr property

    /*
    Method WindowProc
    */
    inline int WindowProc(int HWnd, int uMsg, int wParam, int lParam, bool& bConsumed);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT IUserInputListener : public QAxObject
{
public:
    IUserInputListener(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AppWindowHwnd
    */
    inline int AppWindowHwnd() const; //Returns the value of AppWindowHwnd

    /*
    Property IsCtrlKeyDown
    */
    inline bool IsCtrlKeyDown() const; //Returns the value of IsCtrlKeyDown

    /*
    Property Key
    */
    inline QString Key() const; //Returns the value of Key

    /*
    Property ListenKeyboardMouse
    */
    inline bool ListenKeyboardMouse() const; //Returns the value of ListenKeyboardMouse

    /*
    Property ListenWindow
    */
    inline bool ListenWindow() const; //Returns the value of ListenWindow

    /*
    Property MouseOver
    */
    inline bool MouseOver() const; //Returns the value of MouseOver

    /*
    Method AppGotFocus
    */
    inline void AppGotFocus();

    /*
    Method AppLostFocus
    */
    inline void AppLostFocus();

    /*
    Method GetBoundingRect
    */
    inline QVariant GetBoundingRect(int& nLeft, int& nTop, int& nRight, int& nBottom);

    /*
    Method KeyPressed
    */
    inline void KeyPressed(int& KeyCode);

    /*
    Method KeyReleased
    */
    inline void KeyReleased(int& KeyCode);

    /*
    Method KeyboardHookProc
    */
    inline int KeyboardHookProc(int idHook, int wParam, int lParam);

    /*
    Method MouseEnter
    */
    inline void MouseEnter();

    /*
    Method MouseHookProc
    */
    inline int MouseHookProc(int idHook, int wParam, int lParam);

    /*
    Method MouseLeave
    */
    inline void MouseLeave();

    /*
    Method WindowHookProc
    */
    inline int WindowHookProc(int idHook, int wParam, int lParam);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT CVigilRemotePlayback : public QAxObject
{
public:
    CVigilRemotePlayback(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property ClientID
    */
    inline QString ClientID() const; //Returns the value of ClientID
    inline void SetClientID(const QString& value); //Sets the value of the ClientID property

    /*
    Property CurrentFrame
    */
    inline int CurrentFrame() const; //Returns the value of CurrentFrame
    inline void SetCurrentFrame(int value); //Sets the value of the CurrentFrame property

    /*
    Property DVR
    */
    inline VigilSDK::_CVigilDVR* DVR() const; //Returns the value of DVR

    /*
    Property DVRStatus
    */
    inline VigilSDK::EnumDVRStatus DVRStatus() const; //Returns the value of DVRStatus

    /*
    Property EndPlaybackFrame
    */
    inline int EndPlaybackFrame() const; //Returns the value of EndPlaybackFrame
    inline void SetEndPlaybackFrame(int value); //Sets the value of the EndPlaybackFrame property

    /*
    Property FastFrameIncrement
    */
    inline int FastFrameIncrement() const; //Returns the value of FastFrameIncrement

    /*
    Property NominalFPS
    */
    inline int NominalFPS() const; //Returns the value of NominalFPS

    /*
    Property StartPlaybackFrame
    */
    inline int StartPlaybackFrame() const; //Returns the value of StartPlaybackFrame
    inline void SetStartPlaybackFrame(int value); //Sets the value of the StartPlaybackFrame property

    /*
    Method GetFrameTimestamp
    */
    inline QString GetFrameTimestamp(int& nFrame);

    /*
    Method LoadPlayback
    */
    inline bool LoadPlayback(int nCameraNumber, const QDateTime& dtDateFrom, const QDateTime& dtDateTo);

    /*
    Method PlaybackControlCommand
    */
    inline bool PlaybackControlCommand(VigilSDK::EnumPlaybackControlCommand eCommand);

    /*
    Method UnloadPlayback
    */
    inline bool UnloadPlayback();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT CVigilCameraControl : public QAxObject
{
public:
    CVigilCameraControl(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property DVR
    */
    inline VigilSDK::_CVigilDVR* DVR() const; //Returns the value of DVR

    /*
    Method ClearAux
    */
    inline EnumCCResult ClearAux(int nCameraNumber, int nAuxNumber);

    /*
    Method EnhanceImage
    */
    inline EnumCCResult EnhanceImage(int nCameraNumber, VigilSDK::EnumEnhancement eEnhancementType);

    /*
    Method EnhanceImage
    */
    inline EnumCCResult EnhanceImage(int nCameraNumber, VigilSDK::EnumEnhancement eEnhancementType, bool bOn);

    /*
    Method GetCameraType
    */
    inline EnumCameraType GetCameraType(int nCameraNumber);

    /*
    Method GetPatternNames
    */
    inline QVariant GetPatternNames(int nCameraNumber);

    /*
    Method GetPresetnames
    */
    inline QVariant GetPresetnames(int nCameraNumber);

    /*
    Method GotoPreset
    */
    inline EnumCCResult GotoPreset(int nCameraNumber, const QVariant& vPreset);

    /*
    Method LoadPresetTour
    */
    inline void LoadPresetTour(int nCameraNumber, QVariant& vPreset, QVariant& vDwellTime);

    /*
    Method ModifySequence
    */
    inline EnumCCResult ModifySequence(int nCameraNumber, const QVariant& vSequence, int nPoint, const QVariant& vPreset, int nDwell, int nSpeed);

    /*
    Method NumTourPresets
    */
    inline int NumTourPresets(int nCameraNumber);

    /*
    Method RunPattern
    */
    inline EnumCCResult RunPattern(int nCameraNumber, const QVariant& vPattern);

    /*
    Method RunSequence
    */
    inline EnumCCResult RunSequence(int nCameraNumber, const QVariant& vSequence);

    /*
    Method SavePresetTour
    */
    inline void SavePresetTour(int nCameraNumber, const QVariant& vPreset, const QVariant& vDwellTime);

    /*
    Method SendMenuCommand
    */
    inline EnumCCResult SendMenuCommand(int nCameraNumber, VigilSDK::EnumMenuCommand eMenuCommand);

    /*
    Method SetAux
    */
    inline EnumCCResult SetAux(int nCameraNumber, int nAuxNumber);

    /*
    Method SetPreset
    */
    inline EnumCCResult SetPreset(int nCameraNumber, const QVariant& vPreset);

    /*
    Method SetPreset
    */
    inline EnumCCResult SetPreset(int nCameraNumber, const QVariant& vPreset, const QString& sNewPresetName);

    /*
    Method StartPTZIF
    */
    inline EnumCCResult StartPTZIF(int nCameraNumber);

    /*
    Method StartPTZIF
    */
    inline EnumCCResult StartPTZIF(int nCameraNumber, int nPanSpeed);

    /*
    Method StartPTZIF
    */
    inline EnumCCResult StartPTZIF(int nCameraNumber, int nPanSpeed, int nTiltSpeed);

    /*
    Method StartPTZIF
    */
    inline EnumCCResult StartPTZIF(int nCameraNumber, int nPanSpeed, int nTiltSpeed, int nZoomSpeed);

    /*
    Method StartPTZIF
    */
    inline EnumCCResult StartPTZIF(int nCameraNumber, int nPanSpeed, int nTiltSpeed, int nZoomSpeed, int nIrisSpeed);

    /*
    Method StartPTZIF
    */
    inline EnumCCResult StartPTZIF(int nCameraNumber, int nPanSpeed, int nTiltSpeed, int nZoomSpeed, int nIrisSpeed, int nFocusSpeed);

    /*
    Method StartPattern
    */
    inline EnumCCResult StartPattern(int nCameraNumber, const QVariant& vPattern);

    /*
    Method StartSequence
    */
    inline EnumCCResult StartSequence(int nCameraNumber, const QVariant& vSequence);

    /*
    Method StartTour
    */
    inline void StartTour(int nCameraNumber);

    /*
    Method StopPTZIF
    */
    inline EnumCCResult StopPTZIF(int nCameraNumber);

    /*
    Method StopPattern
    */
    inline EnumCCResult StopPattern(int nCameraNumber);

    /*
    Method StopPattern
    */
    inline EnumCCResult StopPattern(int nCameraNumber, const QString& sNewPatternName);

    /*
    Method StopSequence
    */
    inline EnumCCResult StopSequence(int nCameraNumber, const QVariant& vSequence);

    /*
    Method StopSequence
    */
    inline EnumCCResult StopSequence(int nCameraNumber, const QVariant& vSequence, const QString& sNewSequenceName);

    /*
    Method StopTour
    */
    inline void StopTour(int nCameraNumber);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT CVigilAlarm : public QAxObject
{
public:
    CVigilAlarm(QObject *parent = 0)
    : QAxObject(parent)
    {
        setControl("{dcccd0b5-8275-4c72-bbc6-cda96e905fc0}");
    }

    /*
    Property Acknowledged
    */
    inline bool Acknowledged() const; //Returns the value of Acknowledged
    inline void SetAcknowledged(bool value); //Sets the value of the Acknowledged property

    /*
    Property AlarmGUID
    */
    inline QString AlarmGUID() const; //Returns the value of AlarmGUID
    inline void SetAlarmGUID(const QString& value); //Sets the value of the AlarmGUID property

    /*
    Property AlarmInput
    */
    inline int AlarmInput() const; //Returns the value of AlarmInput
    inline void SetAlarmInput(int value); //Sets the value of the AlarmInput property

    /*
    Property AlarmInputString
    */
    inline QString AlarmInputString() const; //Returns the value of AlarmInputString

    /*
    Property AlarmType
    */
    inline VigilSDK::EnumAlarmType AlarmType() const; //Returns the value of AlarmType
    inline void SetAlarmType(VigilSDK::EnumAlarmType value); //Sets the value of the AlarmType property

    /*
    Property AlarmTypeString
    */
    inline QString AlarmTypeString() const; //Returns the value of AlarmTypeString

    /*
    Property BinaryLength
    */
    inline int BinaryLength() const; //Returns the value of BinaryLength

    /*
    Property CameraNumbers
    */
    inline QString CameraNumbers() const; //Returns the value of CameraNumbers
    inline void SetCameraNumbers(const QString& value); //Sets the value of the CameraNumbers property

    /*
    Property CustomBinary
    */
    inline QByteArray CustomBinary() const; //Returns the value of CustomBinary

    /*
    Property CustomDataType
    */
    inline VigilSDK::EnumCustomAlarmDataType CustomDataType() const; //Returns the value of CustomDataType

    /*
    Property CustomText
    */
    inline QString CustomText() const; //Returns the value of CustomText

    /*
    Property IsMetaData
    */
    inline bool IsMetaData() const; //Returns the value of IsMetaData
    inline void SetIsMetaData(bool value); //Sets the value of the IsMetaData property

    /*
    Property Key
    */
    inline QString Key() const; //Returns the value of Key

    /*
    Property MetaData
    */
    inline QString MetaData() const; //Returns the value of MetaData

    /*
    Property ServerGUID
    */
    inline QString ServerGUID() const; //Returns the value of ServerGUID
    inline void SetServerGUID(const QString& value); //Sets the value of the ServerGUID property

    /*
    Property ServerIP
    */
    inline QString ServerIP() const; //Returns the value of ServerIP
    inline void SetServerIP(const QString& value); //Sets the value of the ServerIP property

    /*
    Property ServerName
    */
    inline QString ServerName() const; //Returns the value of ServerName
    inline void SetServerName(const QString& value); //Sets the value of the ServerName property

    /*
    Property ServerString
    */
    inline QString ServerString() const; //Returns the value of ServerString

    /*
    Property SiteName
    */
    inline QString SiteName() const; //Returns the value of SiteName
    inline void SetSiteName(const QString& value); //Sets the value of the SiteName property

    /*
    Method Clone
    */
    inline VigilSDK::_CVigilAlarm* Clone();

    /*
    Method EndTime
    */
    inline QString EndTime();

    /*
    Method EndTime
    */
    inline QString EndTime(bool bUTC);

    /*
    Method FromRS
    */
    inline void FromRS(IDispatch* rs);

    /*
    Method IncludesCamera
    */
    inline bool IncludesCamera(int nCameraNumber);

    /*
    Method SetCustomBinary
    */
    inline void SetCustomBinary(QVariant& pNewVal);

    /*
    Method SetCustomText
    */
    inline void SetCustomText(QString& pNewVal);

    /*
    Method SetEndTime
    */
    inline void SetEndTime();

    /*
    Method SetEndTime
    */
    inline void SetEndTime(bool bUTC);

    /*
    Method SetEndTime
    */
    inline void SetEndTime(bool bUTC, const QString& rhs);

    /*
    Method SetStartTime
    */
    inline void SetStartTime();

    /*
    Method SetStartTime
    */
    inline void SetStartTime(bool bUTC);

    /*
    Method SetStartTime
    */
    inline void SetStartTime(bool bUTC, const QString& rhs);

    /*
    Method StartTime
    */
    inline QString StartTime();

    /*
    Method StartTime
    */
    inline QString StartTime(bool bUTC);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT CVigilAlarmManager : public QAxObject
{
public:
    CVigilAlarmManager(QObject *parent = 0)
    : QAxObject(parent)
    {
        setControl("{e7eced01-0abb-435e-bc9d-262067fe42d0}");
    }

    /*
    Property Listening
    */
    inline bool Listening() const; //Returns the value of Listening
    inline void SetListening(bool value); //Sets the value of the Listening property

    /*
    Property LogFileDirectory
    */
    inline QString LogFileDirectory() const; //Returns the value of LogFileDirectory
    inline void SetLogFileDirectory(const QString& value); //Sets the value of the LogFileDirectory property

    /*
    Property Port
    */
    inline int Port() const; //Returns the value of Port
    inline void SetPort(int value); //Sets the value of the Port property

    /*
    Method AddAlarm
    */
    inline void AddAlarm(VigilSDK::_CVigilAlarm* oAlarm);

    /*
    Method ClearSuppressedAlarms
    */
    inline void ClearSuppressedAlarms();

    /*
    Method ConvertDateToFileTime
    */
    inline qlonglong ConvertDateToFileTime(const QVariant& vDate);

    /*
    Method ConvertDateToFileTime
    */
    inline qlonglong ConvertDateToFileTime(const QVariant& vDate, bool bUTC);

    /*
    Method FetchThumbnail
    */
    inline bool FetchThumbnail(VigilSDK::_CVigilAlarm* oAlarm);

    /*
    Method GetSuppressedAlarms
    */
    inline VBA::_Collection* GetSuppressedAlarms();

    /*
    Method IsAlarmSuppressed
    */
    inline bool IsAlarmSuppressed(const QString& sMetaData);

    /*
    Method IsFetchingThumbnail
    */
    inline bool IsFetchingThumbnail(VigilSDK::_CVigilAlarm* oAlarm);

    /*
    Method Query
    */
    inline IDispatch* Query(const QString& sFilter);

    /*
    Method SaveLog
    */
    inline void SaveLog();

    /*
    Method SaveSuppressionMetaData
    */
    inline void SaveSuppressionMetaData();

    /*
    Method SuppressAlarm
    */
    inline void SuppressAlarm(VigilSDK::EnumAlarmType eAlarmType, int nAlarmInput, const QString& sServerGUID);

    /*
    Method SuppressAlarm
    */
    inline void SuppressAlarm(VigilSDK::EnumAlarmType eAlarmType, int nAlarmInput, const QString& sServerGUID, const QString& sExpirationDate);

    /*
    Method UnsuppressAlarm
    */
    inline void UnsuppressAlarm(VigilSDK::EnumAlarmType eAlarmType, int nAlarmInput, const QString& sServerGUID);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT CVigilLiveAudioFeed : public QAxObject
{
public:
    CVigilLiveAudioFeed(QObject *parent = 0)
    : QAxObject(parent)
    {
        setControl("{5de2832e-6bf7-475f-a1e9-3dab303bc555}");
    }

    /*
    Property DVR
    */
    inline VigilSDK::_CVigilDVR* DVR() const; //Returns the value of DVR

    /*
    Property DetectionVolume
    */
    inline int DetectionVolume() const; //Returns the value of DetectionVolume
    inline void SetDetectionVolume(int value); //Sets the value of the DetectionVolume property

    /*
    Property OutputVolume
    */
    inline int OutputVolume() const; //Returns the value of OutputVolume

    /*
    Property Prebuffer
    */
    inline int Prebuffer() const; //Returns the value of Prebuffer
    inline void SetPrebuffer(int value); //Sets the value of the Prebuffer property

    /*
    Method StartFeed
    */
    inline bool StartFeed(int nChannel, int HWnd);

    /*
    Method StopFeed
    */
    inline void StopFeed();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT CVigilVCM : public QAxObject
{
public:
    CVigilVCM(QObject *parent = 0)
    : QAxObject(parent)
    {
        setControl("{736c65f4-64d3-4a1e-bff5-c4417aff5677}");
    }

    /*
    Method Login
    */
    inline VigilSDK::_CVigilResult* Login(const QString& sUserName, const QString& sPassword, QString& sIPAddress);

    /*
    Method Login
    */
    inline VigilSDK::_CVigilResult* Login(const QString& sUserName, const QString& sPassword, QString& sIPAddress, int& nPort);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT CVigilExternalAlarm : public QAxObject
{
public:
    CVigilExternalAlarm(QObject *parent = 0)
    : QAxObject(parent)
    {
        setControl("{125b8824-9164-4693-a85d-75b7c4df69fc}");
    }

    /*
    Property ShowSocketError
    */
    inline bool ShowSocketError() const; //Returns the value of ShowSocketError
    inline void SetShowSocketError(bool value); //Sets the value of the ShowSocketError property

    /*
    Property ShowSocketStatus
    */
    inline bool ShowSocketStatus() const; //Returns the value of ShowSocketStatus
    inline void SetShowSocketStatus(bool value); //Sets the value of the ShowSocketStatus property

    /*
    Method SendAlarm
    */
    inline bool SendAlarm(QString& sIP, int& nPort, int& nID, bool& bAlarm);

    /*
    Method SendRequest
    */
    inline bool SendRequest(ATLREQUESTLib::IRequest** req, QString& sIP, int& nPort);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class VIGILSDK_EXPORT CVigilAudioTalk : public QAxObject
{
public:
    CVigilAudioTalk(QObject *parent = 0)
    : QAxObject(parent)
    {
        setControl("{c14dd896-93d0-4803-8da5-db634504cb16}");
    }

    /*
    Property Buffer
    */
    inline int Buffer() const; //Returns the value of Buffer
    inline void SetBuffer(int value); //Sets the value of the Buffer property

    /*
    Property DVR
    */
    inline VigilSDK::_CVigilDVR* DVR() const; //Returns the value of DVR

    /*
    Property ErrorCode
    */
    inline int ErrorCode() const; //Returns the value of ErrorCode

    /*
    Property ErrorDescription
    */
    inline QString ErrorDescription() const; //Returns the value of ErrorDescription

    /*
    Property Mute
    */
    inline bool Mute() const; //Returns the value of Mute
    inline void SetMute(bool value); //Sets the value of the Mute property

    /*
    Property MuteOnTalk
    */
    inline bool MuteOnTalk() const; //Returns the value of MuteOnTalk
    inline void SetMuteOnTalk(bool value); //Sets the value of the MuteOnTalk property

    /*
    Property StatInput
    */
    inline int StatInput() const; //Returns the value of StatInput

    /*
    Property StatOutput
    */
    inline int StatOutput() const; //Returns the value of StatOutput

    /*
    Property Talk
    */
    inline bool Talk() const; //Returns the value of Talk
    inline void SetTalk(bool value); //Sets the value of the Talk property

    /*
    Property VolumeMic
    */
    inline int VolumeMic() const; //Returns the value of VolumeMic
    inline void SetVolumeMic(int value); //Sets the value of the VolumeMic property

    /*
    Property VolumeSpeaker
    */
    inline int VolumeSpeaker() const; //Returns the value of VolumeSpeaker
    inline void SetVolumeSpeaker(int value); //Sets the value of the VolumeSpeaker property

    /*
    Method StartAudioTalk
    */
    inline bool StartAudioTalk(int nCamera, int HWnd);

    /*
    Method StopAudioTalk
    */
    inline void StopAudioTalk();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// member function implementation
#ifndef QAX_DUMPCPP_VIGILSDK_NOINLINES
inline QString _CVigilLiveFeed::CameraName() const
{
    QVariant qax_result = property("CameraName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int _CVigilLiveFeed::CameraNumber() const
{
    QVariant qax_result = property("CameraNumber");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline double _CVigilLiveFeed::CaptureFPS() const
{
    QVariant qax_result = property("CaptureFPS");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}

inline VigilSDK::_CVigilDVR* _CVigilLiveFeed::DVR() const
{
    VigilSDK::_CVigilDVR* qax_pointer = 0;
    qRegisterMetaType("_CVigilDVR*", &qax_pointer);
    qRegisterMetaType("_CVigilDVR", qax_pointer);
    QVariant qax_result = property("DVR");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::_CVigilDVR**)qax_result.constData();
}

inline VigilSDK::EnumLiveSpeed _CVigilLiveFeed::FeedSpeed() const
{
    QVariant qax_result = property("FeedSpeed");
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::EnumLiveSpeed*)qax_result.constData();
}
inline void _CVigilLiveFeed::SetFeedSpeed(VigilSDK::EnumLiveSpeed value){ setProperty("FeedSpeed", QVariant(value)); }

inline int _CVigilLiveFeed::HWndStatus() const
{
    QVariant qax_result = property("HWndStatus");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CVigilLiveFeed::SetHWndStatus(int value){ setProperty("HWndStatus", QVariant(value)); }

inline double _CVigilLiveFeed::KBPerFrame() const
{
    QVariant qax_result = property("KBPerFrame");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}

inline QByteArray _CVigilLiveFeed::MotionBlocks() const
{
    QVariant qax_result = property("MotionBlocks");
    Q_ASSERT(qax_result.isValid());
    return *(QByteArray*)qax_result.constData();
}

inline bool _CVigilLiveFeed::OSDVisible() const
{
    QVariant qax_result = property("OSDVisible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CVigilLiveFeed::SetOSDVisible(bool value){ setProperty("OSDVisible", QVariant(value)); }

inline VigilSDK::EnumRecordMode _CVigilLiveFeed::RecordMode() const
{
    QVariant qax_result = property("RecordMode");
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::EnumRecordMode*)qax_result.constData();
}

inline VigilSDK::EnumRecordStatus _CVigilLiveFeed::RecordStatus() const
{
    QVariant qax_result = property("RecordStatus");
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::EnumRecordStatus*)qax_result.constData();
}

inline bool _CVigilLiveFeed::ReducedResolution() const
{
    QVariant qax_result = property("ReducedResolution");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CVigilLiveFeed::SetReducedResolution(bool value){ setProperty("ReducedResolution", QVariant(value)); }

inline bool _CVigilLiveFeed::Running() const
{
    QVariant qax_result = property("Running");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _CVigilLiveFeed::SignalLoss() const
{
    QVariant qax_result = property("SignalLoss");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _CVigilLiveFeed::SubStream() const
{
    QVariant qax_result = property("SubStream");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CVigilLiveFeed::SetSubStream(bool value){ setProperty("SubStream", QVariant(value)); }

inline bool _CVigilLiveFeed::TimestampVisible() const
{
    QVariant qax_result = property("TimestampVisible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CVigilLiveFeed::SetTimestampVisible(bool value){ setProperty("TimestampVisible", QVariant(value)); }

inline bool _CVigilLiveFeed::TransferMotionBlocks() const
{
    QVariant qax_result = property("TransferMotionBlocks");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CVigilLiveFeed::SetTransferMotionBlocks(bool value){ setProperty("TransferMotionBlocks", QVariant(value)); }

inline QString _CVigilLiveFeed::UserCaption() const
{
    QVariant qax_result = property("UserCaption");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CVigilLiveFeed::SetUserCaption(const QString& value){ setProperty("UserCaption", QVariant(value)); }

inline bool _CVigilLiveFeed::VAEnabled() const
{
    QVariant qax_result = property("VAEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CVigilLiveFeed::SetVAEnabled(bool value){ setProperty("VAEnabled", QVariant(value)); }

inline int _CVigilLiveFeed::VideoInputHeight() const
{
    QVariant qax_result = property("VideoInputHeight");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int _CVigilLiveFeed::VideoInputWidth() const
{
    QVariant qax_result = property("VideoInputWidth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline void _CVigilLiveFeed::InitiateStopFeed()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void _CVigilLiveFeed::OSDAddString(const QString& sLine)
{
    void *_a[] = {0, (void*)&sLine};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void _CVigilLiveFeed::OSDSetConfig()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void _CVigilLiveFeed::OSDSetConfig(int nDwellTime)
{
    void *_a[] = {0, (void*)&nDwellTime};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void _CVigilLiveFeed::OSDSetConfig(int nDwellTime, int nLines)
{
    void *_a[] = {0, (void*)&nDwellTime, (void*)&nLines};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _CVigilLiveFeed::OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor)
{
    void *_a[] = {0, (void*)&nDwellTime, (void*)&nLines, (void*)&nBackColor};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void _CVigilLiveFeed::OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize)
{
    void *_a[] = {0, (void*)&nDwellTime, (void*)&nLines, (void*)&nBackColor, (void*)&nFontSize};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void _CVigilLiveFeed::OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize, const QColor& nFontColor)
{
    void *_a[] = {0, (void*)&nDwellTime, (void*)&nLines, (void*)&nBackColor, (void*)&nFontSize, (void*)&nFontColor};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline void _CVigilLiveFeed::OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize, const QColor& nFontColor, VigilSDK::EnumFontWeight nFontWeight)
{
    void *_a[] = {0, (void*)&nDwellTime, (void*)&nLines, (void*)&nBackColor, (void*)&nFontSize, (void*)&nFontColor, (void*)&nFontWeight};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline void _CVigilLiveFeed::PutZoom(bool bEnableZoom, int nLeft, int nTop, int nRight, int nBottom, VigilSDK::EnumZoomCoordType eZoomCoordType)
{
    void *_a[] = {0, (void*)&bEnableZoom, (void*)&nLeft, (void*)&nTop, (void*)&nRight, (void*)&nBottom, (void*)&eZoomCoordType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void _CVigilLiveFeed::RefreshScreen()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void _CVigilLiveFeed::ResumeThread()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline bool _CVigilLiveFeed::SaveSnapshot(const QString& sFileName)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&sFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline bool _CVigilLiveFeed::SaveSnapshot(const QString& sFileName, bool bAsJPEG)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&sFileName, (void*)&bAsJPEG};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline bool _CVigilLiveFeed::SaveSnapshot(const QString& sFileName, bool bAsJPEG, int nJPEGQuality)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&sFileName, (void*)&bAsJPEG, (void*)&nJPEGQuality};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline void _CVigilLiveFeed::StopFeed()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
}

inline void _CVigilLiveFeed::SuspendThread()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
}

inline bool _CVigilLiveFeed::View(int nCameraNumber, int HWnd)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&HWnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
    return qax_result;
}

inline bool _CVigilLiveFeed::ViewRegister(int nTerminalNumber, int nRegisterNumber, int HWnd)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nTerminalNumber, (void*)&nRegisterNumber, (void*)&HWnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}


inline QString CVigilLiveFeed::CameraName() const
{
    QVariant qax_result = property("CameraName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int CVigilLiveFeed::CameraNumber() const
{
    QVariant qax_result = property("CameraNumber");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline double CVigilLiveFeed::CaptureFPS() const
{
    QVariant qax_result = property("CaptureFPS");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}

inline VigilSDK::_CVigilDVR* CVigilLiveFeed::DVR() const
{
    VigilSDK::_CVigilDVR* qax_pointer = 0;
    qRegisterMetaType("_CVigilDVR*", &qax_pointer);
    qRegisterMetaType("_CVigilDVR", qax_pointer);
    QVariant qax_result = property("DVR");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::_CVigilDVR**)qax_result.constData();
}

inline VigilSDK::EnumLiveSpeed CVigilLiveFeed::FeedSpeed() const
{
    QVariant qax_result = property("FeedSpeed");
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::EnumLiveSpeed*)qax_result.constData();
}
inline void CVigilLiveFeed::SetFeedSpeed(VigilSDK::EnumLiveSpeed value){ setProperty("FeedSpeed", QVariant(value)); }

inline int CVigilLiveFeed::HWnd() const
{
    QVariant qax_result = property("HWnd");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int CVigilLiveFeed::HWndStatus() const
{
    QVariant qax_result = property("HWndStatus");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CVigilLiveFeed::SetHWndStatus(int value){ setProperty("HWndStatus", QVariant(value)); }

inline double CVigilLiveFeed::KBPerFrame() const
{
    QVariant qax_result = property("KBPerFrame");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}

inline QByteArray CVigilLiveFeed::MotionBlocks() const
{
    QVariant qax_result = property("MotionBlocks");
    Q_ASSERT(qax_result.isValid());
    return *(QByteArray*)qax_result.constData();
}

inline bool CVigilLiveFeed::OSDVisible() const
{
    QVariant qax_result = property("OSDVisible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CVigilLiveFeed::SetOSDVisible(bool value){ setProperty("OSDVisible", QVariant(value)); }

inline int CVigilLiveFeed::PrevWindowProcPtr() const
{
    QVariant qax_result = property("PrevWindowProcPtr");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CVigilLiveFeed::SetPrevWindowProcPtr(int value){ setProperty("PrevWindowProcPtr", QVariant(value)); }

inline VigilSDK::EnumRecordMode CVigilLiveFeed::RecordMode() const
{
    QVariant qax_result = property("RecordMode");
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::EnumRecordMode*)qax_result.constData();
}

inline VigilSDK::EnumRecordStatus CVigilLiveFeed::RecordStatus() const
{
    QVariant qax_result = property("RecordStatus");
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::EnumRecordStatus*)qax_result.constData();
}

inline bool CVigilLiveFeed::ReducedResolution() const
{
    QVariant qax_result = property("ReducedResolution");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CVigilLiveFeed::SetReducedResolution(bool value){ setProperty("ReducedResolution", QVariant(value)); }

inline bool CVigilLiveFeed::Running() const
{
    QVariant qax_result = property("Running");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool CVigilLiveFeed::SignalLoss() const
{
    QVariant qax_result = property("SignalLoss");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool CVigilLiveFeed::SubStream() const
{
    QVariant qax_result = property("SubStream");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CVigilLiveFeed::SetSubStream(bool value){ setProperty("SubStream", QVariant(value)); }

inline bool CVigilLiveFeed::TimestampVisible() const
{
    QVariant qax_result = property("TimestampVisible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CVigilLiveFeed::SetTimestampVisible(bool value){ setProperty("TimestampVisible", QVariant(value)); }

inline bool CVigilLiveFeed::TransferMotionBlocks() const
{
    QVariant qax_result = property("TransferMotionBlocks");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CVigilLiveFeed::SetTransferMotionBlocks(bool value){ setProperty("TransferMotionBlocks", QVariant(value)); }

inline QString CVigilLiveFeed::UserCaption() const
{
    QVariant qax_result = property("UserCaption");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CVigilLiveFeed::SetUserCaption(const QString& value){ setProperty("UserCaption", QVariant(value)); }

inline bool CVigilLiveFeed::VAEnabled() const
{
    QVariant qax_result = property("VAEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CVigilLiveFeed::SetVAEnabled(bool value){ setProperty("VAEnabled", QVariant(value)); }

inline int CVigilLiveFeed::VideoInputHeight() const
{
    QVariant qax_result = property("VideoInputHeight");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int CVigilLiveFeed::VideoInputWidth() const
{
    QVariant qax_result = property("VideoInputWidth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline void CVigilLiveFeed::InitiateStopFeed()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void CVigilLiveFeed::OSDAddString(const QString& sLine)
{
    void *_a[] = {0, (void*)&sLine};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void CVigilLiveFeed::OSDSetConfig()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void CVigilLiveFeed::OSDSetConfig(int nDwellTime)
{
    void *_a[] = {0, (void*)&nDwellTime};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void CVigilLiveFeed::OSDSetConfig(int nDwellTime, int nLines)
{
    void *_a[] = {0, (void*)&nDwellTime, (void*)&nLines};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void CVigilLiveFeed::OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor)
{
    void *_a[] = {0, (void*)&nDwellTime, (void*)&nLines, (void*)&nBackColor};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void CVigilLiveFeed::OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize)
{
    void *_a[] = {0, (void*)&nDwellTime, (void*)&nLines, (void*)&nBackColor, (void*)&nFontSize};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline void CVigilLiveFeed::OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize, const QColor& nFontColor)
{
    void *_a[] = {0, (void*)&nDwellTime, (void*)&nLines, (void*)&nBackColor, (void*)&nFontSize, (void*)&nFontColor};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline void CVigilLiveFeed::OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize, const QColor& nFontColor, VigilSDK::EnumFontWeight nFontWeight)
{
    void *_a[] = {0, (void*)&nDwellTime, (void*)&nLines, (void*)&nBackColor, (void*)&nFontSize, (void*)&nFontColor, (void*)&nFontWeight};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void CVigilLiveFeed::PutZoom(bool bEnableZoom, int nLeft, int nTop, int nRight, int nBottom, VigilSDK::EnumZoomCoordType eZoomCoordType)
{
    void *_a[] = {0, (void*)&bEnableZoom, (void*)&nLeft, (void*)&nTop, (void*)&nRight, (void*)&nBottom, (void*)&eZoomCoordType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void CVigilLiveFeed::RefreshScreen()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void CVigilLiveFeed::ResumeThread()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline bool CVigilLiveFeed::SaveSnapshot(const QString& sFileName)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&sFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline bool CVigilLiveFeed::SaveSnapshot(const QString& sFileName, bool bAsJPEG)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&sFileName, (void*)&bAsJPEG};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline bool CVigilLiveFeed::SaveSnapshot(const QString& sFileName, bool bAsJPEG, int nJPEGQuality)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&sFileName, (void*)&bAsJPEG, (void*)&nJPEGQuality};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline void CVigilLiveFeed::StopFeed()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
}

inline void CVigilLiveFeed::SuspendThread()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
}

inline bool CVigilLiveFeed::View(int nCameraNumber, int HWnd)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&HWnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline bool CVigilLiveFeed::ViewRegister(int nTerminalNumber, int nRegisterNumber, int HWnd)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nTerminalNumber, (void*)&nRegisterNumber, (void*)&HWnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline int CVigilLiveFeed::WindowProc(int HWnd, int uMsg, int wParam, int lParam, bool& bConsumed)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&HWnd, (void*)&uMsg, (void*)&wParam, (void*)&lParam, (void*)&bConsumed};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}


inline bool _CVigilDVR::Administrator() const
{
    QVariant qax_result = property("Administrator");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int _CVigilDVR::CameraCount() const
{
    QVariant qax_result = property("CameraCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline VigilSDK::EnumComartBoard _CVigilDVR::CaptureCard() const
{
    QVariant qax_result = property("CaptureCard");
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::EnumComartBoard*)qax_result.constData();
}

inline bool _CVigilDVR::DayLightSavings() const
{
    QVariant qax_result = property("DayLightSavings");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _CVigilDVR::LoggedOn() const
{
    QVariant qax_result = property("LoggedOn");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString _CVigilDVR::RemoteHost() const
{
    QVariant qax_result = property("RemoteHost");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CVigilDVR::SetRemoteHost(const QString& value){ setProperty("RemoteHost", QVariant(value)); }

inline int _CVigilDVR::RemotePort() const
{
    QVariant qax_result = property("RemotePort");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CVigilDVR::SetRemotePort(int value){ setProperty("RemotePort", QVariant(value)); }

inline QString _CVigilDVR::ServerGUID() const
{
    QVariant qax_result = property("ServerGUID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool _CVigilDVR::ShowSocketError() const
{
    QVariant qax_result = property("ShowSocketError");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CVigilDVR::SetShowSocketError(bool value){ setProperty("ShowSocketError", QVariant(value)); }

inline bool _CVigilDVR::ShowSocketStatus() const
{
    QVariant qax_result = property("ShowSocketStatus");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CVigilDVR::SetShowSocketStatus(bool value){ setProperty("ShowSocketStatus", QVariant(value)); }

inline int _CVigilDVR::StandardTimeZone() const
{
    QVariant qax_result = property("StandardTimeZone");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline VigilSDK::_CVigilResult* _CVigilDVR::AddGroup(const QString& sGroupName)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&sGroupName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::AddUser(const QString& sUserName, const QString& sPassword)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&sUserName, (void*)&sPassword};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::AdjustLiveClientQuality(int nCameraNumber, VigilSDK::EnumCompressionQuality nQuality)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&nQuality};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::AdjustLiveClientResolution(int nCameraNumber, VigilSDK::EnumClientResolution nResolution)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&nResolution};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::AdjustRecordingToDefaultIPS(int nCameraNumber)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::AdjustRecordingToMaxIPS(int nCameraNumber)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::AssignGroupPermission(const QString& sGroupName, VigilSDK::EnumVigilPermission ePermID)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&sGroupName, (void*)&ePermID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::AssignUserGroup(const QString& sUserName, const QString& sGroupName)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&sUserName, (void*)&sGroupName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::CheckServer()
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::CloseChannelFile(int nCameraNumber)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline VigilSDK::_CVigilAudioTalk* _CVigilDVR::CreateAudioTalkObject()
{
    VigilSDK::_CVigilAudioTalk* qax_result = 0;
    qRegisterMetaType("_CVigilAudioTalk*", &qax_result);
    qRegisterMetaType("_CVigilAudioTalk", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline VigilSDK::_CVigilCameraControl* _CVigilDVR::CreateCameraControlObject()
{
    VigilSDK::_CVigilCameraControl* qax_result = 0;
    qRegisterMetaType("_CVigilCameraControl*", &qax_result);
    qRegisterMetaType("_CVigilCameraControl", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline VigilSDK::_CVigilLiveAudioFeed* _CVigilDVR::CreateLiveAudioFeedObject()
{
    VigilSDK::_CVigilLiveAudioFeed* qax_result = 0;
    qRegisterMetaType("_CVigilLiveAudioFeed*", &qax_result);
    qRegisterMetaType("_CVigilLiveAudioFeed", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline VigilSDK::_CVigilLiveFeed* _CVigilDVR::CreateLiveFeedObject()
{
    VigilSDK::_CVigilLiveFeed* qax_result = 0;
    qRegisterMetaType("_CVigilLiveFeed*", &qax_result);
    qRegisterMetaType("_CVigilLiveFeed", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline VigilSDK::_CVigilPlayback* _CVigilDVR::CreatePlaybackObject()
{
    VigilSDK::_CVigilPlayback* qax_result = 0;
    qRegisterMetaType("_CVigilPlayback*", &qax_result);
    qRegisterMetaType("_CVigilPlayback", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline VigilSDK::_CVigilRemotePlayback* _CVigilDVR::CreateRemotePlaybackObject()
{
    VigilSDK::_CVigilRemotePlayback* qax_result = 0;
    qRegisterMetaType("_CVigilRemotePlayback*", &qax_result);
    qRegisterMetaType("_CVigilRemotePlayback", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::ForceStartAudio(int nChannel)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nChannel};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::ForceStartCamera(int nCameraNumber)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::ForceStopAudio(int nChannel)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nChannel};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::ForceStopCamera(int nCameraNumber)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::GetAudioInfo()
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::GetCameraFromRegister(int nTerm, int nRegNum)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nTerm, (void*)&nRegNum};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::GetCameraInfo()
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::GetCameraNames()
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::GetDIOStatus()
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::GetGroupPermissions(QString& sGroupName)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&sGroupName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::GetGroupUsers(QString& sGroupName)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&sGroupName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::GetGroups()
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::GetPOSMappings()
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::GetPOSPriorityCameras()
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::GetUsers()
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::GetVASettings(int nCamera)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCamera};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline bool _CVigilDVR::HasPermission(VigilSDK::EnumVigilPermission nPermID)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nPermID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline bool _CVigilDVR::HasPermissionToAudioChannel(int nAudioChannel)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nAudioChannel};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline bool _CVigilDVR::HasPermissionToCamera(int nCameraNumber)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::IsSpecialModuleRegistered(int nModule)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nModule};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::Login(const QString& sUserName, const QString& sPassword)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&sUserName, (void*)&sPassword};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::Login(const QString& sUserName, const QString& sPassword, bool& bHashed)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&sUserName, (void*)&sPassword, (void*)&bHashed};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}

inline void _CVigilDVR::Logout()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
}

inline VigilSDK::_CVigilResult* _CVigilDVR::OSDAddString(int nCameraNumber, const QString& sLine)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&sLine};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::OSDClear(int nCameraNumber)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::OSDClear(int nCameraNumber, bool bClearCaption)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&bClearCaption};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::OSDGetVisible(int nCameraNumber)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::OSDSetConfig()
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::OSDSetConfig(int nDwellTime)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nDwellTime};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::OSDSetConfig(int nDwellTime, int nLines)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nDwellTime, (void*)&nLines};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nDwellTime, (void*)&nLines, (void*)&nBackColor};
    qt_metacall(QMetaObject::InvokeMetaMethod, 53, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nDwellTime, (void*)&nLines, (void*)&nBackColor, (void*)&nFontSize};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize, const QColor& nFontColor)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nDwellTime, (void*)&nLines, (void*)&nBackColor, (void*)&nFontSize, (void*)&nFontColor};
    qt_metacall(QMetaObject::InvokeMetaMethod, 55, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize, const QColor& nFontColor, VigilSDK::EnumFontWeight nFontWeight)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nDwellTime, (void*)&nLines, (void*)&nBackColor, (void*)&nFontSize, (void*)&nFontColor, (void*)&nFontWeight};
    qt_metacall(QMetaObject::InvokeMetaMethod, 56, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::OSDSetFixedCaption(int nCameraNumber)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 57, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::OSDSetFixedCaption(int nCameraNumber, const QString& sCaption)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&sCaption};
    qt_metacall(QMetaObject::InvokeMetaMethod, 58, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::OSDSetOffsets(int nCameraNumber, int nXOffset, int nYOffset)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&nXOffset, (void*)&nYOffset};
    qt_metacall(QMetaObject::InvokeMetaMethod, 59, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::OSDSetVisible(int nCameraNumber, bool bEnable)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&bEnable};
    qt_metacall(QMetaObject::InvokeMetaMethod, 60, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::RemoveGroup(const QString& sGroupName)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&sGroupName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 61, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::RemoveGroupPermission(const QString& sGroupName, VigilSDK::EnumVigilPermission ePermID)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&sGroupName, (void*)&ePermID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 62, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::RemoveUser(const QString& sUserName)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&sUserName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 63, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::SearchFootage(const QDateTime& dtFrom, const QString& dtTo)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&dtFrom, (void*)&dtTo};
    qt_metacall(QMetaObject::InvokeMetaMethod, 64, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::SearchFootage(const QDateTime& dtFrom, const QString& dtTo, VigilSDK::EnumRecordMode nMode)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&dtFrom, (void*)&dtTo, (void*)&nMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 65, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::SelectLayout(VigilSDK::EnumLayout nLayout)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nLayout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 66, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::SelectPage(int nPageNumber)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nPageNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 67, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::SetCameraInfo(_CVigilCameraInfo** info)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&info};
    qt_metacall(QMetaObject::InvokeMetaMethod, 68, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::SetDOStatus(int nDigitalOutputNumber, bool bEnabled)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nDigitalOutputNumber, (void*)&bEnabled};
    qt_metacall(QMetaObject::InvokeMetaMethod, 69, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::StartCamera(int nCameraNumber)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 74, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::StopCamera(int nCameraNumber)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 75, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::SwitchAnalogMux(int nMonitor, VigilSDK::EnumLayout nLayout)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nMonitor, (void*)&nLayout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 76, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::SwitchAnalogMux(int nMonitor, VigilSDK::EnumLayout nLayout, int nPage)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nMonitor, (void*)&nLayout, (void*)&nPage};
    qt_metacall(QMetaObject::InvokeMetaMethod, 77, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::SwitchAnalogOutput(int nCameraNumber)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 78, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::SwitchAnalogOutput(int nCameraNumber, int nMonitorNumber)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&nMonitorNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 79, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilDVR::SystemReboot()
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 80, _a);
    return qax_result;
}


inline bool CVigilDVR::Administrator() const
{
    QVariant qax_result = property("Administrator");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int CVigilDVR::CameraCount() const
{
    QVariant qax_result = property("CameraCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline VigilSDK::EnumComartBoard CVigilDVR::CaptureCard() const
{
    QVariant qax_result = property("CaptureCard");
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::EnumComartBoard*)qax_result.constData();
}

inline bool CVigilDVR::DayLightSavings() const
{
    QVariant qax_result = property("DayLightSavings");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool CVigilDVR::LoggedOn() const
{
    QVariant qax_result = property("LoggedOn");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString CVigilDVR::RemoteHost() const
{
    QVariant qax_result = property("RemoteHost");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CVigilDVR::SetRemoteHost(const QString& value){ setProperty("RemoteHost", QVariant(value)); }

inline int CVigilDVR::RemotePort() const
{
    QVariant qax_result = property("RemotePort");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CVigilDVR::SetRemotePort(int value){ setProperty("RemotePort", QVariant(value)); }

inline QString CVigilDVR::ServerGUID() const
{
    QVariant qax_result = property("ServerGUID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool CVigilDVR::ShowSocketError() const
{
    QVariant qax_result = property("ShowSocketError");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CVigilDVR::SetShowSocketError(bool value){ setProperty("ShowSocketError", QVariant(value)); }

inline bool CVigilDVR::ShowSocketStatus() const
{
    QVariant qax_result = property("ShowSocketStatus");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CVigilDVR::SetShowSocketStatus(bool value){ setProperty("ShowSocketStatus", QVariant(value)); }

inline int CVigilDVR::StandardTimeZone() const
{
    QVariant qax_result = property("StandardTimeZone");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline VigilSDK::_CVigilResult* CVigilDVR::AddGroup(const QString& sGroupName)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&sGroupName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::AddUser(const QString& sUserName, const QString& sPassword)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&sUserName, (void*)&sPassword};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::AdjustLiveClientQuality(int nCameraNumber, VigilSDK::EnumCompressionQuality nQuality)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&nQuality};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::AdjustLiveClientResolution(int nCameraNumber, VigilSDK::EnumClientResolution nResolution)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&nResolution};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::AdjustRecordingToDefaultIPS(int nCameraNumber)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::AdjustRecordingToMaxIPS(int nCameraNumber)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::AssignGroupPermission(const QString& sGroupName, VigilSDK::EnumVigilPermission ePermID)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&sGroupName, (void*)&ePermID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::AssignUserGroup(const QString& sUserName, const QString& sGroupName)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&sUserName, (void*)&sGroupName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::CheckServer()
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::CloseChannelFile(int nCameraNumber)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline VigilSDK::_CVigilAudioTalk* CVigilDVR::CreateAudioTalkObject()
{
    VigilSDK::_CVigilAudioTalk* qax_result = 0;
    qRegisterMetaType("_CVigilAudioTalk*", &qax_result);
    qRegisterMetaType("_CVigilAudioTalk", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline VigilSDK::_CVigilCameraControl* CVigilDVR::CreateCameraControlObject()
{
    VigilSDK::_CVigilCameraControl* qax_result = 0;
    qRegisterMetaType("_CVigilCameraControl*", &qax_result);
    qRegisterMetaType("_CVigilCameraControl", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline VigilSDK::_CVigilLiveAudioFeed* CVigilDVR::CreateLiveAudioFeedObject()
{
    VigilSDK::_CVigilLiveAudioFeed* qax_result = 0;
    qRegisterMetaType("_CVigilLiveAudioFeed*", &qax_result);
    qRegisterMetaType("_CVigilLiveAudioFeed", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline VigilSDK::_CVigilLiveFeed* CVigilDVR::CreateLiveFeedObject()
{
    VigilSDK::_CVigilLiveFeed* qax_result = 0;
    qRegisterMetaType("_CVigilLiveFeed*", &qax_result);
    qRegisterMetaType("_CVigilLiveFeed", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline VigilSDK::_CVigilPlayback* CVigilDVR::CreatePlaybackObject()
{
    VigilSDK::_CVigilPlayback* qax_result = 0;
    qRegisterMetaType("_CVigilPlayback*", &qax_result);
    qRegisterMetaType("_CVigilPlayback", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline VigilSDK::_CVigilRemotePlayback* CVigilDVR::CreateRemotePlaybackObject()
{
    VigilSDK::_CVigilRemotePlayback* qax_result = 0;
    qRegisterMetaType("_CVigilRemotePlayback*", &qax_result);
    qRegisterMetaType("_CVigilRemotePlayback", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::ForceStartAudio(int nChannel)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nChannel};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::ForceStartCamera(int nCameraNumber)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::ForceStopAudio(int nChannel)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nChannel};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::ForceStopCamera(int nCameraNumber)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::GetAudioInfo()
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::GetCameraFromRegister(int nTerm, int nRegNum)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nTerm, (void*)&nRegNum};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::GetCameraInfo()
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::GetCameraNames()
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::GetDIOStatus()
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::GetGroupPermissions(QString& sGroupName)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&sGroupName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::GetGroupUsers(QString& sGroupName)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&sGroupName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::GetGroups()
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::GetPOSMappings()
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::GetPOSPriorityCameras()
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::GetUsers()
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::GetVASettings(int nCamera)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCamera};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline bool CVigilDVR::HasPermission(VigilSDK::EnumVigilPermission nPermID)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nPermID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline bool CVigilDVR::HasPermissionToAudioChannel(int nAudioChannel)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nAudioChannel};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline bool CVigilDVR::HasPermissionToCamera(int nCameraNumber)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::IsSpecialModuleRegistered(int nModule)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nModule};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::Login(const QString& sUserName, const QString& sPassword)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&sUserName, (void*)&sPassword};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::Login(const QString& sUserName, const QString& sPassword, bool& bHashed)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&sUserName, (void*)&sPassword, (void*)&bHashed};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}

inline void CVigilDVR::Logout()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
}

inline VigilSDK::_CVigilResult* CVigilDVR::OSDAddString(int nCameraNumber, const QString& sLine)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&sLine};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::OSDClear(int nCameraNumber)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::OSDClear(int nCameraNumber, bool bClearCaption)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&bClearCaption};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::OSDGetVisible(int nCameraNumber)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::OSDSetConfig()
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::OSDSetConfig(int nDwellTime)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nDwellTime};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::OSDSetConfig(int nDwellTime, int nLines)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nDwellTime, (void*)&nLines};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nDwellTime, (void*)&nLines, (void*)&nBackColor};
    qt_metacall(QMetaObject::InvokeMetaMethod, 53, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nDwellTime, (void*)&nLines, (void*)&nBackColor, (void*)&nFontSize};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize, const QColor& nFontColor)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nDwellTime, (void*)&nLines, (void*)&nBackColor, (void*)&nFontSize, (void*)&nFontColor};
    qt_metacall(QMetaObject::InvokeMetaMethod, 55, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize, const QColor& nFontColor, VigilSDK::EnumFontWeight nFontWeight)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nDwellTime, (void*)&nLines, (void*)&nBackColor, (void*)&nFontSize, (void*)&nFontColor, (void*)&nFontWeight};
    qt_metacall(QMetaObject::InvokeMetaMethod, 56, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::OSDSetFixedCaption(int nCameraNumber)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 57, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::OSDSetFixedCaption(int nCameraNumber, const QString& sCaption)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&sCaption};
    qt_metacall(QMetaObject::InvokeMetaMethod, 58, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::OSDSetOffsets(int nCameraNumber, int nXOffset, int nYOffset)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&nXOffset, (void*)&nYOffset};
    qt_metacall(QMetaObject::InvokeMetaMethod, 59, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::OSDSetVisible(int nCameraNumber, bool bEnable)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&bEnable};
    qt_metacall(QMetaObject::InvokeMetaMethod, 60, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::RemoveGroup(const QString& sGroupName)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&sGroupName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 61, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::RemoveGroupPermission(const QString& sGroupName, VigilSDK::EnumVigilPermission ePermID)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&sGroupName, (void*)&ePermID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 62, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::RemoveUser(const QString& sUserName)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&sUserName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 63, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::SearchFootage(const QDateTime& dtFrom, const QString& dtTo)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&dtFrom, (void*)&dtTo};
    qt_metacall(QMetaObject::InvokeMetaMethod, 64, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::SearchFootage(const QDateTime& dtFrom, const QString& dtTo, VigilSDK::EnumRecordMode nMode)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&dtFrom, (void*)&dtTo, (void*)&nMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 65, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::SelectLayout(VigilSDK::EnumLayout nLayout)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nLayout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 66, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::SelectPage(int nPageNumber)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nPageNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 67, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::SetCameraInfo(_CVigilCameraInfo** info)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&info};
    qt_metacall(QMetaObject::InvokeMetaMethod, 68, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::SetDOStatus(int nDigitalOutputNumber, bool bEnabled)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nDigitalOutputNumber, (void*)&bEnabled};
    qt_metacall(QMetaObject::InvokeMetaMethod, 69, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::StartCamera(int nCameraNumber)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 74, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::StopCamera(int nCameraNumber)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 75, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::SwitchAnalogMux(int nMonitor, VigilSDK::EnumLayout nLayout)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nMonitor, (void*)&nLayout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 76, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::SwitchAnalogMux(int nMonitor, VigilSDK::EnumLayout nLayout, int nPage)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nMonitor, (void*)&nLayout, (void*)&nPage};
    qt_metacall(QMetaObject::InvokeMetaMethod, 77, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::SwitchAnalogOutput(int nCameraNumber)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 78, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::SwitchAnalogOutput(int nCameraNumber, int nMonitorNumber)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&nMonitorNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 79, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilDVR::SystemReboot()
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 80, _a);
    return qax_result;
}


inline bool _CVigilResult::AckResult() const
{
    QVariant qax_result = property("AckResult");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _CVigilResult::AdjustableClientFeed() const
{
    QVariant qax_result = property("AdjustableClientFeed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _CVigilResult::Administrator() const
{
    QVariant qax_result = property("Administrator");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int _CVigilResult::AudioChannelCount() const
{
    QVariant qax_result = property("AudioChannelCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int _CVigilResult::CPU() const
{
    QVariant qax_result = property("CPU");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int _CVigilResult::CameraCount() const
{
    QVariant qax_result = property("CameraCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _CVigilResult::Command() const
{
    QVariant qax_result = property("Command");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline VigilSDK::EnumComartBoard _CVigilResult::DVRBoard() const
{
    QVariant qax_result = property("DVRBoard");
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::EnumComartBoard*)qax_result.constData();
}

inline QString _CVigilResult::HResult() const
{
    QVariant qax_result = property("HResult");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool _CVigilResult::LimitSearchToOneDay() const
{
    QVariant qax_result = property("LimitSearchToOneDay");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _CVigilResult::LoggedOn() const
{
    QVariant qax_result = property("LoggedOn");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int _CVigilResult::MaxUsers() const
{
    QVariant qax_result = property("MaxUsers");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _CVigilResult::MemTotal() const
{
    QVariant qax_result = property("MemTotal");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _CVigilResult::MemUsage() const
{
    QVariant qax_result = property("MemUsage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _CVigilResult::MinClientVersionMajor() const
{
    QVariant qax_result = property("MinClientVersionMajor");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _CVigilResult::MinClientVersionMinor() const
{
    QVariant qax_result = property("MinClientVersionMinor");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _CVigilResult::MinClientVersionRevision() const
{
    QVariant qax_result = property("MinClientVersionRevision");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int _CVigilResult::NumClientConnections() const
{
    QVariant qax_result = property("NumClientConnections");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool _CVigilResult::POSRunning() const
{
    QVariant qax_result = property("POSRunning");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _CVigilResult::ReducedResolutionSupported() const
{
    QVariant qax_result = property("ReducedResolutionSupported");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _CVigilResult::ServerRunning() const
{
    QVariant qax_result = property("ServerRunning");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString _CVigilResult::ServerVersionMajor() const
{
    QVariant qax_result = property("ServerVersionMajor");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _CVigilResult::ServerVersionMinor() const
{
    QVariant qax_result = property("ServerVersionMinor");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _CVigilResult::ServerVersionRevision() const
{
    QVariant qax_result = property("ServerVersionRevision");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _CVigilResult::SiteName() const
{
    QVariant qax_result = property("SiteName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int _CVigilResult::TerminalCount() const
{
    QVariant qax_result = property("TerminalCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QDateTime _CVigilResult::UpSince() const
{
    QVariant qax_result = property("UpSince");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QString _CVigilResult::XML() const
{
    QVariant qax_result = property("XML");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int _CVigilResult::GetAudioChannelCaptureVolume(int nChan)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nChan};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int _CVigilResult::GetAudioChannelCodec(int nChan)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nChan};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline QString _CVigilResult::GetAudioChannelDescription(int nChan)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nChan};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int _CVigilResult::GetAudioChannelDetectVolume(int nChan)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nChan};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline QString _CVigilResult::GetAudioChannelName(int nChan)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nChan};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int _CVigilResult::GetAudioChannelSampleRates(int nChan)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nChan};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline EnumAudioSource _CVigilResult::GetAudioChannelSource(int nChan)
{
    EnumAudioSource qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nChan};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline bool _CVigilResult::GetCameraActive(int nCameraNumber)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline bool _CVigilResult::GetCameraCapturing(int nCameraNumber)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline EnumCompressionQuality _CVigilResult::GetCameraCompression(int nCameraNumber)
{
    EnumCompressionQuality qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline EnumCameraType _CVigilResult::GetCameraControlType(int nCameraNumber)
{
    EnumCameraType qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline bool _CVigilResult::GetCameraCovert(int nCameraNumber)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int _CVigilResult::GetCameraFromRegister()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline EnumRecordMode _CVigilResult::GetCameraMode(int nCameraNumber)
{
    EnumRecordMode qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline QString _CVigilResult::GetCameraName(int nCameraNumber)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline double _CVigilResult::GetCameraRecordSpeed(int nCameraNumber)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline bool _CVigilResult::GetCameraRecording(int nCameraNumber)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline EnumRecordResolution _CVigilResult::GetCameraResolution(int nCameraNumber)
{
    EnumRecordResolution qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline bool _CVigilResult::GetCameraSupportSubStream(int nCameraNumber)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline int _CVigilResult::GetDICount()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline int _CVigilResult::GetDIStatus(int nInputNumber)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nInputNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline int _CVigilResult::GetDOCount()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}

inline int _CVigilResult::GetDOStatus(int nOutputNumber)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nOutputNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline int _CVigilResult::GetGroupCount()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
    return qax_result;
}

inline QString _CVigilResult::GetGroupName(QVariant& nGroupIndex)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nGroupIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
    return qax_result;
}

inline int _CVigilResult::GetGroupPermission(QVariant& nGroupPermissionIndex)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nGroupPermissionIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
    return qax_result;
}

inline int _CVigilResult::GetGroupPermissionsCount()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
    return qax_result;
}

inline QString _CVigilResult::GetGroupUser(QVariant& nUserGroupIndex)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nUserGroupIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}

inline int _CVigilResult::GetGroupUserCount()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline QVariantList _CVigilResult::GetPOSCameras(int nTerminalNumber)
{
    QVariantList qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nTerminalNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline QStringList _CVigilResult::GetPOSMap(int nTerminalNumber)
{
    QStringList qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nTerminalNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline int _CVigilResult::GetPOSPriorityCameraNumber(int nTerminalNumber)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nTerminalNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline QVariantList _CVigilResult::GetPOSRegisters(int nTerminalNumber)
{
    QVariantList qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nTerminalNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline QString _CVigilResult::GetRecordControlTime()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline QString _CVigilResult::GetSearchEndTime(int nCameraNumber)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline QString _CVigilResult::GetSearchStartTime(int nCameraNumber)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline int _CVigilResult::GetUserCount()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}

inline QString _CVigilResult::GetUserName(QVariant& nUserIndex)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nUserIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}

inline QString _CVigilResult::GetUserPassword(QVariant& nUserIndex)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nUserIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
    return qax_result;
}

inline bool _CVigilResult::GetVARuleEnabled(int nRule)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nRule};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
    return qax_result;
}

inline EnumVARuleType _CVigilResult::GetVARuleType(int nRule)
{
    EnumVARuleType qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nRule};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}

inline QString _CVigilResult::GetVARulename(int nRule)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nRule};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
    return qax_result;
}

inline bool _CVigilResult::IsUserInGroup(QString& sUserName)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&sUserName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
    return qax_result;
}

inline bool _CVigilResult::OSDGetVisible()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
    return qax_result;
}


inline bool CVigilResult::AckResult() const
{
    QVariant qax_result = property("AckResult");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool CVigilResult::AdjustableClientFeed() const
{
    QVariant qax_result = property("AdjustableClientFeed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool CVigilResult::Administrator() const
{
    QVariant qax_result = property("Administrator");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int CVigilResult::AudioChannelCount() const
{
    QVariant qax_result = property("AudioChannelCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int CVigilResult::CPU() const
{
    QVariant qax_result = property("CPU");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int CVigilResult::CameraCount() const
{
    QVariant qax_result = property("CameraCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString CVigilResult::Command() const
{
    QVariant qax_result = property("Command");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline VigilSDK::EnumComartBoard CVigilResult::DVRBoard() const
{
    QVariant qax_result = property("DVRBoard");
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::EnumComartBoard*)qax_result.constData();
}

inline QString CVigilResult::HResult() const
{
    QVariant qax_result = property("HResult");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool CVigilResult::LimitSearchToOneDay() const
{
    QVariant qax_result = property("LimitSearchToOneDay");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool CVigilResult::LoggedOn() const
{
    QVariant qax_result = property("LoggedOn");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline int CVigilResult::MaxUsers() const
{
    QVariant qax_result = property("MaxUsers");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString CVigilResult::MemTotal() const
{
    QVariant qax_result = property("MemTotal");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString CVigilResult::MemUsage() const
{
    QVariant qax_result = property("MemUsage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString CVigilResult::MinClientVersionMajor() const
{
    QVariant qax_result = property("MinClientVersionMajor");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString CVigilResult::MinClientVersionMinor() const
{
    QVariant qax_result = property("MinClientVersionMinor");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString CVigilResult::MinClientVersionRevision() const
{
    QVariant qax_result = property("MinClientVersionRevision");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int CVigilResult::NumClientConnections() const
{
    QVariant qax_result = property("NumClientConnections");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool CVigilResult::POSRunning() const
{
    QVariant qax_result = property("POSRunning");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool CVigilResult::ReducedResolutionSupported() const
{
    QVariant qax_result = property("ReducedResolutionSupported");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool CVigilResult::ServerRunning() const
{
    QVariant qax_result = property("ServerRunning");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString CVigilResult::ServerVersionMajor() const
{
    QVariant qax_result = property("ServerVersionMajor");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString CVigilResult::ServerVersionMinor() const
{
    QVariant qax_result = property("ServerVersionMinor");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString CVigilResult::ServerVersionRevision() const
{
    QVariant qax_result = property("ServerVersionRevision");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString CVigilResult::SiteName() const
{
    QVariant qax_result = property("SiteName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int CVigilResult::TerminalCount() const
{
    QVariant qax_result = property("TerminalCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QDateTime CVigilResult::UpSince() const
{
    QVariant qax_result = property("UpSince");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QString CVigilResult::XML() const
{
    QVariant qax_result = property("XML");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int CVigilResult::GetAudioChannelCaptureVolume(int nChan)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nChan};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline int CVigilResult::GetAudioChannelCodec(int nChan)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nChan};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline QString CVigilResult::GetAudioChannelDescription(int nChan)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nChan};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int CVigilResult::GetAudioChannelDetectVolume(int nChan)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nChan};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline QString CVigilResult::GetAudioChannelName(int nChan)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nChan};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int CVigilResult::GetAudioChannelSampleRates(int nChan)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nChan};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline EnumAudioSource CVigilResult::GetAudioChannelSource(int nChan)
{
    EnumAudioSource qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nChan};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline bool CVigilResult::GetCameraActive(int nCameraNumber)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline bool CVigilResult::GetCameraCapturing(int nCameraNumber)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline EnumCompressionQuality CVigilResult::GetCameraCompression(int nCameraNumber)
{
    EnumCompressionQuality qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline EnumCameraType CVigilResult::GetCameraControlType(int nCameraNumber)
{
    EnumCameraType qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline bool CVigilResult::GetCameraCovert(int nCameraNumber)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int CVigilResult::GetCameraFromRegister()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline EnumRecordMode CVigilResult::GetCameraMode(int nCameraNumber)
{
    EnumRecordMode qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline QString CVigilResult::GetCameraName(int nCameraNumber)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline double CVigilResult::GetCameraRecordSpeed(int nCameraNumber)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline bool CVigilResult::GetCameraRecording(int nCameraNumber)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline EnumRecordResolution CVigilResult::GetCameraResolution(int nCameraNumber)
{
    EnumRecordResolution qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline bool CVigilResult::GetCameraSupportSubStream(int nCameraNumber)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline int CVigilResult::GetDICount()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline int CVigilResult::GetDIStatus(int nInputNumber)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nInputNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline int CVigilResult::GetDOCount()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}

inline int CVigilResult::GetDOStatus(int nOutputNumber)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nOutputNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline int CVigilResult::GetGroupCount()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
    return qax_result;
}

inline QString CVigilResult::GetGroupName(QVariant& nGroupIndex)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nGroupIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
    return qax_result;
}

inline int CVigilResult::GetGroupPermission(QVariant& nGroupPermissionIndex)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nGroupPermissionIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
    return qax_result;
}

inline int CVigilResult::GetGroupPermissionsCount()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
    return qax_result;
}

inline QString CVigilResult::GetGroupUser(QVariant& nUserGroupIndex)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nUserGroupIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}

inline int CVigilResult::GetGroupUserCount()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline QVariantList CVigilResult::GetPOSCameras(int nTerminalNumber)
{
    QVariantList qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nTerminalNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline QStringList CVigilResult::GetPOSMap(int nTerminalNumber)
{
    QStringList qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nTerminalNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline int CVigilResult::GetPOSPriorityCameraNumber(int nTerminalNumber)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nTerminalNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline QVariantList CVigilResult::GetPOSRegisters(int nTerminalNumber)
{
    QVariantList qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nTerminalNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline QString CVigilResult::GetRecordControlTime()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline QString CVigilResult::GetSearchEndTime(int nCameraNumber)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline QString CVigilResult::GetSearchStartTime(int nCameraNumber)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline int CVigilResult::GetUserCount()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}

inline QString CVigilResult::GetUserName(QVariant& nUserIndex)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nUserIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}

inline QString CVigilResult::GetUserPassword(QVariant& nUserIndex)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nUserIndex};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
    return qax_result;
}

inline bool CVigilResult::GetVARuleEnabled(int nRule)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nRule};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
    return qax_result;
}

inline EnumVARuleType CVigilResult::GetVARuleType(int nRule)
{
    EnumVARuleType qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nRule};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}

inline QString CVigilResult::GetVARulename(int nRule)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nRule};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
    return qax_result;
}

inline bool CVigilResult::IsUserInGroup(QString& sUserName)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&sUserName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
    return qax_result;
}

inline bool CVigilResult::OSDGetVisible()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
    return qax_result;
}


inline void _CVigilCameraInfo::AddInfo(int nCameraNumber)
{
    void *_a[] = {0, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void _CVigilCameraInfo::AddInfo(int nCameraNumber, VigilSDK::EnumCompressionQuality nCompression)
{
    void *_a[] = {0, (void*)&nCameraNumber, (void*)&nCompression};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void _CVigilCameraInfo::AddInfo(int nCameraNumber, VigilSDK::EnumCompressionQuality nCompression, VigilSDK::EnumRecordMode nMode)
{
    void *_a[] = {0, (void*)&nCameraNumber, (void*)&nCompression, (void*)&nMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void _CVigilCameraInfo::RemoveInfo(int nCameraNumber)
{
    void *_a[] = {0, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}


inline void CVigilCameraInfo::AddInfo(int nCameraNumber)
{
    void *_a[] = {0, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void CVigilCameraInfo::AddInfo(int nCameraNumber, VigilSDK::EnumCompressionQuality nCompression)
{
    void *_a[] = {0, (void*)&nCameraNumber, (void*)&nCompression};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void CVigilCameraInfo::AddInfo(int nCameraNumber, VigilSDK::EnumCompressionQuality nCompression, VigilSDK::EnumRecordMode nMode)
{
    void *_a[] = {0, (void*)&nCameraNumber, (void*)&nCompression, (void*)&nMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void CVigilCameraInfo::RemoveInfo(int nCameraNumber)
{
    void *_a[] = {0, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}


inline bool _CVigilPlayback::AudioBased() const
{
    QVariant qax_result = property("AudioBased");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CVigilPlayback::SetAudioBased(bool value){ setProperty("AudioBased", QVariant(value)); }

inline int _CVigilPlayback::AudioChannel() const
{
    QVariant qax_result = property("AudioChannel");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CVigilPlayback::SetAudioChannel(int value){ setProperty("AudioChannel", QVariant(value)); }

inline bool _CVigilPlayback::AutoLoop() const
{
    QVariant qax_result = property("AutoLoop");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CVigilPlayback::SetAutoLoop(bool value){ setProperty("AutoLoop", QVariant(value)); }

inline bool _CVigilPlayback::CacheAutoSense() const
{
    QVariant qax_result = property("CacheAutoSense");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CVigilPlayback::SetCacheAutoSense(bool value){ setProperty("CacheAutoSense", QVariant(value)); }

inline int _CVigilPlayback::CacheConnections() const
{
    QVariant qax_result = property("CacheConnections");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CVigilPlayback::SetCacheConnections(int value){ setProperty("CacheConnections", QVariant(value)); }

inline int _CVigilPlayback::CacheSize() const
{
    QVariant qax_result = property("CacheSize");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CVigilPlayback::SetCacheSize(int value){ setProperty("CacheSize", QVariant(value)); }

inline int _CVigilPlayback::CachedFrames() const
{
    QVariant qax_result = property("CachedFrames");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _CVigilPlayback::CameraName() const
{
    QVariant qax_result = property("CameraName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int _CVigilPlayback::CameraNumber() const
{
    QVariant qax_result = property("CameraNumber");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int _CVigilPlayback::CurrentDisplayedFrame() const
{
    QVariant qax_result = property("CurrentDisplayedFrame");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int _CVigilPlayback::CurrentExportFrame() const
{
    QVariant qax_result = property("CurrentExportFrame");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int _CVigilPlayback::CurrentFrame() const
{
    QVariant qax_result = property("CurrentFrame");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CVigilPlayback::SetCurrentFrame(int value){ setProperty("CurrentFrame", QVariant(value)); }

inline VigilSDK::_CVigilDVR* _CVigilPlayback::DVR() const
{
    VigilSDK::_CVigilDVR* qax_pointer = 0;
    qRegisterMetaType("_CVigilDVR*", &qax_pointer);
    qRegisterMetaType("_CVigilDVR", qax_pointer);
    QVariant qax_result = property("DVR");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::_CVigilDVR**)qax_result.constData();
}

inline QString _CVigilPlayback::FrameDateStamp() const
{
    QVariant qax_result = property("FrameDateStamp");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline VigilSDK::EnumRecordMode _CVigilPlayback::FrameRecordMode() const
{
    QVariant qax_result = property("FrameRecordMode");
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::EnumRecordMode*)qax_result.constData();
}

inline int _CVigilPlayback::HWndStatus() const
{
    QVariant qax_result = property("HWndStatus");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CVigilPlayback::SetHWndStatus(int value){ setProperty("HWndStatus", QVariant(value)); }

inline QByteArray _CVigilPlayback::MotionBlocks() const
{
    QVariant qax_result = property("MotionBlocks");
    Q_ASSERT(qax_result.isValid());
    return *(QByteArray*)qax_result.constData();
}

inline bool _CVigilPlayback::OSDVisible() const
{
    QVariant qax_result = property("OSDVisible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CVigilPlayback::SetOSDVisible(bool value){ setProperty("OSDVisible", QVariant(value)); }

inline bool _CVigilPlayback::Paused() const
{
    QVariant qax_result = property("Paused");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CVigilPlayback::SetPaused(bool value){ setProperty("Paused", QVariant(value)); }

inline VigilSDK::EnumPlayMode _CVigilPlayback::PlayMode() const
{
    QVariant qax_result = property("PlayMode");
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::EnumPlayMode*)qax_result.constData();
}

inline int _CVigilPlayback::PlaySpeed() const
{
    QVariant qax_result = property("PlaySpeed");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CVigilPlayback::SetPlaySpeed(int value){ setProperty("PlaySpeed", QVariant(value)); }

inline bool _CVigilPlayback::ReducedResolution() const
{
    QVariant qax_result = property("ReducedResolution");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CVigilPlayback::SetReducedResolution(bool value){ setProperty("ReducedResolution", QVariant(value)); }

inline bool _CVigilPlayback::SynchronizedPlayback() const
{
    QVariant qax_result = property("SynchronizedPlayback");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CVigilPlayback::SetSynchronizedPlayback(bool value){ setProperty("SynchronizedPlayback", QVariant(value)); }

inline int _CVigilPlayback::TimestampCueMessage() const
{
    QVariant qax_result = property("TimestampCueMessage");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CVigilPlayback::SetTimestampCueMessage(int value){ setProperty("TimestampCueMessage", QVariant(value)); }

inline int _CVigilPlayback::TotalExportFrames() const
{
    QVariant qax_result = property("TotalExportFrames");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int _CVigilPlayback::TotalFrames() const
{
    QVariant qax_result = property("TotalFrames");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool _CVigilPlayback::VAEnabled() const
{
    QVariant qax_result = property("VAEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CVigilPlayback::SetVAEnabled(bool value){ setProperty("VAEnabled", QVariant(value)); }

inline int _CVigilPlayback::VideoInputHeight() const
{
    QVariant qax_result = property("VideoInputHeight");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int _CVigilPlayback::VideoInputWidth() const
{
    QVariant qax_result = property("VideoInputWidth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline void _CVigilPlayback::CancelExportVideo()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline bool _CVigilPlayback::ChooseAVICodec()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline void _CVigilPlayback::CueToTimestamp(const QDateTime& dtCurrentTime)
{
    void *_a[] = {0, (void*)&dtCurrentTime};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void _CVigilPlayback::CueToTimestamp(const QDateTime& dtCurrentTime, bool bSyncOtherFeeds)
{
    void *_a[] = {0, (void*)&dtCurrentTime, (void*)&bSyncOtherFeeds};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline QString _CVigilPlayback::DateStampByFrame(int& nFrameNumber)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nFrameNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline void _CVigilPlayback::ExportAudio(int hWndExportStatus, const QVariant& vFileNames, const QString& sStartTime, const QString& sEndTime, int nAudioChannel)
{
    void *_a[] = {0, (void*)&hWndExportStatus, (void*)&vFileNames, (void*)&sStartTime, (void*)&sEndTime, (void*)&nAudioChannel};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline bool _CVigilPlayback::ExportBMP()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline bool _CVigilPlayback::ExportBMP(const QString& sFileName)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&sFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline bool _CVigilPlayback::ExportBMP(const QString& sFileName, bool bWithOverlayText)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&sFileName, (void*)&bWithOverlayText};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline bool _CVigilPlayback::ExportJPG()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline bool _CVigilPlayback::ExportJPG(const QString& sFileName)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&sFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline bool _CVigilPlayback::ExportJPG(const QString& sFileName, int nQuality)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&sFileName, (void*)&nQuality};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline bool _CVigilPlayback::ExportJPG(const QString& sFileName, int nQuality, bool bWithOverlayText)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&sFileName, (void*)&nQuality, (void*)&bWithOverlayText};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline void _CVigilPlayback::ExportVideo(int hWndExportStatus, const QString& sFileName, const QString& sStartTime, const QString& sEndTime)
{
    void *_a[] = {0, (void*)&hWndExportStatus, (void*)&sFileName, (void*)&sStartTime, (void*)&sEndTime};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline void _CVigilPlayback::ExportVideo(int hWndExportStatus, const QString& sFileName, const QString& sStartTime, const QString& sEndTime, int nFirstFrame)
{
    void *_a[] = {0, (void*)&hWndExportStatus, (void*)&sFileName, (void*)&sStartTime, (void*)&sEndTime, (void*)&nFirstFrame};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void _CVigilPlayback::ExportVideo(int hWndExportStatus, const QString& sFileName, const QString& sStartTime, const QString& sEndTime, int nFirstFrame, int nLastFrame)
{
    void *_a[] = {0, (void*)&hWndExportStatus, (void*)&sFileName, (void*)&sStartTime, (void*)&sEndTime, (void*)&nFirstFrame, (void*)&nLastFrame};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void _CVigilPlayback::ExportVideo(int hWndExportStatus, const QString& sFileName, const QString& sStartTime, const QString& sEndTime, int nFirstFrame, int nLastFrame, const QString& sPOSFileName)
{
    void *_a[] = {0, (void*)&hWndExportStatus, (void*)&sFileName, (void*)&sStartTime, (void*)&sEndTime, (void*)&nFirstFrame, (void*)&nLastFrame, (void*)&sPOSFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void _CVigilPlayback::ExportVideoEx(int hWndExportStatus, const QVariant& vFileNames, const QString& sStartTime, const QString& sEndTime)
{
    void *_a[] = {0, (void*)&hWndExportStatus, (void*)&vFileNames, (void*)&sStartTime, (void*)&sEndTime};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline void _CVigilPlayback::ExportVideoEx(int hWndExportStatus, const QVariant& vFileNames, const QString& sStartTime, const QString& sEndTime, int nFirstFrame)
{
    void *_a[] = {0, (void*)&hWndExportStatus, (void*)&vFileNames, (void*)&sStartTime, (void*)&sEndTime, (void*)&nFirstFrame};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline void _CVigilPlayback::ExportVideoEx(int hWndExportStatus, const QVariant& vFileNames, const QString& sStartTime, const QString& sEndTime, int nFirstFrame, int nLastFrame)
{
    void *_a[] = {0, (void*)&hWndExportStatus, (void*)&vFileNames, (void*)&sStartTime, (void*)&sEndTime, (void*)&nFirstFrame, (void*)&nLastFrame};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline void _CVigilPlayback::ExportVideoEx(int hWndExportStatus, const QVariant& vFileNames, const QString& sStartTime, const QString& sEndTime, int nFirstFrame, int nLastFrame, const QString& sPOSFileName)
{
    void *_a[] = {0, (void*)&hWndExportStatus, (void*)&vFileNames, (void*)&sStartTime, (void*)&sEndTime, (void*)&nFirstFrame, (void*)&nLastFrame, (void*)&sPOSFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline void _CVigilPlayback::ExportVideoEx(int hWndExportStatus, const QVariant& vFileNames, const QString& sStartTime, const QString& sEndTime, int nFirstFrame, int nLastFrame, const QString& sPOSFileName, int nAudioChannel)
{
    void *_a[] = {0, (void*)&hWndExportStatus, (void*)&vFileNames, (void*)&sStartTime, (void*)&sEndTime, (void*)&nFirstFrame, (void*)&nLastFrame, (void*)&sPOSFileName, (void*)&nAudioChannel};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline bool _CVigilPlayback::FetchFootage(int nCameraNumber, const QDateTime& dStartTime, const QDateTime& dEndTime)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&dStartTime, (void*)&dEndTime};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline bool _CVigilPlayback::FetchFootage(int nCameraNumber, const QDateTime& dStartTime, const QDateTime& dEndTime, VigilSDK::EnumRecordMode nMode)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&dStartTime, (void*)&dEndTime, (void*)&nMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
    return qax_result;
}

inline bool _CVigilPlayback::FetchFootage(int nCameraNumber, const QDateTime& dStartTime, const QDateTime& dEndTime, VigilSDK::EnumRecordMode nMode, int& nTimeout)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&dStartTime, (void*)&dEndTime, (void*)&nMode, (void*)&nTimeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
    return qax_result;
}

inline bool _CVigilPlayback::FetchFootageForRegister(int nTerminalNumber, int nRegisterNumber, const QDateTime& dStartTime, const QDateTime& dEndTime)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nTerminalNumber, (void*)&nRegisterNumber, (void*)&dStartTime, (void*)&dEndTime};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
    return qax_result;
}

inline bool _CVigilPlayback::FetchFootageForRegister(int nTerminalNumber, int nRegisterNumber, const QDateTime& dStartTime, const QDateTime& dEndTime, VigilSDK::EnumRecordMode nMode)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nTerminalNumber, (void*)&nRegisterNumber, (void*)&dStartTime, (void*)&dEndTime, (void*)&nMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
    return qax_result;
}

inline bool _CVigilPlayback::FetchFootageForRegister(int nTerminalNumber, int nRegisterNumber, const QDateTime& dStartTime, const QDateTime& dEndTime, VigilSDK::EnumRecordMode nMode, int& nTimeout)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nTerminalNumber, (void*)&nRegisterNumber, (void*)&dStartTime, (void*)&dEndTime, (void*)&nMode, (void*)&nTimeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}

inline ATLPARSERLib::IParser* _CVigilPlayback::GetIndexList(int nCameraNumber, const QDateTime& dStartTime, const QDateTime& dEndTime)
{
    ATLPARSERLib::IParser* qax_result = 0;
    qRegisterMetaType("ATLPARSERLib::IParser*", &qax_result);
#ifdef QAX_DUMPCPP_ATLPARSERLIB_H
    qRegisterMetaType("ATLPARSERLib::IParser", qax_result);
#endif
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&dStartTime, (void*)&dEndTime};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline ATLPARSERLib::IParser* _CVigilPlayback::GetIndexList(int nCameraNumber, const QDateTime& dStartTime, const QDateTime& dEndTime, VigilSDK::EnumRecordMode nMode)
{
    ATLPARSERLib::IParser* qax_result = 0;
    qRegisterMetaType("ATLPARSERLib::IParser*", &qax_result);
#ifdef QAX_DUMPCPP_ATLPARSERLIB_H
    qRegisterMetaType("ATLPARSERLib::IParser", qax_result);
#endif
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&dStartTime, (void*)&dEndTime, (void*)&nMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline ATLPARSERLib::IParser* _CVigilPlayback::GetIndexList(int nCameraNumber, const QDateTime& dStartTime, const QDateTime& dEndTime, VigilSDK::EnumRecordMode nMode, int& nTimeout)
{
    ATLPARSERLib::IParser* qax_result = 0;
    qRegisterMetaType("ATLPARSERLib::IParser*", &qax_result);
#ifdef QAX_DUMPCPP_ATLPARSERLIB_H
    qRegisterMetaType("ATLPARSERLib::IParser", qax_result);
#endif
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&dStartTime, (void*)&dEndTime, (void*)&nMode, (void*)&nTimeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline void _CVigilPlayback::InitiateStopFeed()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
}

inline void _CVigilPlayback::OSDAddString(const QString& sLine, const QDateTime& dtTimestamp)
{
    void *_a[] = {0, (void*)&sLine, (void*)&dtTimestamp};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
}

inline void _CVigilPlayback::OSDSetConfig()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
}

inline void _CVigilPlayback::OSDSetConfig(int nDwellTime)
{
    void *_a[] = {0, (void*)&nDwellTime};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
}

inline void _CVigilPlayback::OSDSetConfig(int nDwellTime, int nLines)
{
    void *_a[] = {0, (void*)&nDwellTime, (void*)&nLines};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
}

inline void _CVigilPlayback::OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor)
{
    void *_a[] = {0, (void*)&nDwellTime, (void*)&nLines, (void*)&nBackColor};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
}

inline void _CVigilPlayback::OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize)
{
    void *_a[] = {0, (void*)&nDwellTime, (void*)&nLines, (void*)&nBackColor, (void*)&nFontSize};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
}

inline void _CVigilPlayback::OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize, const QColor& nFontColor)
{
    void *_a[] = {0, (void*)&nDwellTime, (void*)&nLines, (void*)&nBackColor, (void*)&nFontSize, (void*)&nFontColor};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
}

inline void _CVigilPlayback::OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize, const QColor& nFontColor, VigilSDK::EnumFontWeight nFontWeight)
{
    void *_a[] = {0, (void*)&nDwellTime, (void*)&nLines, (void*)&nBackColor, (void*)&nFontSize, (void*)&nFontColor, (void*)&nFontWeight};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
}

inline void _CVigilPlayback::PutZoom(bool bEnableZoom, int nLeft, int nTop, int nRight, int nBottom, VigilSDK::EnumZoomCoordType eZoomCoordType)
{
    void *_a[] = {0, (void*)&bEnableZoom, (void*)&nLeft, (void*)&nTop, (void*)&nRight, (void*)&nBottom, (void*)&eZoomCoordType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
}

inline void _CVigilPlayback::RefreshScreen()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
}

inline void _CVigilPlayback::Repaint()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
}

inline void _CVigilPlayback::ResumeThread()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
}

inline void _CVigilPlayback::Run()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
}

inline void _CVigilPlayback::RunBackwards()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
}

inline void _CVigilPlayback::SetFrameAsync(int NewVal)
{
    void *_a[] = {0, (void*)&NewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 60, _a);
}

inline void _CVigilPlayback::StopFeed()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 69, _a);
}

inline void _CVigilPlayback::SuspendThread()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 70, _a);
}

inline bool _CVigilPlayback::View(int HWnd)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&HWnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 71, _a);
    return qax_result;
}

inline bool _CVigilPlayback::View(int HWnd, int hWndSocketError)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&HWnd, (void*)&hWndSocketError};
    qt_metacall(QMetaObject::InvokeMetaMethod, 72, _a);
    return qax_result;
}


inline bool CVigilPlayback::AudioBased() const
{
    QVariant qax_result = property("AudioBased");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CVigilPlayback::SetAudioBased(bool value){ setProperty("AudioBased", QVariant(value)); }

inline int CVigilPlayback::AudioChannel() const
{
    QVariant qax_result = property("AudioChannel");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CVigilPlayback::SetAudioChannel(int value){ setProperty("AudioChannel", QVariant(value)); }

inline bool CVigilPlayback::AutoLoop() const
{
    QVariant qax_result = property("AutoLoop");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CVigilPlayback::SetAutoLoop(bool value){ setProperty("AutoLoop", QVariant(value)); }

inline bool CVigilPlayback::CacheAutoSense() const
{
    QVariant qax_result = property("CacheAutoSense");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CVigilPlayback::SetCacheAutoSense(bool value){ setProperty("CacheAutoSense", QVariant(value)); }

inline int CVigilPlayback::CacheConnections() const
{
    QVariant qax_result = property("CacheConnections");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CVigilPlayback::SetCacheConnections(int value){ setProperty("CacheConnections", QVariant(value)); }

inline int CVigilPlayback::CacheSize() const
{
    QVariant qax_result = property("CacheSize");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CVigilPlayback::SetCacheSize(int value){ setProperty("CacheSize", QVariant(value)); }

inline int CVigilPlayback::CachedFrames() const
{
    QVariant qax_result = property("CachedFrames");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString CVigilPlayback::CameraName() const
{
    QVariant qax_result = property("CameraName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int CVigilPlayback::CameraNumber() const
{
    QVariant qax_result = property("CameraNumber");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int CVigilPlayback::CurrentDisplayedFrame() const
{
    QVariant qax_result = property("CurrentDisplayedFrame");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int CVigilPlayback::CurrentExportFrame() const
{
    QVariant qax_result = property("CurrentExportFrame");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int CVigilPlayback::CurrentFrame() const
{
    QVariant qax_result = property("CurrentFrame");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CVigilPlayback::SetCurrentFrame(int value){ setProperty("CurrentFrame", QVariant(value)); }

inline VigilSDK::_CVigilDVR* CVigilPlayback::DVR() const
{
    VigilSDK::_CVigilDVR* qax_pointer = 0;
    qRegisterMetaType("_CVigilDVR*", &qax_pointer);
    qRegisterMetaType("_CVigilDVR", qax_pointer);
    QVariant qax_result = property("DVR");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::_CVigilDVR**)qax_result.constData();
}

inline QString CVigilPlayback::FrameDateStamp() const
{
    QVariant qax_result = property("FrameDateStamp");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline VigilSDK::EnumRecordMode CVigilPlayback::FrameRecordMode() const
{
    QVariant qax_result = property("FrameRecordMode");
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::EnumRecordMode*)qax_result.constData();
}

inline int CVigilPlayback::HWnd() const
{
    QVariant qax_result = property("HWnd");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int CVigilPlayback::HWndStatus() const
{
    QVariant qax_result = property("HWndStatus");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CVigilPlayback::SetHWndStatus(int value){ setProperty("HWndStatus", QVariant(value)); }

inline QByteArray CVigilPlayback::MotionBlocks() const
{
    QVariant qax_result = property("MotionBlocks");
    Q_ASSERT(qax_result.isValid());
    return *(QByteArray*)qax_result.constData();
}

inline bool CVigilPlayback::OSDVisible() const
{
    QVariant qax_result = property("OSDVisible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CVigilPlayback::SetOSDVisible(bool value){ setProperty("OSDVisible", QVariant(value)); }

inline bool CVigilPlayback::Paused() const
{
    QVariant qax_result = property("Paused");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CVigilPlayback::SetPaused(bool value){ setProperty("Paused", QVariant(value)); }

inline VigilSDK::EnumPlayMode CVigilPlayback::PlayMode() const
{
    QVariant qax_result = property("PlayMode");
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::EnumPlayMode*)qax_result.constData();
}

inline int CVigilPlayback::PlaySpeed() const
{
    QVariant qax_result = property("PlaySpeed");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CVigilPlayback::SetPlaySpeed(int value){ setProperty("PlaySpeed", QVariant(value)); }

inline int CVigilPlayback::PrevWindowProcPtr() const
{
    QVariant qax_result = property("PrevWindowProcPtr");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CVigilPlayback::SetPrevWindowProcPtr(int value){ setProperty("PrevWindowProcPtr", QVariant(value)); }

inline bool CVigilPlayback::ReducedResolution() const
{
    QVariant qax_result = property("ReducedResolution");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CVigilPlayback::SetReducedResolution(bool value){ setProperty("ReducedResolution", QVariant(value)); }

inline bool CVigilPlayback::SynchronizedPlayback() const
{
    QVariant qax_result = property("SynchronizedPlayback");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CVigilPlayback::SetSynchronizedPlayback(bool value){ setProperty("SynchronizedPlayback", QVariant(value)); }

inline int CVigilPlayback::TimestampCueMessage() const
{
    QVariant qax_result = property("TimestampCueMessage");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CVigilPlayback::SetTimestampCueMessage(int value){ setProperty("TimestampCueMessage", QVariant(value)); }

inline int CVigilPlayback::TotalExportFrames() const
{
    QVariant qax_result = property("TotalExportFrames");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int CVigilPlayback::TotalFrames() const
{
    QVariant qax_result = property("TotalFrames");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool CVigilPlayback::VAEnabled() const
{
    QVariant qax_result = property("VAEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CVigilPlayback::SetVAEnabled(bool value){ setProperty("VAEnabled", QVariant(value)); }

inline int CVigilPlayback::VideoInputHeight() const
{
    QVariant qax_result = property("VideoInputHeight");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int CVigilPlayback::VideoInputWidth() const
{
    QVariant qax_result = property("VideoInputWidth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline void CVigilPlayback::CancelExportVideo()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline bool CVigilPlayback::ChooseAVICodec()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void CVigilPlayback::CueToTimestamp(const QDateTime& dtCurrentTime)
{
    void *_a[] = {0, (void*)&dtCurrentTime};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void CVigilPlayback::CueToTimestamp(const QDateTime& dtCurrentTime, bool bSyncOtherFeeds)
{
    void *_a[] = {0, (void*)&dtCurrentTime, (void*)&bSyncOtherFeeds};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline QString CVigilPlayback::DateStampByFrame(int& nFrameNumber)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nFrameNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline void CVigilPlayback::ExportAudio(int hWndExportStatus, const QVariant& vFileNames, const QString& sStartTime, const QString& sEndTime, int nAudioChannel)
{
    void *_a[] = {0, (void*)&hWndExportStatus, (void*)&vFileNames, (void*)&sStartTime, (void*)&sEndTime, (void*)&nAudioChannel};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline bool CVigilPlayback::ExportBMP()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline bool CVigilPlayback::ExportBMP(const QString& sFileName)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&sFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline bool CVigilPlayback::ExportBMP(const QString& sFileName, bool bWithOverlayText)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&sFileName, (void*)&bWithOverlayText};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline bool CVigilPlayback::ExportJPG()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline bool CVigilPlayback::ExportJPG(const QString& sFileName)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&sFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline bool CVigilPlayback::ExportJPG(const QString& sFileName, int nQuality)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&sFileName, (void*)&nQuality};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline bool CVigilPlayback::ExportJPG(const QString& sFileName, int nQuality, bool bWithOverlayText)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&sFileName, (void*)&nQuality, (void*)&bWithOverlayText};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline void CVigilPlayback::ExportVideo(int hWndExportStatus, const QString& sFileName, const QString& sStartTime, const QString& sEndTime)
{
    void *_a[] = {0, (void*)&hWndExportStatus, (void*)&sFileName, (void*)&sStartTime, (void*)&sEndTime};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void CVigilPlayback::ExportVideo(int hWndExportStatus, const QString& sFileName, const QString& sStartTime, const QString& sEndTime, int nFirstFrame)
{
    void *_a[] = {0, (void*)&hWndExportStatus, (void*)&sFileName, (void*)&sStartTime, (void*)&sEndTime, (void*)&nFirstFrame};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void CVigilPlayback::ExportVideo(int hWndExportStatus, const QString& sFileName, const QString& sStartTime, const QString& sEndTime, int nFirstFrame, int nLastFrame)
{
    void *_a[] = {0, (void*)&hWndExportStatus, (void*)&sFileName, (void*)&sStartTime, (void*)&sEndTime, (void*)&nFirstFrame, (void*)&nLastFrame};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline void CVigilPlayback::ExportVideo(int hWndExportStatus, const QString& sFileName, const QString& sStartTime, const QString& sEndTime, int nFirstFrame, int nLastFrame, const QString& sPOSFileName)
{
    void *_a[] = {0, (void*)&hWndExportStatus, (void*)&sFileName, (void*)&sStartTime, (void*)&sEndTime, (void*)&nFirstFrame, (void*)&nLastFrame, (void*)&sPOSFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline void CVigilPlayback::ExportVideoEx(int hWndExportStatus, const QVariant& vFileNames, const QString& sStartTime, const QString& sEndTime)
{
    void *_a[] = {0, (void*)&hWndExportStatus, (void*)&vFileNames, (void*)&sStartTime, (void*)&sEndTime};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline void CVigilPlayback::ExportVideoEx(int hWndExportStatus, const QVariant& vFileNames, const QString& sStartTime, const QString& sEndTime, int nFirstFrame)
{
    void *_a[] = {0, (void*)&hWndExportStatus, (void*)&vFileNames, (void*)&sStartTime, (void*)&sEndTime, (void*)&nFirstFrame};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline void CVigilPlayback::ExportVideoEx(int hWndExportStatus, const QVariant& vFileNames, const QString& sStartTime, const QString& sEndTime, int nFirstFrame, int nLastFrame)
{
    void *_a[] = {0, (void*)&hWndExportStatus, (void*)&vFileNames, (void*)&sStartTime, (void*)&sEndTime, (void*)&nFirstFrame, (void*)&nLastFrame};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline void CVigilPlayback::ExportVideoEx(int hWndExportStatus, const QVariant& vFileNames, const QString& sStartTime, const QString& sEndTime, int nFirstFrame, int nLastFrame, const QString& sPOSFileName)
{
    void *_a[] = {0, (void*)&hWndExportStatus, (void*)&vFileNames, (void*)&sStartTime, (void*)&sEndTime, (void*)&nFirstFrame, (void*)&nLastFrame, (void*)&sPOSFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
}

inline void CVigilPlayback::ExportVideoEx(int hWndExportStatus, const QVariant& vFileNames, const QString& sStartTime, const QString& sEndTime, int nFirstFrame, int nLastFrame, const QString& sPOSFileName, int nAudioChannel)
{
    void *_a[] = {0, (void*)&hWndExportStatus, (void*)&vFileNames, (void*)&sStartTime, (void*)&sEndTime, (void*)&nFirstFrame, (void*)&nLastFrame, (void*)&sPOSFileName, (void*)&nAudioChannel};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
}

inline bool CVigilPlayback::FetchFootage(int nCameraNumber, const QDateTime& dStartTime, const QDateTime& dEndTime)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&dStartTime, (void*)&dEndTime};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
    return qax_result;
}

inline bool CVigilPlayback::FetchFootage(int nCameraNumber, const QDateTime& dStartTime, const QDateTime& dEndTime, VigilSDK::EnumRecordMode nMode)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&dStartTime, (void*)&dEndTime, (void*)&nMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
    return qax_result;
}

inline bool CVigilPlayback::FetchFootage(int nCameraNumber, const QDateTime& dStartTime, const QDateTime& dEndTime, VigilSDK::EnumRecordMode nMode, int& nTimeout)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&dStartTime, (void*)&dEndTime, (void*)&nMode, (void*)&nTimeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
    return qax_result;
}

inline bool CVigilPlayback::FetchFootageForRegister(int nTerminalNumber, int nRegisterNumber, const QDateTime& dStartTime, const QDateTime& dEndTime)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nTerminalNumber, (void*)&nRegisterNumber, (void*)&dStartTime, (void*)&dEndTime};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}

inline bool CVigilPlayback::FetchFootageForRegister(int nTerminalNumber, int nRegisterNumber, const QDateTime& dStartTime, const QDateTime& dEndTime, VigilSDK::EnumRecordMode nMode)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nTerminalNumber, (void*)&nRegisterNumber, (void*)&dStartTime, (void*)&dEndTime, (void*)&nMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline bool CVigilPlayback::FetchFootageForRegister(int nTerminalNumber, int nRegisterNumber, const QDateTime& dStartTime, const QDateTime& dEndTime, VigilSDK::EnumRecordMode nMode, int& nTimeout)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nTerminalNumber, (void*)&nRegisterNumber, (void*)&dStartTime, (void*)&dEndTime, (void*)&nMode, (void*)&nTimeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline ATLPARSERLib::IParser* CVigilPlayback::GetIndexList(int nCameraNumber, const QDateTime& dStartTime, const QDateTime& dEndTime)
{
    ATLPARSERLib::IParser* qax_result = 0;
    qRegisterMetaType("ATLPARSERLib::IParser*", &qax_result);
#ifdef QAX_DUMPCPP_ATLPARSERLIB_H
    qRegisterMetaType("ATLPARSERLib::IParser", qax_result);
#endif
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&dStartTime, (void*)&dEndTime};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline ATLPARSERLib::IParser* CVigilPlayback::GetIndexList(int nCameraNumber, const QDateTime& dStartTime, const QDateTime& dEndTime, VigilSDK::EnumRecordMode nMode)
{
    ATLPARSERLib::IParser* qax_result = 0;
    qRegisterMetaType("ATLPARSERLib::IParser*", &qax_result);
#ifdef QAX_DUMPCPP_ATLPARSERLIB_H
    qRegisterMetaType("ATLPARSERLib::IParser", qax_result);
#endif
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&dStartTime, (void*)&dEndTime, (void*)&nMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline ATLPARSERLib::IParser* CVigilPlayback::GetIndexList(int nCameraNumber, const QDateTime& dStartTime, const QDateTime& dEndTime, VigilSDK::EnumRecordMode nMode, int& nTimeout)
{
    ATLPARSERLib::IParser* qax_result = 0;
    qRegisterMetaType("ATLPARSERLib::IParser*", &qax_result);
#ifdef QAX_DUMPCPP_ATLPARSERLIB_H
    qRegisterMetaType("ATLPARSERLib::IParser", qax_result);
#endif
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&dStartTime, (void*)&dEndTime, (void*)&nMode, (void*)&nTimeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline void CVigilPlayback::InitiateStopFeed()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
}

inline void CVigilPlayback::OSDAddString(const QString& sLine, const QDateTime& dtTimestamp)
{
    void *_a[] = {0, (void*)&sLine, (void*)&dtTimestamp};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
}

inline void CVigilPlayback::OSDSetConfig()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
}

inline void CVigilPlayback::OSDSetConfig(int nDwellTime)
{
    void *_a[] = {0, (void*)&nDwellTime};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
}

inline void CVigilPlayback::OSDSetConfig(int nDwellTime, int nLines)
{
    void *_a[] = {0, (void*)&nDwellTime, (void*)&nLines};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
}

inline void CVigilPlayback::OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor)
{
    void *_a[] = {0, (void*)&nDwellTime, (void*)&nLines, (void*)&nBackColor};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
}

inline void CVigilPlayback::OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize)
{
    void *_a[] = {0, (void*)&nDwellTime, (void*)&nLines, (void*)&nBackColor, (void*)&nFontSize};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
}

inline void CVigilPlayback::OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize, const QColor& nFontColor)
{
    void *_a[] = {0, (void*)&nDwellTime, (void*)&nLines, (void*)&nBackColor, (void*)&nFontSize, (void*)&nFontColor};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
}

inline void CVigilPlayback::OSDSetConfig(int nDwellTime, int nLines, const QColor& nBackColor, VigilSDK::EnumFontSize nFontSize, const QColor& nFontColor, VigilSDK::EnumFontWeight nFontWeight)
{
    void *_a[] = {0, (void*)&nDwellTime, (void*)&nLines, (void*)&nBackColor, (void*)&nFontSize, (void*)&nFontColor, (void*)&nFontWeight};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
}

inline void CVigilPlayback::PutZoom(bool bEnableZoom, int nLeft, int nTop, int nRight, int nBottom, VigilSDK::EnumZoomCoordType eZoomCoordType)
{
    void *_a[] = {0, (void*)&bEnableZoom, (void*)&nLeft, (void*)&nTop, (void*)&nRight, (void*)&nBottom, (void*)&eZoomCoordType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
}

inline void CVigilPlayback::RefreshScreen()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
}

inline void CVigilPlayback::Repaint()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
}

inline void CVigilPlayback::ResumeThread()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
}

inline void CVigilPlayback::Run()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 53, _a);
}

inline void CVigilPlayback::RunBackwards()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
}

inline void CVigilPlayback::SetFrameAsync(int NewVal)
{
    void *_a[] = {0, (void*)&NewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 62, _a);
}

inline void CVigilPlayback::StopFeed()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 72, _a);
}

inline void CVigilPlayback::SuspendThread()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 73, _a);
}

inline bool CVigilPlayback::View(int HWnd)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&HWnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 74, _a);
    return qax_result;
}

inline bool CVigilPlayback::View(int HWnd, int hWndSocketError)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&HWnd, (void*)&hWndSocketError};
    qt_metacall(QMetaObject::InvokeMetaMethod, 75, _a);
    return qax_result;
}

inline int CVigilPlayback::WindowProc(int HWnd, int uMsg, int wParam, int lParam, bool& bConsumed)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&HWnd, (void*)&uMsg, (void*)&wParam, (void*)&lParam, (void*)&bConsumed};
    qt_metacall(QMetaObject::InvokeMetaMethod, 76, _a);
    return qax_result;
}


inline int _CRect::Bottom() const
{
    QVariant qax_result = property("Bottom");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CRect::SetBottom(int value){ setProperty("Bottom", QVariant(value)); }

inline int _CRect::Height() const
{
    QVariant qax_result = property("Height");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CRect::SetHeight(int value){ setProperty("Height", QVariant(value)); }

inline int _CRect::Left() const
{
    QVariant qax_result = property("Left");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CRect::SetLeft(int value){ setProperty("Left", QVariant(value)); }

inline int _CRect::Right() const
{
    QVariant qax_result = property("Right");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CRect::SetRight(int value){ setProperty("Right", QVariant(value)); }

inline int _CRect::Top() const
{
    QVariant qax_result = property("Top");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CRect::SetTop(int value){ setProperty("Top", QVariant(value)); }

inline int _CRect::Width() const
{
    QVariant qax_result = property("Width");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CRect::SetWidth(int value){ setProperty("Width", QVariant(value)); }

inline void _CRect::Clear()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline VigilSDK::_CRect* _CRect::Copy()
{
    VigilSDK::_CRect* qax_result = 0;
    qRegisterMetaType("_CRect*", &qax_result);
    qRegisterMetaType("_CRect", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline bool _CRect::Equals(VigilSDK::_CRect* oRect)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&oRect};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void _CRect::Inflate(int nHoriz, int nVert)
{
    void *_a[] = {0, (void*)&nHoriz, (void*)&nVert};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void _CRect::Inflate(int nHoriz, int nVert, bool bAnchorTopLeft)
{
    void *_a[] = {0, (void*)&nHoriz, (void*)&nVert, (void*)&bAnchorTopLeft};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _CRect::Translate(int nHoriz, int nVert)
{
    void *_a[] = {0, (void*)&nHoriz, (void*)&nVert};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}


inline int CRect::Bottom() const
{
    QVariant qax_result = property("Bottom");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CRect::SetBottom(int value){ setProperty("Bottom", QVariant(value)); }

inline int CRect::Height() const
{
    QVariant qax_result = property("Height");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CRect::SetHeight(int value){ setProperty("Height", QVariant(value)); }

inline int CRect::Left() const
{
    QVariant qax_result = property("Left");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CRect::SetLeft(int value){ setProperty("Left", QVariant(value)); }

inline int CRect::Right() const
{
    QVariant qax_result = property("Right");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CRect::SetRight(int value){ setProperty("Right", QVariant(value)); }

inline int CRect::Top() const
{
    QVariant qax_result = property("Top");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CRect::SetTop(int value){ setProperty("Top", QVariant(value)); }

inline int CRect::Width() const
{
    QVariant qax_result = property("Width");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CRect::SetWidth(int value){ setProperty("Width", QVariant(value)); }

inline void CRect::Clear()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline VigilSDK::_CRect* CRect::Copy()
{
    VigilSDK::_CRect* qax_result = 0;
    qRegisterMetaType("_CRect*", &qax_result);
    qRegisterMetaType("_CRect", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline bool CRect::Equals(VigilSDK::_CRect* oRect)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&oRect};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void CRect::Inflate(int nHoriz, int nVert)
{
    void *_a[] = {0, (void*)&nHoriz, (void*)&nVert};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void CRect::Inflate(int nHoriz, int nVert, bool bAnchorTopLeft)
{
    void *_a[] = {0, (void*)&nHoriz, (void*)&nVert, (void*)&bAnchorTopLeft};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void CRect::Translate(int nHoriz, int nVert)
{
    void *_a[] = {0, (void*)&nHoriz, (void*)&nVert};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}


inline int _IWindowSubclasser::HWnd() const
{
    QVariant qax_result = property("HWnd");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int _IWindowSubclasser::PrevWindowProcPtr() const
{
    QVariant qax_result = property("PrevWindowProcPtr");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _IWindowSubclasser::SetPrevWindowProcPtr(int value){ setProperty("PrevWindowProcPtr", QVariant(value)); }

inline int _IWindowSubclasser::WindowProc(int HWnd, int uMsg, int wParam, int lParam, bool& bConsumed)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&HWnd, (void*)&uMsg, (void*)&wParam, (void*)&lParam, (void*)&bConsumed};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}


inline int IWindowSubclasser::HWnd() const
{
    QVariant qax_result = property("HWnd");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int IWindowSubclasser::PrevWindowProcPtr() const
{
    QVariant qax_result = property("PrevWindowProcPtr");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void IWindowSubclasser::SetPrevWindowProcPtr(int value){ setProperty("PrevWindowProcPtr", QVariant(value)); }

inline int IWindowSubclasser::WindowProc(int HWnd, int uMsg, int wParam, int lParam, bool& bConsumed)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&HWnd, (void*)&uMsg, (void*)&wParam, (void*)&lParam, (void*)&bConsumed};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}


inline int _IUserInputListener::AppWindowHwnd() const
{
    QVariant qax_result = property("AppWindowHwnd");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool _IUserInputListener::IsCtrlKeyDown() const
{
    QVariant qax_result = property("IsCtrlKeyDown");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString _IUserInputListener::Key() const
{
    QVariant qax_result = property("Key");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool _IUserInputListener::ListenKeyboardMouse() const
{
    QVariant qax_result = property("ListenKeyboardMouse");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _IUserInputListener::ListenWindow() const
{
    QVariant qax_result = property("ListenWindow");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _IUserInputListener::MouseOver() const
{
    QVariant qax_result = property("MouseOver");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline void _IUserInputListener::AppGotFocus()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void _IUserInputListener::AppLostFocus()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline QVariant _IUserInputListener::GetBoundingRect(int& nLeft, int& nTop, int& nRight, int& nBottom)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nLeft, (void*)&nTop, (void*)&nRight, (void*)&nBottom};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void _IUserInputListener::KeyPressed(int& KeyCode)
{
    void *_a[] = {0, (void*)&KeyCode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void _IUserInputListener::KeyReleased(int& KeyCode)
{
    void *_a[] = {0, (void*)&KeyCode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline int _IUserInputListener::KeyboardHookProc(int idHook, int wParam, int lParam)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&idHook, (void*)&wParam, (void*)&lParam};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline void _IUserInputListener::MouseEnter()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline int _IUserInputListener::MouseHookProc(int idHook, int wParam, int lParam)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&idHook, (void*)&wParam, (void*)&lParam};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline void _IUserInputListener::MouseLeave()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline int _IUserInputListener::WindowHookProc(int idHook, int wParam, int lParam)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&idHook, (void*)&wParam, (void*)&lParam};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}


inline int IUserInputListener::AppWindowHwnd() const
{
    QVariant qax_result = property("AppWindowHwnd");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool IUserInputListener::IsCtrlKeyDown() const
{
    QVariant qax_result = property("IsCtrlKeyDown");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString IUserInputListener::Key() const
{
    QVariant qax_result = property("Key");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool IUserInputListener::ListenKeyboardMouse() const
{
    QVariant qax_result = property("ListenKeyboardMouse");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IUserInputListener::ListenWindow() const
{
    QVariant qax_result = property("ListenWindow");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool IUserInputListener::MouseOver() const
{
    QVariant qax_result = property("MouseOver");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline void IUserInputListener::AppGotFocus()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void IUserInputListener::AppLostFocus()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline QVariant IUserInputListener::GetBoundingRect(int& nLeft, int& nTop, int& nRight, int& nBottom)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nLeft, (void*)&nTop, (void*)&nRight, (void*)&nBottom};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void IUserInputListener::KeyPressed(int& KeyCode)
{
    void *_a[] = {0, (void*)&KeyCode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void IUserInputListener::KeyReleased(int& KeyCode)
{
    void *_a[] = {0, (void*)&KeyCode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline int IUserInputListener::KeyboardHookProc(int idHook, int wParam, int lParam)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&idHook, (void*)&wParam, (void*)&lParam};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline void IUserInputListener::MouseEnter()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline int IUserInputListener::MouseHookProc(int idHook, int wParam, int lParam)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&idHook, (void*)&wParam, (void*)&lParam};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline void IUserInputListener::MouseLeave()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline int IUserInputListener::WindowHookProc(int idHook, int wParam, int lParam)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&idHook, (void*)&wParam, (void*)&lParam};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}


inline QString _CVigilRemotePlayback::ClientID() const
{
    QVariant qax_result = property("ClientID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CVigilRemotePlayback::SetClientID(const QString& value){ setProperty("ClientID", QVariant(value)); }

inline int _CVigilRemotePlayback::CurrentFrame() const
{
    QVariant qax_result = property("CurrentFrame");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CVigilRemotePlayback::SetCurrentFrame(int value){ setProperty("CurrentFrame", QVariant(value)); }

inline VigilSDK::_CVigilDVR* _CVigilRemotePlayback::DVR() const
{
    VigilSDK::_CVigilDVR* qax_pointer = 0;
    qRegisterMetaType("_CVigilDVR*", &qax_pointer);
    qRegisterMetaType("_CVigilDVR", qax_pointer);
    QVariant qax_result = property("DVR");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::_CVigilDVR**)qax_result.constData();
}

inline VigilSDK::EnumDVRStatus _CVigilRemotePlayback::DVRStatus() const
{
    QVariant qax_result = property("DVRStatus");
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::EnumDVRStatus*)qax_result.constData();
}

inline int _CVigilRemotePlayback::EndPlaybackFrame() const
{
    QVariant qax_result = property("EndPlaybackFrame");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CVigilRemotePlayback::SetEndPlaybackFrame(int value){ setProperty("EndPlaybackFrame", QVariant(value)); }

inline int _CVigilRemotePlayback::FastFrameIncrement() const
{
    QVariant qax_result = property("FastFrameIncrement");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int _CVigilRemotePlayback::NominalFPS() const
{
    QVariant qax_result = property("NominalFPS");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int _CVigilRemotePlayback::StartPlaybackFrame() const
{
    QVariant qax_result = property("StartPlaybackFrame");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CVigilRemotePlayback::SetStartPlaybackFrame(int value){ setProperty("StartPlaybackFrame", QVariant(value)); }

inline QString _CVigilRemotePlayback::GetFrameTimestamp(int& nFrame)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nFrame};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline bool _CVigilRemotePlayback::LoadPlayback(int nCameraNumber, const QDateTime& dtDateFrom, const QDateTime& dtDateTo)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&dtDateFrom, (void*)&dtDateTo};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline bool _CVigilRemotePlayback::PlaybackControlCommand(VigilSDK::EnumPlaybackControlCommand eCommand)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&eCommand};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline bool _CVigilRemotePlayback::UnloadPlayback()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}


inline QString CVigilRemotePlayback::ClientID() const
{
    QVariant qax_result = property("ClientID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CVigilRemotePlayback::SetClientID(const QString& value){ setProperty("ClientID", QVariant(value)); }

inline int CVigilRemotePlayback::CurrentFrame() const
{
    QVariant qax_result = property("CurrentFrame");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CVigilRemotePlayback::SetCurrentFrame(int value){ setProperty("CurrentFrame", QVariant(value)); }

inline VigilSDK::_CVigilDVR* CVigilRemotePlayback::DVR() const
{
    VigilSDK::_CVigilDVR* qax_pointer = 0;
    qRegisterMetaType("_CVigilDVR*", &qax_pointer);
    qRegisterMetaType("_CVigilDVR", qax_pointer);
    QVariant qax_result = property("DVR");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::_CVigilDVR**)qax_result.constData();
}

inline VigilSDK::EnumDVRStatus CVigilRemotePlayback::DVRStatus() const
{
    QVariant qax_result = property("DVRStatus");
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::EnumDVRStatus*)qax_result.constData();
}

inline int CVigilRemotePlayback::EndPlaybackFrame() const
{
    QVariant qax_result = property("EndPlaybackFrame");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CVigilRemotePlayback::SetEndPlaybackFrame(int value){ setProperty("EndPlaybackFrame", QVariant(value)); }

inline int CVigilRemotePlayback::FastFrameIncrement() const
{
    QVariant qax_result = property("FastFrameIncrement");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int CVigilRemotePlayback::NominalFPS() const
{
    QVariant qax_result = property("NominalFPS");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int CVigilRemotePlayback::StartPlaybackFrame() const
{
    QVariant qax_result = property("StartPlaybackFrame");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CVigilRemotePlayback::SetStartPlaybackFrame(int value){ setProperty("StartPlaybackFrame", QVariant(value)); }

inline QString CVigilRemotePlayback::GetFrameTimestamp(int& nFrame)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nFrame};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline bool CVigilRemotePlayback::LoadPlayback(int nCameraNumber, const QDateTime& dtDateFrom, const QDateTime& dtDateTo)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&dtDateFrom, (void*)&dtDateTo};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline bool CVigilRemotePlayback::PlaybackControlCommand(VigilSDK::EnumPlaybackControlCommand eCommand)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&eCommand};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline bool CVigilRemotePlayback::UnloadPlayback()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}


inline VigilSDK::_CVigilDVR* _CVigilCameraControl::DVR() const
{
    VigilSDK::_CVigilDVR* qax_pointer = 0;
    qRegisterMetaType("_CVigilDVR*", &qax_pointer);
    qRegisterMetaType("_CVigilDVR", qax_pointer);
    QVariant qax_result = property("DVR");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::_CVigilDVR**)qax_result.constData();
}

inline EnumCCResult _CVigilCameraControl::ClearAux(int nCameraNumber, int nAuxNumber)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&nAuxNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline EnumCCResult _CVigilCameraControl::EnhanceImage(int nCameraNumber, VigilSDK::EnumEnhancement eEnhancementType)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&eEnhancementType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline EnumCCResult _CVigilCameraControl::EnhanceImage(int nCameraNumber, VigilSDK::EnumEnhancement eEnhancementType, bool bOn)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&eEnhancementType, (void*)&bOn};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline EnumCameraType _CVigilCameraControl::GetCameraType(int nCameraNumber)
{
    EnumCameraType qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline QVariant _CVigilCameraControl::GetPatternNames(int nCameraNumber)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline QVariant _CVigilCameraControl::GetPresetnames(int nCameraNumber)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline EnumCCResult _CVigilCameraControl::GotoPreset(int nCameraNumber, const QVariant& vPreset)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&vPreset};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline void _CVigilCameraControl::LoadPresetTour(int nCameraNumber, QVariant& vPreset, QVariant& vDwellTime)
{
    void *_a[] = {0, (void*)&nCameraNumber, (void*)&vPreset, (void*)&vDwellTime};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline EnumCCResult _CVigilCameraControl::ModifySequence(int nCameraNumber, const QVariant& vSequence, int nPoint, const QVariant& vPreset, int nDwell, int nSpeed)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&vSequence, (void*)&nPoint, (void*)&vPreset, (void*)&nDwell, (void*)&nSpeed};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int _CVigilCameraControl::NumTourPresets(int nCameraNumber)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline EnumCCResult _CVigilCameraControl::RunPattern(int nCameraNumber, const QVariant& vPattern)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&vPattern};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline EnumCCResult _CVigilCameraControl::RunSequence(int nCameraNumber, const QVariant& vSequence)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&vSequence};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline void _CVigilCameraControl::SavePresetTour(int nCameraNumber, const QVariant& vPreset, const QVariant& vDwellTime)
{
    void *_a[] = {0, (void*)&nCameraNumber, (void*)&vPreset, (void*)&vDwellTime};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline EnumCCResult _CVigilCameraControl::SendMenuCommand(int nCameraNumber, VigilSDK::EnumMenuCommand eMenuCommand)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&eMenuCommand};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline EnumCCResult _CVigilCameraControl::SetAux(int nCameraNumber, int nAuxNumber)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&nAuxNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline EnumCCResult _CVigilCameraControl::SetPreset(int nCameraNumber, const QVariant& vPreset)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&vPreset};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline EnumCCResult _CVigilCameraControl::SetPreset(int nCameraNumber, const QVariant& vPreset, const QString& sNewPresetName)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&vPreset, (void*)&sNewPresetName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline EnumCCResult _CVigilCameraControl::StartPTZIF(int nCameraNumber)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline EnumCCResult _CVigilCameraControl::StartPTZIF(int nCameraNumber, int nPanSpeed)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&nPanSpeed};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline EnumCCResult _CVigilCameraControl::StartPTZIF(int nCameraNumber, int nPanSpeed, int nTiltSpeed)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&nPanSpeed, (void*)&nTiltSpeed};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline EnumCCResult _CVigilCameraControl::StartPTZIF(int nCameraNumber, int nPanSpeed, int nTiltSpeed, int nZoomSpeed)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&nPanSpeed, (void*)&nTiltSpeed, (void*)&nZoomSpeed};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline EnumCCResult _CVigilCameraControl::StartPTZIF(int nCameraNumber, int nPanSpeed, int nTiltSpeed, int nZoomSpeed, int nIrisSpeed)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&nPanSpeed, (void*)&nTiltSpeed, (void*)&nZoomSpeed, (void*)&nIrisSpeed};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}

inline EnumCCResult _CVigilCameraControl::StartPTZIF(int nCameraNumber, int nPanSpeed, int nTiltSpeed, int nZoomSpeed, int nIrisSpeed, int nFocusSpeed)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&nPanSpeed, (void*)&nTiltSpeed, (void*)&nZoomSpeed, (void*)&nIrisSpeed, (void*)&nFocusSpeed};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline EnumCCResult _CVigilCameraControl::StartPattern(int nCameraNumber, const QVariant& vPattern)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&vPattern};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
    return qax_result;
}

inline EnumCCResult _CVigilCameraControl::StartSequence(int nCameraNumber, const QVariant& vSequence)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&vSequence};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
    return qax_result;
}

inline void _CVigilCameraControl::StartTour(int nCameraNumber)
{
    void *_a[] = {0, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
}

inline EnumCCResult _CVigilCameraControl::StopPTZIF(int nCameraNumber)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
    return qax_result;
}

inline EnumCCResult _CVigilCameraControl::StopPattern(int nCameraNumber)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}

inline EnumCCResult _CVigilCameraControl::StopPattern(int nCameraNumber, const QString& sNewPatternName)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&sNewPatternName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline EnumCCResult _CVigilCameraControl::StopSequence(int nCameraNumber, const QVariant& vSequence)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&vSequence};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline EnumCCResult _CVigilCameraControl::StopSequence(int nCameraNumber, const QVariant& vSequence, const QString& sNewSequenceName)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&vSequence, (void*)&sNewSequenceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline void _CVigilCameraControl::StopTour(int nCameraNumber)
{
    void *_a[] = {0, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
}


inline VigilSDK::_CVigilDVR* CVigilCameraControl::DVR() const
{
    VigilSDK::_CVigilDVR* qax_pointer = 0;
    qRegisterMetaType("_CVigilDVR*", &qax_pointer);
    qRegisterMetaType("_CVigilDVR", qax_pointer);
    QVariant qax_result = property("DVR");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::_CVigilDVR**)qax_result.constData();
}

inline EnumCCResult CVigilCameraControl::ClearAux(int nCameraNumber, int nAuxNumber)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&nAuxNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline EnumCCResult CVigilCameraControl::EnhanceImage(int nCameraNumber, VigilSDK::EnumEnhancement eEnhancementType)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&eEnhancementType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline EnumCCResult CVigilCameraControl::EnhanceImage(int nCameraNumber, VigilSDK::EnumEnhancement eEnhancementType, bool bOn)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&eEnhancementType, (void*)&bOn};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline EnumCameraType CVigilCameraControl::GetCameraType(int nCameraNumber)
{
    EnumCameraType qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline QVariant CVigilCameraControl::GetPatternNames(int nCameraNumber)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline QVariant CVigilCameraControl::GetPresetnames(int nCameraNumber)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline EnumCCResult CVigilCameraControl::GotoPreset(int nCameraNumber, const QVariant& vPreset)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&vPreset};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline void CVigilCameraControl::LoadPresetTour(int nCameraNumber, QVariant& vPreset, QVariant& vDwellTime)
{
    void *_a[] = {0, (void*)&nCameraNumber, (void*)&vPreset, (void*)&vDwellTime};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline EnumCCResult CVigilCameraControl::ModifySequence(int nCameraNumber, const QVariant& vSequence, int nPoint, const QVariant& vPreset, int nDwell, int nSpeed)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&vSequence, (void*)&nPoint, (void*)&vPreset, (void*)&nDwell, (void*)&nSpeed};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int CVigilCameraControl::NumTourPresets(int nCameraNumber)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline EnumCCResult CVigilCameraControl::RunPattern(int nCameraNumber, const QVariant& vPattern)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&vPattern};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline EnumCCResult CVigilCameraControl::RunSequence(int nCameraNumber, const QVariant& vSequence)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&vSequence};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline void CVigilCameraControl::SavePresetTour(int nCameraNumber, const QVariant& vPreset, const QVariant& vDwellTime)
{
    void *_a[] = {0, (void*)&nCameraNumber, (void*)&vPreset, (void*)&vDwellTime};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline EnumCCResult CVigilCameraControl::SendMenuCommand(int nCameraNumber, VigilSDK::EnumMenuCommand eMenuCommand)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&eMenuCommand};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline EnumCCResult CVigilCameraControl::SetAux(int nCameraNumber, int nAuxNumber)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&nAuxNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline EnumCCResult CVigilCameraControl::SetPreset(int nCameraNumber, const QVariant& vPreset)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&vPreset};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline EnumCCResult CVigilCameraControl::SetPreset(int nCameraNumber, const QVariant& vPreset, const QString& sNewPresetName)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&vPreset, (void*)&sNewPresetName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline EnumCCResult CVigilCameraControl::StartPTZIF(int nCameraNumber)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline EnumCCResult CVigilCameraControl::StartPTZIF(int nCameraNumber, int nPanSpeed)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&nPanSpeed};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline EnumCCResult CVigilCameraControl::StartPTZIF(int nCameraNumber, int nPanSpeed, int nTiltSpeed)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&nPanSpeed, (void*)&nTiltSpeed};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline EnumCCResult CVigilCameraControl::StartPTZIF(int nCameraNumber, int nPanSpeed, int nTiltSpeed, int nZoomSpeed)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&nPanSpeed, (void*)&nTiltSpeed, (void*)&nZoomSpeed};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline EnumCCResult CVigilCameraControl::StartPTZIF(int nCameraNumber, int nPanSpeed, int nTiltSpeed, int nZoomSpeed, int nIrisSpeed)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&nPanSpeed, (void*)&nTiltSpeed, (void*)&nZoomSpeed, (void*)&nIrisSpeed};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}

inline EnumCCResult CVigilCameraControl::StartPTZIF(int nCameraNumber, int nPanSpeed, int nTiltSpeed, int nZoomSpeed, int nIrisSpeed, int nFocusSpeed)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&nPanSpeed, (void*)&nTiltSpeed, (void*)&nZoomSpeed, (void*)&nIrisSpeed, (void*)&nFocusSpeed};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline EnumCCResult CVigilCameraControl::StartPattern(int nCameraNumber, const QVariant& vPattern)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&vPattern};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
    return qax_result;
}

inline EnumCCResult CVigilCameraControl::StartSequence(int nCameraNumber, const QVariant& vSequence)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&vSequence};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
    return qax_result;
}

inline void CVigilCameraControl::StartTour(int nCameraNumber)
{
    void *_a[] = {0, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
}

inline EnumCCResult CVigilCameraControl::StopPTZIF(int nCameraNumber)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
    return qax_result;
}

inline EnumCCResult CVigilCameraControl::StopPattern(int nCameraNumber)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}

inline EnumCCResult CVigilCameraControl::StopPattern(int nCameraNumber, const QString& sNewPatternName)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&sNewPatternName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline EnumCCResult CVigilCameraControl::StopSequence(int nCameraNumber, const QVariant& vSequence)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&vSequence};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline EnumCCResult CVigilCameraControl::StopSequence(int nCameraNumber, const QVariant& vSequence, const QString& sNewSequenceName)
{
    EnumCCResult qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber, (void*)&vSequence, (void*)&sNewSequenceName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline void CVigilCameraControl::StopTour(int nCameraNumber)
{
    void *_a[] = {0, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
}


inline bool _CVigilAlarm::Acknowledged() const
{
    QVariant qax_result = property("Acknowledged");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CVigilAlarm::SetAcknowledged(bool value){ setProperty("Acknowledged", QVariant(value)); }

inline QString _CVigilAlarm::AlarmGUID() const
{
    QVariant qax_result = property("AlarmGUID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CVigilAlarm::SetAlarmGUID(const QString& value){ setProperty("AlarmGUID", QVariant(value)); }

inline int _CVigilAlarm::AlarmInput() const
{
    QVariant qax_result = property("AlarmInput");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CVigilAlarm::SetAlarmInput(int value){ setProperty("AlarmInput", QVariant(value)); }

inline QString _CVigilAlarm::AlarmInputString() const
{
    QVariant qax_result = property("AlarmInputString");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline VigilSDK::EnumAlarmType _CVigilAlarm::AlarmType() const
{
    QVariant qax_result = property("AlarmType");
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::EnumAlarmType*)qax_result.constData();
}
inline void _CVigilAlarm::SetAlarmType(VigilSDK::EnumAlarmType value){ setProperty("AlarmType", QVariant(value)); }

inline QString _CVigilAlarm::AlarmTypeString() const
{
    QVariant qax_result = property("AlarmTypeString");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int _CVigilAlarm::BinaryLength() const
{
    QVariant qax_result = property("BinaryLength");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _CVigilAlarm::CameraNumbers() const
{
    QVariant qax_result = property("CameraNumbers");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CVigilAlarm::SetCameraNumbers(const QString& value){ setProperty("CameraNumbers", QVariant(value)); }

inline QByteArray _CVigilAlarm::CustomBinary() const
{
    QVariant qax_result = property("CustomBinary");
    Q_ASSERT(qax_result.isValid());
    return *(QByteArray*)qax_result.constData();
}

inline VigilSDK::EnumCustomAlarmDataType _CVigilAlarm::CustomDataType() const
{
    QVariant qax_result = property("CustomDataType");
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::EnumCustomAlarmDataType*)qax_result.constData();
}

inline QString _CVigilAlarm::CustomText() const
{
    QVariant qax_result = property("CustomText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool _CVigilAlarm::IsMetaData() const
{
    QVariant qax_result = property("IsMetaData");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CVigilAlarm::SetIsMetaData(bool value){ setProperty("IsMetaData", QVariant(value)); }

inline QString _CVigilAlarm::Key() const
{
    QVariant qax_result = property("Key");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _CVigilAlarm::MetaData() const
{
    QVariant qax_result = property("MetaData");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _CVigilAlarm::ServerGUID() const
{
    QVariant qax_result = property("ServerGUID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CVigilAlarm::SetServerGUID(const QString& value){ setProperty("ServerGUID", QVariant(value)); }

inline QString _CVigilAlarm::ServerIP() const
{
    QVariant qax_result = property("ServerIP");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CVigilAlarm::SetServerIP(const QString& value){ setProperty("ServerIP", QVariant(value)); }

inline QString _CVigilAlarm::ServerName() const
{
    QVariant qax_result = property("ServerName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CVigilAlarm::SetServerName(const QString& value){ setProperty("ServerName", QVariant(value)); }

inline QString _CVigilAlarm::ServerString() const
{
    QVariant qax_result = property("ServerString");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _CVigilAlarm::SiteName() const
{
    QVariant qax_result = property("SiteName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CVigilAlarm::SetSiteName(const QString& value){ setProperty("SiteName", QVariant(value)); }

inline VigilSDK::_CVigilAlarm* _CVigilAlarm::Clone()
{
    VigilSDK::_CVigilAlarm* qax_result = 0;
    qRegisterMetaType("_CVigilAlarm*", &qax_result);
    qRegisterMetaType("_CVigilAlarm", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline QString _CVigilAlarm::EndTime()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline QString _CVigilAlarm::EndTime(bool bUTC)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bUTC};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void _CVigilAlarm::FromRS(IDispatch* rs)
{
    void *_a[] = {0, (void*)&rs};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline bool _CVigilAlarm::IncludesCamera(int nCameraNumber)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline void _CVigilAlarm::SetCustomBinary(QVariant& pNewVal)
{
    void *_a[] = {0, (void*)&pNewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void _CVigilAlarm::SetCustomText(QString& pNewVal)
{
    void *_a[] = {0, (void*)&pNewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void _CVigilAlarm::SetEndTime()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void _CVigilAlarm::SetEndTime(bool bUTC)
{
    void *_a[] = {0, (void*)&bUTC};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline void _CVigilAlarm::SetEndTime(bool bUTC, const QString& rhs)
{
    void *_a[] = {0, (void*)&bUTC, (void*)&rhs};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void _CVigilAlarm::SetStartTime()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline void _CVigilAlarm::SetStartTime(bool bUTC)
{
    void *_a[] = {0, (void*)&bUTC};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline void _CVigilAlarm::SetStartTime(bool bUTC, const QString& rhs)
{
    void *_a[] = {0, (void*)&bUTC, (void*)&rhs};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
}

inline QString _CVigilAlarm::StartTime()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
    return qax_result;
}

inline QString _CVigilAlarm::StartTime(bool bUTC)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bUTC};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
    return qax_result;
}


inline bool CVigilAlarm::Acknowledged() const
{
    QVariant qax_result = property("Acknowledged");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CVigilAlarm::SetAcknowledged(bool value){ setProperty("Acknowledged", QVariant(value)); }

inline QString CVigilAlarm::AlarmGUID() const
{
    QVariant qax_result = property("AlarmGUID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CVigilAlarm::SetAlarmGUID(const QString& value){ setProperty("AlarmGUID", QVariant(value)); }

inline int CVigilAlarm::AlarmInput() const
{
    QVariant qax_result = property("AlarmInput");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CVigilAlarm::SetAlarmInput(int value){ setProperty("AlarmInput", QVariant(value)); }

inline QString CVigilAlarm::AlarmInputString() const
{
    QVariant qax_result = property("AlarmInputString");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline VigilSDK::EnumAlarmType CVigilAlarm::AlarmType() const
{
    QVariant qax_result = property("AlarmType");
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::EnumAlarmType*)qax_result.constData();
}
inline void CVigilAlarm::SetAlarmType(VigilSDK::EnumAlarmType value){ setProperty("AlarmType", QVariant(value)); }

inline QString CVigilAlarm::AlarmTypeString() const
{
    QVariant qax_result = property("AlarmTypeString");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int CVigilAlarm::BinaryLength() const
{
    QVariant qax_result = property("BinaryLength");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString CVigilAlarm::CameraNumbers() const
{
    QVariant qax_result = property("CameraNumbers");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CVigilAlarm::SetCameraNumbers(const QString& value){ setProperty("CameraNumbers", QVariant(value)); }

inline QByteArray CVigilAlarm::CustomBinary() const
{
    QVariant qax_result = property("CustomBinary");
    Q_ASSERT(qax_result.isValid());
    return *(QByteArray*)qax_result.constData();
}

inline VigilSDK::EnumCustomAlarmDataType CVigilAlarm::CustomDataType() const
{
    QVariant qax_result = property("CustomDataType");
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::EnumCustomAlarmDataType*)qax_result.constData();
}

inline QString CVigilAlarm::CustomText() const
{
    QVariant qax_result = property("CustomText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool CVigilAlarm::IsMetaData() const
{
    QVariant qax_result = property("IsMetaData");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CVigilAlarm::SetIsMetaData(bool value){ setProperty("IsMetaData", QVariant(value)); }

inline QString CVigilAlarm::Key() const
{
    QVariant qax_result = property("Key");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString CVigilAlarm::MetaData() const
{
    QVariant qax_result = property("MetaData");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString CVigilAlarm::ServerGUID() const
{
    QVariant qax_result = property("ServerGUID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CVigilAlarm::SetServerGUID(const QString& value){ setProperty("ServerGUID", QVariant(value)); }

inline QString CVigilAlarm::ServerIP() const
{
    QVariant qax_result = property("ServerIP");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CVigilAlarm::SetServerIP(const QString& value){ setProperty("ServerIP", QVariant(value)); }

inline QString CVigilAlarm::ServerName() const
{
    QVariant qax_result = property("ServerName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CVigilAlarm::SetServerName(const QString& value){ setProperty("ServerName", QVariant(value)); }

inline QString CVigilAlarm::ServerString() const
{
    QVariant qax_result = property("ServerString");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString CVigilAlarm::SiteName() const
{
    QVariant qax_result = property("SiteName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CVigilAlarm::SetSiteName(const QString& value){ setProperty("SiteName", QVariant(value)); }

inline VigilSDK::_CVigilAlarm* CVigilAlarm::Clone()
{
    VigilSDK::_CVigilAlarm* qax_result = 0;
    qRegisterMetaType("_CVigilAlarm*", &qax_result);
    qRegisterMetaType("_CVigilAlarm", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline QString CVigilAlarm::EndTime()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline QString CVigilAlarm::EndTime(bool bUTC)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bUTC};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void CVigilAlarm::FromRS(IDispatch* rs)
{
    void *_a[] = {0, (void*)&rs};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline bool CVigilAlarm::IncludesCamera(int nCameraNumber)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCameraNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline void CVigilAlarm::SetCustomBinary(QVariant& pNewVal)
{
    void *_a[] = {0, (void*)&pNewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void CVigilAlarm::SetCustomText(QString& pNewVal)
{
    void *_a[] = {0, (void*)&pNewVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void CVigilAlarm::SetEndTime()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void CVigilAlarm::SetEndTime(bool bUTC)
{
    void *_a[] = {0, (void*)&bUTC};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline void CVigilAlarm::SetEndTime(bool bUTC, const QString& rhs)
{
    void *_a[] = {0, (void*)&bUTC, (void*)&rhs};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void CVigilAlarm::SetStartTime()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline void CVigilAlarm::SetStartTime(bool bUTC)
{
    void *_a[] = {0, (void*)&bUTC};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline void CVigilAlarm::SetStartTime(bool bUTC, const QString& rhs)
{
    void *_a[] = {0, (void*)&bUTC, (void*)&rhs};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
}

inline QString CVigilAlarm::StartTime()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
    return qax_result;
}

inline QString CVigilAlarm::StartTime(bool bUTC)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bUTC};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
    return qax_result;
}


inline bool _CVigilAlarmManager::Listening() const
{
    QVariant qax_result = property("Listening");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CVigilAlarmManager::SetListening(bool value){ setProperty("Listening", QVariant(value)); }

inline QString _CVigilAlarmManager::LogFileDirectory() const
{
    QVariant qax_result = property("LogFileDirectory");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CVigilAlarmManager::SetLogFileDirectory(const QString& value){ setProperty("LogFileDirectory", QVariant(value)); }

inline int _CVigilAlarmManager::Port() const
{
    QVariant qax_result = property("Port");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CVigilAlarmManager::SetPort(int value){ setProperty("Port", QVariant(value)); }

inline void _CVigilAlarmManager::AddAlarm(VigilSDK::_CVigilAlarm* oAlarm)
{
    void *_a[] = {0, (void*)&oAlarm};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void _CVigilAlarmManager::ClearSuppressedAlarms()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline qlonglong _CVigilAlarmManager::ConvertDateToFileTime(const QVariant& vDate)
{
    qlonglong qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&vDate};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline qlonglong _CVigilAlarmManager::ConvertDateToFileTime(const QVariant& vDate, bool bUTC)
{
    qlonglong qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&vDate, (void*)&bUTC};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline bool _CVigilAlarmManager::FetchThumbnail(VigilSDK::_CVigilAlarm* oAlarm)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&oAlarm};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline VBA::_Collection* _CVigilAlarmManager::GetSuppressedAlarms()
{
    VBA::_Collection* qax_result = 0;
    qRegisterMetaType("VBA::_Collection*", &qax_result);
#ifdef QAX_DUMPCPP_VBA_H
    qRegisterMetaType("VBA::_Collection", qax_result);
#endif
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline bool _CVigilAlarmManager::IsAlarmSuppressed(const QString& sMetaData)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&sMetaData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline bool _CVigilAlarmManager::IsFetchingThumbnail(VigilSDK::_CVigilAlarm* oAlarm)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&oAlarm};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline IDispatch* _CVigilAlarmManager::Query(const QString& sFilter)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&sFilter};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline void _CVigilAlarmManager::SaveLog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void _CVigilAlarmManager::SaveSuppressionMetaData()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void _CVigilAlarmManager::SuppressAlarm(VigilSDK::EnumAlarmType eAlarmType, int nAlarmInput, const QString& sServerGUID)
{
    void *_a[] = {0, (void*)&eAlarmType, (void*)&nAlarmInput, (void*)&sServerGUID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void _CVigilAlarmManager::SuppressAlarm(VigilSDK::EnumAlarmType eAlarmType, int nAlarmInput, const QString& sServerGUID, const QString& sExpirationDate)
{
    void *_a[] = {0, (void*)&eAlarmType, (void*)&nAlarmInput, (void*)&sServerGUID, (void*)&sExpirationDate};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void _CVigilAlarmManager::UnsuppressAlarm(VigilSDK::EnumAlarmType eAlarmType, int nAlarmInput, const QString& sServerGUID)
{
    void *_a[] = {0, (void*)&eAlarmType, (void*)&nAlarmInput, (void*)&sServerGUID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}


inline bool CVigilAlarmManager::Listening() const
{
    QVariant qax_result = property("Listening");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CVigilAlarmManager::SetListening(bool value){ setProperty("Listening", QVariant(value)); }

inline QString CVigilAlarmManager::LogFileDirectory() const
{
    QVariant qax_result = property("LogFileDirectory");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CVigilAlarmManager::SetLogFileDirectory(const QString& value){ setProperty("LogFileDirectory", QVariant(value)); }

inline int CVigilAlarmManager::Port() const
{
    QVariant qax_result = property("Port");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CVigilAlarmManager::SetPort(int value){ setProperty("Port", QVariant(value)); }

inline void CVigilAlarmManager::AddAlarm(VigilSDK::_CVigilAlarm* oAlarm)
{
    void *_a[] = {0, (void*)&oAlarm};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void CVigilAlarmManager::ClearSuppressedAlarms()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline qlonglong CVigilAlarmManager::ConvertDateToFileTime(const QVariant& vDate)
{
    qlonglong qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&vDate};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline qlonglong CVigilAlarmManager::ConvertDateToFileTime(const QVariant& vDate, bool bUTC)
{
    qlonglong qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&vDate, (void*)&bUTC};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline bool CVigilAlarmManager::FetchThumbnail(VigilSDK::_CVigilAlarm* oAlarm)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&oAlarm};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline VBA::_Collection* CVigilAlarmManager::GetSuppressedAlarms()
{
    VBA::_Collection* qax_result = 0;
    qRegisterMetaType("VBA::_Collection*", &qax_result);
#ifdef QAX_DUMPCPP_VBA_H
    qRegisterMetaType("VBA::_Collection", qax_result);
#endif
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline bool CVigilAlarmManager::IsAlarmSuppressed(const QString& sMetaData)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&sMetaData};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline bool CVigilAlarmManager::IsFetchingThumbnail(VigilSDK::_CVigilAlarm* oAlarm)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&oAlarm};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline IDispatch* CVigilAlarmManager::Query(const QString& sFilter)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&sFilter};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline void CVigilAlarmManager::SaveLog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void CVigilAlarmManager::SaveSuppressionMetaData()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void CVigilAlarmManager::SuppressAlarm(VigilSDK::EnumAlarmType eAlarmType, int nAlarmInput, const QString& sServerGUID)
{
    void *_a[] = {0, (void*)&eAlarmType, (void*)&nAlarmInput, (void*)&sServerGUID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void CVigilAlarmManager::SuppressAlarm(VigilSDK::EnumAlarmType eAlarmType, int nAlarmInput, const QString& sServerGUID, const QString& sExpirationDate)
{
    void *_a[] = {0, (void*)&eAlarmType, (void*)&nAlarmInput, (void*)&sServerGUID, (void*)&sExpirationDate};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline void CVigilAlarmManager::UnsuppressAlarm(VigilSDK::EnumAlarmType eAlarmType, int nAlarmInput, const QString& sServerGUID)
{
    void *_a[] = {0, (void*)&eAlarmType, (void*)&nAlarmInput, (void*)&sServerGUID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}


inline VigilSDK::_CVigilDVR* _CVigilLiveAudioFeed::DVR() const
{
    VigilSDK::_CVigilDVR* qax_pointer = 0;
    qRegisterMetaType("_CVigilDVR*", &qax_pointer);
    qRegisterMetaType("_CVigilDVR", qax_pointer);
    QVariant qax_result = property("DVR");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::_CVigilDVR**)qax_result.constData();
}

inline int _CVigilLiveAudioFeed::DetectionVolume() const
{
    QVariant qax_result = property("DetectionVolume");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CVigilLiveAudioFeed::SetDetectionVolume(int value){ setProperty("DetectionVolume", QVariant(value)); }

inline int _CVigilLiveAudioFeed::OutputVolume() const
{
    QVariant qax_result = property("OutputVolume");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int _CVigilLiveAudioFeed::Prebuffer() const
{
    QVariant qax_result = property("Prebuffer");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CVigilLiveAudioFeed::SetPrebuffer(int value){ setProperty("Prebuffer", QVariant(value)); }

inline bool _CVigilLiveAudioFeed::StartFeed(int nChannel, int HWnd)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nChannel, (void*)&HWnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void _CVigilLiveAudioFeed::StopFeed()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}


inline VigilSDK::_CVigilDVR* CVigilLiveAudioFeed::DVR() const
{
    VigilSDK::_CVigilDVR* qax_pointer = 0;
    qRegisterMetaType("_CVigilDVR*", &qax_pointer);
    qRegisterMetaType("_CVigilDVR", qax_pointer);
    QVariant qax_result = property("DVR");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::_CVigilDVR**)qax_result.constData();
}

inline int CVigilLiveAudioFeed::DetectionVolume() const
{
    QVariant qax_result = property("DetectionVolume");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CVigilLiveAudioFeed::SetDetectionVolume(int value){ setProperty("DetectionVolume", QVariant(value)); }

inline int CVigilLiveAudioFeed::OutputVolume() const
{
    QVariant qax_result = property("OutputVolume");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int CVigilLiveAudioFeed::Prebuffer() const
{
    QVariant qax_result = property("Prebuffer");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CVigilLiveAudioFeed::SetPrebuffer(int value){ setProperty("Prebuffer", QVariant(value)); }

inline bool CVigilLiveAudioFeed::StartFeed(int nChannel, int HWnd)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nChannel, (void*)&HWnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void CVigilLiveAudioFeed::StopFeed()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}


inline VigilSDK::_CVigilResult* _CVigilVCM::Login(const QString& sUserName, const QString& sPassword, QString& sIPAddress)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&sUserName, (void*)&sPassword, (void*)&sIPAddress};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* _CVigilVCM::Login(const QString& sUserName, const QString& sPassword, QString& sIPAddress, int& nPort)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&sUserName, (void*)&sPassword, (void*)&sIPAddress, (void*)&nPort};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}


inline VigilSDK::_CVigilResult* CVigilVCM::Login(const QString& sUserName, const QString& sPassword, QString& sIPAddress)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&sUserName, (void*)&sPassword, (void*)&sIPAddress};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline VigilSDK::_CVigilResult* CVigilVCM::Login(const QString& sUserName, const QString& sPassword, QString& sIPAddress, int& nPort)
{
    VigilSDK::_CVigilResult* qax_result = 0;
    qRegisterMetaType("_CVigilResult*", &qax_result);
    qRegisterMetaType("_CVigilResult", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&sUserName, (void*)&sPassword, (void*)&sIPAddress, (void*)&nPort};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}


inline bool _CVigilExternalAlarm::ShowSocketError() const
{
    QVariant qax_result = property("ShowSocketError");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CVigilExternalAlarm::SetShowSocketError(bool value){ setProperty("ShowSocketError", QVariant(value)); }

inline bool _CVigilExternalAlarm::ShowSocketStatus() const
{
    QVariant qax_result = property("ShowSocketStatus");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CVigilExternalAlarm::SetShowSocketStatus(bool value){ setProperty("ShowSocketStatus", QVariant(value)); }

inline bool _CVigilExternalAlarm::SendAlarm(QString& sIP, int& nPort, int& nID, bool& bAlarm)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&sIP, (void*)&nPort, (void*)&nID, (void*)&bAlarm};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline bool _CVigilExternalAlarm::SendRequest(ATLREQUESTLib::IRequest** req, QString& sIP, int& nPort)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&req, (void*)&sIP, (void*)&nPort};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}


inline bool CVigilExternalAlarm::ShowSocketError() const
{
    QVariant qax_result = property("ShowSocketError");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CVigilExternalAlarm::SetShowSocketError(bool value){ setProperty("ShowSocketError", QVariant(value)); }

inline bool CVigilExternalAlarm::ShowSocketStatus() const
{
    QVariant qax_result = property("ShowSocketStatus");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CVigilExternalAlarm::SetShowSocketStatus(bool value){ setProperty("ShowSocketStatus", QVariant(value)); }

inline bool CVigilExternalAlarm::SendAlarm(QString& sIP, int& nPort, int& nID, bool& bAlarm)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&sIP, (void*)&nPort, (void*)&nID, (void*)&bAlarm};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline bool CVigilExternalAlarm::SendRequest(ATLREQUESTLib::IRequest** req, QString& sIP, int& nPort)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&req, (void*)&sIP, (void*)&nPort};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}


inline int _CVigilAudioTalk::Buffer() const
{
    QVariant qax_result = property("Buffer");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CVigilAudioTalk::SetBuffer(int value){ setProperty("Buffer", QVariant(value)); }

inline VigilSDK::_CVigilDVR* _CVigilAudioTalk::DVR() const
{
    VigilSDK::_CVigilDVR* qax_pointer = 0;
    qRegisterMetaType("_CVigilDVR*", &qax_pointer);
    qRegisterMetaType("_CVigilDVR", qax_pointer);
    QVariant qax_result = property("DVR");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::_CVigilDVR**)qax_result.constData();
}

inline int _CVigilAudioTalk::ErrorCode() const
{
    QVariant qax_result = property("ErrorCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _CVigilAudioTalk::ErrorDescription() const
{
    QVariant qax_result = property("ErrorDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool _CVigilAudioTalk::Mute() const
{
    QVariant qax_result = property("Mute");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CVigilAudioTalk::SetMute(bool value){ setProperty("Mute", QVariant(value)); }

inline bool _CVigilAudioTalk::MuteOnTalk() const
{
    QVariant qax_result = property("MuteOnTalk");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CVigilAudioTalk::SetMuteOnTalk(bool value){ setProperty("MuteOnTalk", QVariant(value)); }

inline int _CVigilAudioTalk::StatInput() const
{
    QVariant qax_result = property("StatInput");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int _CVigilAudioTalk::StatOutput() const
{
    QVariant qax_result = property("StatOutput");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool _CVigilAudioTalk::Talk() const
{
    QVariant qax_result = property("Talk");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CVigilAudioTalk::SetTalk(bool value){ setProperty("Talk", QVariant(value)); }

inline int _CVigilAudioTalk::VolumeMic() const
{
    QVariant qax_result = property("VolumeMic");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CVigilAudioTalk::SetVolumeMic(int value){ setProperty("VolumeMic", QVariant(value)); }

inline int _CVigilAudioTalk::VolumeSpeaker() const
{
    QVariant qax_result = property("VolumeSpeaker");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CVigilAudioTalk::SetVolumeSpeaker(int value){ setProperty("VolumeSpeaker", QVariant(value)); }

inline bool _CVigilAudioTalk::StartAudioTalk(int nCamera, int HWnd)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCamera, (void*)&HWnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline void _CVigilAudioTalk::StopAudioTalk()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}


inline int CVigilAudioTalk::Buffer() const
{
    QVariant qax_result = property("Buffer");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CVigilAudioTalk::SetBuffer(int value){ setProperty("Buffer", QVariant(value)); }

inline VigilSDK::_CVigilDVR* CVigilAudioTalk::DVR() const
{
    VigilSDK::_CVigilDVR* qax_pointer = 0;
    qRegisterMetaType("_CVigilDVR*", &qax_pointer);
    qRegisterMetaType("_CVigilDVR", qax_pointer);
    QVariant qax_result = property("DVR");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(VigilSDK::_CVigilDVR**)qax_result.constData();
}

inline int CVigilAudioTalk::ErrorCode() const
{
    QVariant qax_result = property("ErrorCode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString CVigilAudioTalk::ErrorDescription() const
{
    QVariant qax_result = property("ErrorDescription");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool CVigilAudioTalk::Mute() const
{
    QVariant qax_result = property("Mute");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CVigilAudioTalk::SetMute(bool value){ setProperty("Mute", QVariant(value)); }

inline bool CVigilAudioTalk::MuteOnTalk() const
{
    QVariant qax_result = property("MuteOnTalk");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CVigilAudioTalk::SetMuteOnTalk(bool value){ setProperty("MuteOnTalk", QVariant(value)); }

inline int CVigilAudioTalk::StatInput() const
{
    QVariant qax_result = property("StatInput");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int CVigilAudioTalk::StatOutput() const
{
    QVariant qax_result = property("StatOutput");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool CVigilAudioTalk::Talk() const
{
    QVariant qax_result = property("Talk");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CVigilAudioTalk::SetTalk(bool value){ setProperty("Talk", QVariant(value)); }

inline int CVigilAudioTalk::VolumeMic() const
{
    QVariant qax_result = property("VolumeMic");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CVigilAudioTalk::SetVolumeMic(int value){ setProperty("VolumeMic", QVariant(value)); }

inline int CVigilAudioTalk::VolumeSpeaker() const
{
    QVariant qax_result = property("VolumeSpeaker");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CVigilAudioTalk::SetVolumeSpeaker(int value){ setProperty("VolumeSpeaker", QVariant(value)); }

inline bool CVigilAudioTalk::StartAudioTalk(int nCamera, int HWnd)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nCamera, (void*)&HWnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline void CVigilAudioTalk::StopAudioTalk()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}


inline void __CVigilPlayback::FeedInitialized()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void __CVigilPlayback::FrameStatus()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}


inline void __CVigilLiveFeed::FrameStatus()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}


inline void __CVigilAlarmManager::AlarmReceived(VigilSDK::_CVigilAlarm* oAlarm)
{
    void *_a[] = {0, (void*)&oAlarm};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
}

inline void __CVigilAlarmManager::ThumbnailReceived(VigilSDK::_CVigilAlarm* oAlarm, const QString& sThumbnailFileName)
{
    void *_a[] = {0, (void*)&oAlarm, (void*)&sThumbnailFileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}



#endif

}

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::_CVigilLiveFeed *t)
{ Q_ASSERT(!t); return new VigilSDK::_CVigilLiveFeed; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::CVigilLiveFeed *t)
{ Q_ASSERT(!t); return new VigilSDK::CVigilLiveFeed; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::_CVigilDVR *t)
{ Q_ASSERT(!t); return new VigilSDK::_CVigilDVR; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::CVigilDVR *t)
{ Q_ASSERT(!t); return new VigilSDK::CVigilDVR; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::_CVigilResult *t)
{ Q_ASSERT(!t); return new VigilSDK::_CVigilResult; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::CVigilResult *t)
{ Q_ASSERT(!t); return new VigilSDK::CVigilResult; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::_CVigilCameraInfo *t)
{ Q_ASSERT(!t); return new VigilSDK::_CVigilCameraInfo; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::CVigilCameraInfo *t)
{ Q_ASSERT(!t); return new VigilSDK::CVigilCameraInfo; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::_CVigilPlayback *t)
{ Q_ASSERT(!t); return new VigilSDK::_CVigilPlayback; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::CVigilPlayback *t)
{ Q_ASSERT(!t); return new VigilSDK::CVigilPlayback; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::_CRect *t)
{ Q_ASSERT(!t); return new VigilSDK::_CRect; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::CRect *t)
{ Q_ASSERT(!t); return new VigilSDK::CRect; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::_IWindowSubclasser *t)
{ Q_ASSERT(!t); return new VigilSDK::_IWindowSubclasser; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::IWindowSubclasser *t)
{ Q_ASSERT(!t); return new VigilSDK::IWindowSubclasser; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::_IUserInputListener *t)
{ Q_ASSERT(!t); return new VigilSDK::_IUserInputListener; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::IUserInputListener *t)
{ Q_ASSERT(!t); return new VigilSDK::IUserInputListener; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::_CVigilRemotePlayback *t)
{ Q_ASSERT(!t); return new VigilSDK::_CVigilRemotePlayback; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::CVigilRemotePlayback *t)
{ Q_ASSERT(!t); return new VigilSDK::CVigilRemotePlayback; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::_CVigilCameraControl *t)
{ Q_ASSERT(!t); return new VigilSDK::_CVigilCameraControl; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::CVigilCameraControl *t)
{ Q_ASSERT(!t); return new VigilSDK::CVigilCameraControl; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::_CVigilAlarm *t)
{ Q_ASSERT(!t); return new VigilSDK::_CVigilAlarm; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::CVigilAlarm *t)
{ Q_ASSERT(!t); return new VigilSDK::CVigilAlarm; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::_CVigilAlarmManager *t)
{ Q_ASSERT(!t); return new VigilSDK::_CVigilAlarmManager; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::CVigilAlarmManager *t)
{ Q_ASSERT(!t); return new VigilSDK::CVigilAlarmManager; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::_CVigilLiveAudioFeed *t)
{ Q_ASSERT(!t); return new VigilSDK::_CVigilLiveAudioFeed; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::CVigilLiveAudioFeed *t)
{ Q_ASSERT(!t); return new VigilSDK::CVigilLiveAudioFeed; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::_CVigilVCM *t)
{ Q_ASSERT(!t); return new VigilSDK::_CVigilVCM; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::CVigilVCM *t)
{ Q_ASSERT(!t); return new VigilSDK::CVigilVCM; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::_CVigilExternalAlarm *t)
{ Q_ASSERT(!t); return new VigilSDK::_CVigilExternalAlarm; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::CVigilExternalAlarm *t)
{ Q_ASSERT(!t); return new VigilSDK::CVigilExternalAlarm; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::_CVigilAudioTalk *t)
{ Q_ASSERT(!t); return new VigilSDK::_CVigilAudioTalk; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::CVigilAudioTalk *t)
{ Q_ASSERT(!t); return new VigilSDK::CVigilAudioTalk; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::__CVigilPlayback *t)
{ Q_ASSERT(!t); return new VigilSDK::__CVigilPlayback; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::__CVigilLiveFeed *t)
{ Q_ASSERT(!t); return new VigilSDK::__CVigilLiveFeed; }

template<>
inline void *qMetaTypeConstructHelper(const VigilSDK::__CVigilAlarmManager *t)
{ Q_ASSERT(!t); return new VigilSDK::__CVigilAlarmManager; }

#endif

